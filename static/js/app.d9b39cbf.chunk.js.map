{"version":3,"sources":["src/screens/UserProfile/icons/defaultAvatar.png","src/utility/Authentication.js","src/store/AuthContext.js","src/screens/LogInScreen.js","src/screens/SignUpScreen.js","src/utility/APIConnection.js","src/screens/InstructorScreens/DashBoardStackNavigator/CourseEditScreen.js","src/screens/InstructorScreens/HomeStackNavigator/SearchScreenTest.js","src/screens/InstructorScreens/HomeStackNavigator/HomeStackNavigatorInstructor.js","src/component/CourseGridCard.js","src/screens/InstructorScreens/DashBoardStackNavigator/InstructorDashboard.js","src/component/ModuleEditComponent.js","src/component/ModuleEditComponentContainer.js","src/screens/InstructorScreens/DashBoardStackNavigator/EditModuleScreen.js","src/screens/InstructorScreens/DashBoardStackNavigator/EditCourseAndModuleTabScreen.js","src/screens/InstructorScreens/DashBoardStackNavigator/CreateCourse.js","src/component/ModuleView.js","src/screens/InstructorScreens/DashBoardStackNavigator/InstructorCourseScreen.js","src/component/CreateComponent.js","src/component/CreateText.js","src/screens/InstructorScreens/DashBoardStackNavigator/CreateContentScreen.js","src/component/UnitCardInstructor.js","src/screens/InstructorScreens/DashBoardStackNavigator/LessonCreationScreen.js","src/constants/themes.js","src/component/QuizEditComponent.js","src/screens/InstructorScreens/DashBoardStackNavigator/InstructorEditQuiz.js","src/screens/InstructorScreens/DashBoardStackNavigator/TabsInstructorCourseEdit.js","src/screens/InstructorScreens/DashBoardStackNavigator/DashBoardStackNavigatorInstructor.js","src/component/ui/IconButton.js","src/screens/UserProfile/EditProfile.js","src/screens/InstructorScreens/ProfileStackNavigator/InstructorProfile.js","src/screens/InstructorScreens/ProfileStackNavigator/ProfileStackNavigatorInstructor.js","src/screens/InstructorScreens/SettingsStackNavigator/InstructorSetting.js","src/screens/changeAuth/ChangePassword.js","src/screens/changeAuth/ChangeEmail.js","src/screens/InstructorScreens/SettingsStackNavigator/SettingStackNavigatorInstructor.js","src/component/Welcome.js","src/screens/InstructorScreens/WelcomeStackNavigation.js/WelcomeStackNavigationInstructor.js","src/screens/InstructorScreens/InstructorMainScreenTabs.js","src/component/StudentCourseGridCard.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentDashboard.js","src/component/QuizComponent.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentQuizView.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentUnitContentView.js","src/screens/StudentScreens/DashBoardStackNavigator/TabsStudentUnitView.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentLessonView.js","src/component/StudentModuleView.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentCourseView.js","src/screens/StudentScreens/DashBoardStackNavigator/StudentCourseDescription.js","src/screens/StudentScreens/DashBoardStackNavigator/DashBoardStackNavigatorStudent.js","src/screens/StudentScreens/HomeStackNavigator/StudentHome.js","src/screens/StudentScreens/HomeStackNavigator/HomeStackNavigatorStudent.js","src/screens/StudentScreens/ProfileStackNavigator/StudentProfile.js","src/screens/StudentScreens/ProfileStackNavigator/ProfileStackNavigatorStudent.js","src/screens/StudentScreens/SettingsStackNavigator/StudentSetting.js","src/screens/StudentScreens/SettingsStackNavigator/SettingStackNavigatorStudent.js","src/screens/StudentScreens/WelcomeStudentStack.js/WelcomeStackNavigationInstructor.js","src/screens/StudentScreens/StudentMainScreenTabs.js","App.js","src/screens/StudentScreens/DashBoardStackNavigator/icons/appProfile.png"],"names":["module","exports","url","Authentication","user_email","user_password","a","async","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","AsyncStorage","setItem","user_name","user_type","u","p","e","status","message","AuthContext","createContext","token","user_id","isAuthenticated","authenticate","userid","logout","AuthContextProvider","children","useState","authToken","setAuthToken","authUserid","setAuthUserid","authUserType","setAuthUserType","value","Platform","OS","removeItem","Provider","AnimatedView","animated","View","LogInScreen","navigation","setEmail","setPassword","authCtx","useContext","flip","set","logoAnim","useSpring","to","width","height","borderRadius","from","backgroundColor","reset","reverse","delay","onRest","style","styles","container","top","blueWave","Text","title","KeyboardAvoidingView","behavior","login","email","TextInput","input","label","mode","left","Icon","name","onChangeText","secureTextEntry","TouchableOpacity","onPress","api","alert","signIn","getItem","user","parse","clear","catch","reason","loginBttn","loginText","signup","divider","navigate","firstSgnUpBttn","signupText","StyleSheet","create","flex","alignItems","alignSelf","textAlign","fontSize","fontWeight","color","marginTop","borderBottomEndRadius","borderBottomStartRadius","justifyContent","position","marginBottom","logoShape","bottom","pwHolder","paddingVertical","paddingHorizontal","borderColor","borderWidth","forgotText","textDecorationLine","SignUpScreen","selectedIndex","setSelectedIndex","check1","setCheck1","isSecureEntry","setSecureEntry","isSecureEntry2","setSecureEntry2","setName","setUserType","setMessage","confirmPW","setConfirmPW","marginVertical","form","outlineColor","newText","right","prev","HelperText","type","visible","length","buttons","textStyle","selectedTextStyle","selectedButtonStyle","checkbox","checked","checkedColor","uncheckedColor","Button","includes","match","payload","res","jsonRes","err","contentStyle","disabled","marginLeft","marginRight","flexDirection","APIConnection","this","unit_id","Accept","checkUnauthorized","error","lesson_id","module_id","class_id","classID","class_name","class_descrip","unitID","newName","unit_name","unit_index","ModuleID","lesson_name","lesson_descrip","lesson_index","instructor_id","userType","newBio","newPic","user_pp","user_bio","newEmail","currentPassword","currentEmail","newPassword","lessonID","quizID","quizQuestion","quizAnswers","quiz_id","quizdata_question","quizdata_answers","quiz_name","quizDataID","quizdata_id","courseID","moduleID","content","content2","accept","unit_content","unit_content_type","keyword","courseName","courseDesc","lessonName","lessonId","less_description","less_index","mod_id","newModuleName","newModuleDescription","module_name","module_descrip","moduleName","description","CourseEditScreen","route","params","className","setClassName","courseDescription","setCourseDescription","apiConnection","isFocused","useIsFocused","useEffect","getClassByID","result","SafeAreaView","ScrollView","placeholderName","returnKeyType","defaultValue","text","placeholderDesc","multiline","bottomContainer","addBttn","editCourseForInstructor","goBack","addText","inputContainerStyle","margin","inputStyle","categoryStyle","paddingTop","saveButton","paddingBottom","gridItem","elevation","shadowColor","shadowOpacity","shadowOffset","shadowRadius","overflow","boxes","searchHolder","searchBttn","searchText","createNativeStackNavigator","CourseGridCard","onDelete","Pressable","android_ripple","pressed","button","buttonPressed","innerContainer","buttonContainer","Alert","cancelable","size","opacity","padding","InstructorDashboard","setData","deleteClass","useLayoutEffect","getClasses","FlatList","keyExtractor","item","renderItem","itemData","numColumns","addClass","screen","ModuleEditComponent","allData","lessonData","ModuleName","backgroundCard","row","textInput","placeholder","index","findIndex","newAllData","changeType","updateModuleNameToParent","filter","deleteModule","flexWrap","i","push","lessons","buttonLabel","getLessonsView","postLesson","addNewLesson","marginHorizontal","box","minWidth","selected","selectedLabel","ModuleEditComponentContainer","stateData","setStateData","useTransition","x","y","enter","map","key","EditModuleScreen","finalData","setFinalData","isLoading","setIsLoading","newModIndex","setnewModIndex","React","updateState","forceUpdate","useCallback","processAPILesson","lessonArr","newLesson","processAPIModuleData","returnData","newModule","getAllModulesForClass","element","getLessonsInModule","json2","fetchAPI","ActivityIndicator","deleteList","tobeDeleted","j","Promise","all","editModule","createModule","deleteModuleID","onSave","titleStyle","buttonStyle","containerStyle","fab","icon","newEmptyModule","newStateData","addNewModule","contentView","buttonsContainer","subHeader","Tab","createMaterialTopTabNavigator","EditCourseAndModuleTabScreen","Navigator","Screen","component","initialParams","CreateCourse","courseText","setCourseText","setCourseDesc","onSaved","postClass","ms","resolve","setTimeout","placeholderText","ModuleView","onClickFunction","layoutHeight","setLayoutHeight","isExpanded","classes","activeOpacity","header","headerText","Module_Title","FontAwesome5","transform","rotate","Lessons","titleText","separator","paddingLeft","paddingRight","InstructorCourseView","forEach","Module_ID","UIManager","setLayoutAnimationEnabledExperimental","courseTitleBackground","lessContainer","setMultiSelect","multiSelect","LayoutAnimation","configureNext","Presets","spring","array","updateLayout","editButton","menu","lesson","lessonCompletion","alignContent","lessonNum","searchIcon","homeIcon","settingIcon","profileIcon","textHolder","Dimensions","get","Content","props","selectable","TextContent","CreateContent","unitName","setText","textItems","setTextItems","useRef","unitNameEntry","setUnitNameEntry","playing","modalVisible1","setModalVisible1","modalVisible2","setModalVisible2","modalVisible3","setModalVisible3","link","setLink","linkItems","setLinkItems","setLinkItemsAPI","setVideoDisplay","YouTubeGetID","undefined","split","getUnitByID","unitjson","getUnitContent","videolink","linkInput","controls","play","videoId","webViewStyle","Modal","animationType","transparent","onRequestClose","TouchableWithoutFeedback","modalView","centeredView","modalText","buttonClose","handleLinks","textInput2","editable","handleText","onPressOut","bottomModal","contentContainerStyle","scroll","editUnitName","editUnitContent","video","buttonOpen","addURL","addQuiz","UnitEditCard","cardContainer","Title","Actions","LessonCreation","newLessonName","setLessonName","myData","setMyData","setLessonData","deleteLesson","refreshPage","getSectionsPerLesson","onUnitPress","deleteUnit","getSingleLessonForLessonCreation","maxLength","LessonID","lessDescription","lessIndex","modID","putLessonNameForLessonCreation","changeName","nestedScrollEnabled","ListEmptyComponent","addButton","addUnitForLessonCreation","addTextButton","sectionText","deleteButton","footer","COLORS","QuizEditComponent","invalidChars","correct_option","quizData","setQuizData","setQuizID","currentIndex","setCurrentIndex","setDeleteList","correctAnswer","setCorrectAnswer","dummyState","setDummyState","iQuizData","setIQuizData","processJSON","quizDataResponse","answers","replace","answersJson","choices","answer","onLeftArrowPressed","onRightArrowPressed","valid","allStringInQuestion","i2","question","quizdata_answersTemporary","string1","editQuizData","createQuizData","deletedQuestionID","deleteQuizData","splice","onCreate","newQuizData","getUnitQuizContent","createNewQuizForUnit","getQuizData","fetchMyAPI","StatusBar","barStyle","arrowButton","arrowButtonContainer","questionInput","newQuestion","updateQuizQuestionToParent","answerInput","newAnswer","updateQuizAnswerToParent","RadioButton","updateCorrectAnswer","userInfo","caption","lineHeight","avatarShadow","bioBox","bioText","list","InstructorQuizEdit","quizJSONData","setQuizJSONData","TabInstructorCourseEdit","Stack","DashBoardStackNavigatorInstructor","screenOptions","headerShown","options","headerTitleAlign","IconButton","Ionicons","EditProfile","setVisible","hideDialog","getUserForProfilePage","setNewName","setNewBio","edit","activeOutlineColor","selectionColor","autoCorrect","submitButtom","editUserProfile","submitText","Portal","Dialog","onDismiss","dialogButton","avatarButton","InstructorProfile","classData","setClassData","mounted","current","rounded","source","require","userAbout","FAB","userClass","ProfileStackNavigatorInstructor","headerRight","tintColor","InstructorSetting","actions","Divider","ChangePassword","currentPW","getCurrentPW","newPW","getNewPW","getConfirmPW","isSecureEntry3","setSecureEntry3","auth","inputField","changePassword","onSubmit","ChangeEmail","mailFormat","currPW","getCurrPW","getNewEmail","checkEmail","changeEmail","SettingStackNavigatorInstructor","AnimatedText","Welcome","textAnim","animationDuration","viewAnim","colors","white","teachAnim","learnAnim","studyAnim","baseText","fontFamily","WelcomeStackNavigatorInstructor","createBottomTabNavigator","InstructorMainScreenTabs","initialRouteName","tabBarActiveTintColor","tabBarIcon","focused","MaterialCommunityIcons","StudentCourseGridCard","refresh","state","setState","dropClass","getClassProgress","arr","AllUnits","len","c","completed","toFixed","Cover","resizeMode","uri","adjustsFontSizeToFit","Badge","numberOfLines","progress","StudentDashboard","classId","QuizComponent","allQuestions","setAllQuestions","currentQuestionIndex","setCurrentQuestionIndex","currentOptionSelected","setCurrentOptionSelected","correctOption","setCorrectOption","isOptionsDisabled","setIsOptionsDisabled","score","setScore","showNextButton","setShowNextButton","showScoreModal","setShowScoreModal","handleNext","Animated","timing","toValue","duration","useNativeDriver","start","Value","progressAnim","interpolate","inputRange","outputRange","renderQuestion","option","selectedOption","validateAnswer","iconStyle","renderOptions","postProgress","StudentQuizView","StudentUnitContentView","videoContent","setVideoContent","unitText","setUnitText","newVideoData","contentString","test","Paragraph","TabsStudentUnitView","StudentLessonView","instID","LessonData","getUnitProgress","fetchData","entireView","lessonNameContainer","it","unitTouch","unit","StudentModuleView","instructorID","setProgress","modProg","setModProg","mProg","getModuleProgress","lProg","getLessonProgress","lessonProg","StudentCourseView","CourseDescriptionScreen","instructor_name","usersClasses","setUserClasses","card","maxWidth","Image","shadowOverlay","flexGrow","courseDescript","enroll","bool","enrolled","signUpForClass","classDesc","DashBoardStackNavigatorStudent","StudentClassSearchScreenTest","searchTerm","setSearchTerm","search","getSearchClassResultSearchScreen","processed","resultID","processSearchResult","course_id","course_name","course_descrip","HomeStackNavigatorStudent","StudentProfile","ProfileStackNavigatorStudent","StudentEditProfile","StudentSetting","SettingStackNavigatorStudent","WelcomeStackNavigatorStudent","StudentMainScreenTabs","AuthStack","headerStyle","headerTintColor","AuthenticatedStack","Navigation","NavigationContainer","Root","isTryingLogin","setIsTryingLogin","storedToken","storedUserID","storedUserType","fetchToken","App"],"mappings":"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","file":"static/js/app.d9b39cbf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.30d9bf23.png\";","import AsyncStorage from '@react-native-async-storage/async-storage';\r\n//var url = \"http://localhost:3001/api\"\r\nvar url = \"https://brainbreezeapp.education/api\";\r\n\r\n\r\nclass Authentication{\r\n    async signIn(user_email, user_password){\r\n        console.log(user_email, user_password);\r\n        if(user_email!=='' && user_password!==''){\r\n            await fetch(`${url}/user/signin`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \r\n                    user_email: user_email,\r\n                    user_password: user_password\r\n                })\r\n            }).then(response => response.json()).then(data => {\r\n                AsyncStorage.setItem(\"@user_info\", JSON.stringify(data));\r\n                console.log(data);\r\n            })\r\n        }\r\n    }\r\n\r\n    async signUp(user_email, user_password, user_name, user_type){\r\n        if(u!=='' && p!=='' && e!==''){\r\n            let response = await fetch(`${url}/user/create`, {\r\n                method: 'POST',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \r\n                    user_name: user_name,\r\n                    user_email: user_email,\r\n                    user_password: user_password,\r\n                    user_type: user_type\r\n                })\r\n            })\r\n            console.log(response.status);\r\n            return await response.json();\r\n          \r\n        }\r\n        return {message:\"No input!\"};\r\n    }\r\n}\r\nexport default Authentication;","import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { View, Text, StyleSheet,KeyboardAvoidingView, Platform, TouchableOpacity} from \"react-native\";\r\nimport { createContext, useEffect, useState } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  token: '',\r\n  user_id: null,\r\n  isAuthenticated: false,\r\n\r\n  user_type: null,\r\n  authenticate: (token, userid, user_type) => {},\r\n\r\n  logout: () => {},\r\n});\r\n\r\nfunction AuthContextProvider({ children }) {\r\n  const [authToken, setAuthToken] = useState();\r\n  const [authUserid, setAuthUserid] = useState();\r\n  const [authUserType, setAuthUserType] = useState();\r\n\r\n\r\n  //these functions are part of the auth context\r\n  //what happens when users logged in successfully\r\n\r\n  const authenticate = async(token, userid, user_type)=>{\r\n    \r\n    try {\r\n     setAuthToken(token);\r\n     setAuthUserid(userid);\r\n     setAuthUserType(user_type);\r\n\r\n     await AsyncStorage.setItem('token', token);\r\n\r\n     if (Platform.OS === 'ios' || Platform.OS === 'android') {\r\n     await AsyncStorage.setItem('user_id', JSON.stringify(userid));\r\n      await AsyncStorage.setItem('user_type', JSON.stringify(user_type));\r\n     } else {   \r\n       await AsyncStorage.setItem('user_id', userid);\r\n      await AsyncStorage.setItem('user_type', user_type)   \r\n     }\r\n  \r\n     return true;\r\n    \r\n    } catch (exception) {\r\n     return false;\r\n    }\r\n  \r\n   }\r\n  \r\n  \r\n     //AsyncStorage.removeItem('token');\r\n     //AsyncStorage.removeItem('user_id');\r\n     const logout = async() => {\r\n       try {\r\n         await AsyncStorage.removeItem('token');\r\n         await AsyncStorage.removeItem('user_id');\r\n         await AsyncStorage.removeItem('user_type');\r\n\r\n\r\n         setAuthToken(null);\r\n         setAuthUserid('');\r\n         setAuthUserType('');\r\n        \r\n         return true;\r\n     }\r\n     catch(exception) {\r\n         return false;\r\n     }\r\n }\r\n \r\n  //these values are what gonna be availble to context users\r\n  //!! convert authToken to boolean (true if exist, false if not exist)\r\n  const value = {\r\n    token: authToken,\r\n    user_id: authUserid,\r\n    user_type: authUserType,\r\n    isAuthenticated: !!authToken,\r\n    authenticate: authenticate,\r\n    logout: logout,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport default AuthContextProvider;\r\n","import React, { useState, useContext } from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport Authentication from \"../utility/Authentication\";\r\nimport { AuthContext } from \"../store/AuthContext\";\r\nconst API_URL =\r\n  Platform.OS === \"ios\" ? \"http://localhost:5000\" : \"http://10.0.2.2:5000\";\r\n//const API_URL =  'http://localhost:3001/api/user';\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { color, renderNode } from \"react-native-elements/dist/helpers\";\r\nimport { colors } from \"react-native-elements\";\r\n\r\nconst AnimatedView = animated(View);\r\n\r\nexport default function LogInScreen({ navigation }) {\r\n  //TODO: Add proper set state on text input in order to recieve and update as user types their info\r\n  const [user_email, setEmail] = useState(\"\");\r\n  const [user_password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isSecureEntry, setSecureEntry] = useState(true);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const [flip, set] = useState(false);\r\n  const logoAnim = useSpring({\r\n    to: { \r\n    //backgroundColor: \"#94c9ff\",\r\n    width: 120,\r\n    height: 120,\r\n    borderRadius: 16,\r\n   // borderWidth: 4,\r\n    //borderColor: \"#c7f1ff\"\r\n  },\r\n    from: {\r\n      backgroundColor: \"#E8EAED\",\r\n      width: 110,\r\n      height: 110,\r\n      borderRadius: 15,\r\n     // borderWidth: 0,\r\n     // borderColor: colors.white\r\n\r\n\r\n    }, \r\n    reset: true,\r\n    reverse: flip,\r\n    delay: 3000,\r\n    //config: config.molasses,\r\n    onRest: () => set(!flip),\r\n  });\r\n\r\n\r\n  const onSubmitHandler = () => {\r\n    console.log(\"email and pass: \", user_email, user_password);\r\n    const api = new Authentication();\r\n    if (user_email == \"\" || user_password == \"\") {\r\n      alert(\"Please enter email or password\");\r\n    } else {\r\n      api.signIn(user_email, user_password).then(() => {\r\n        AsyncStorage.getItem(\"@user_info\")\r\n          .then((data) => {\r\n            const user = JSON.parse(data);\r\n            console.log(\"Log in user id debug\" + user);\r\n            console.log(\"log in user token\" + user.token);\r\n            console.log(\"log in user id\" + user.user_id);\r\n            const userID = JSON.stringify(user.user_id);\r\n            if (user && user.token) {\r\n              //alert(\"Authorized!\");\r\n\r\n              authCtx.authenticate(user.token, user.user_id, user.user_type);\r\n            } else {\r\n              alert(\"Not Authorized!\");\r\n              AsyncStorage.clear();\r\n            }\r\n          })\r\n          .catch((reason) => {\r\n            console.log(reason);\r\n          });\r\n      });\r\n    }\r\n  };\r\n\r\n  // const renderAnimatedLogo = () => {\r\n  //   return (\r\n\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={top.blueWave}>\r\n        <AnimatedView\r\n          style={{\r\n            width: 80,\r\n            height: 80,\r\n           // backgroundColor: \"#46e891\",\r\n\r\n            ...logoAnim,\r\n          }}\r\n        >\r\n          <Text style={styles.title}>Brain Breeze</Text>\r\n        </AnimatedView>\r\n      </View>\r\n\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n        style={login.email}\r\n      >\r\n        <TextInput\r\n          style={login.input}\r\n          label={\"Email\"}\r\n          mode={\"outlined\"}\r\n          left={<TextInput.Icon name=\"email\" />}\r\n          onChangeText={setEmail}\r\n        />\r\n\r\n        <TextInput\r\n          secureTextEntry={true}\r\n          style={login.input}\r\n          label={\"Password\"}\r\n          mode={\"outlined\"}\r\n          left={<TextInput.Icon name=\"lock\" />}\r\n          onChangeText={setPassword}\r\n        />\r\n        <Text>{message ? message : null}</Text>\r\n\r\n        {/*Emmanuel gave property onPress to TouchableOpacity tag*/}\r\n        <TouchableOpacity onPress={onSubmitHandler}>\r\n          <View style={login.loginBttn}>\r\n            <Text style={login.loginText}>Login</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      </KeyboardAvoidingView>\r\n\r\n      <View style={signup.divider}>\r\n        <Text style={signup.divider}>Don't have an account?</Text>\r\n      </View>\r\n\r\n      <TouchableOpacity\r\n        style={signup.container}\r\n        onPress={() => navigation.navigate(\"SignUp\")}\r\n      >\r\n        <View style={signup.firstSgnUpBttn}>\r\n          <Text style={signup.signupText}>Sign Up</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //alignSelf: 'stretch',\r\n    flex: 1,\r\n\r\n    backgroundColor: \"#E8EAED\",\r\n    alignItems: \"center\",\r\n   // paddingTop: 0,\r\n  },\r\n\r\n  title: {\r\n    //paddingHorizontal:11,\r\n    alignSelf:\"center\",\r\n\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"#4970FA\",\r\n    marginTop:15,\r\n   // top:15\r\n  },\r\n});\r\n\r\nconst top = StyleSheet.create({\r\n  blueWave: {\r\n    alignSelf: \"stretch\",\r\n\r\n    flex: 1,\r\n    backgroundColor: \"#4970FA\",\r\n    borderBottomEndRadius: 200,\r\n    borderBottomStartRadius: 200,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"relative\",\r\n    marginBottom: 300,\r\n  },\r\n\r\n  logoShape: {\r\n    position: \"relative\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#E8EAED\",\r\n    width: 110,\r\n    height: 110,\r\n    borderRadius: 15, //'15%',\r\n  },\r\n});\r\n\r\nconst login = StyleSheet.create({\r\n  email: {\r\n    position: \"absolute\",\r\n    bottom: 140,\r\n    //width: '100%'\r\n    width: 100,\r\n    //flexDirection: 'row'\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  input: {\r\n    position: \"relative\",\r\n    backgroundColor: \"white\",\r\n    bottom: 30,\r\n    width: 250,\r\n  },\r\n\r\n  pwHolder: {\r\n    position: \"relative\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    bottom: 25,\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n    borderRadius: 60,\r\n    marginTop: 10,\r\n    width: 250,\r\n  },\r\n\r\n  loginBttn: {\r\n    width: 250,\r\n    position: \"relative\",\r\n    //height: 60,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 60,\r\n    backgroundColor: \"#4970FA\",\r\n    //marginTop: 10,\r\n    //top: 10,\r\n    //textAlign: 'center',\r\n    color: \"white\",\r\n    //color: 'white',\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  loginText: {\r\n    color: \"white\",\r\n    //fontSize: 22,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nconst signup = StyleSheet.create({\r\n  container: {\r\n    bottom: 40,\r\n  },\r\n  divider: {\r\n    bottom: 25,\r\n    fontWeight: \"bold\",\r\n    color: \"#6B6B6B\",\r\n    position: \"relative\",\r\n  },\r\n\r\n  firstSgnUpBttn: {\r\n    width: 250,\r\n\r\n    position: \"relative\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 60,\r\n    backgroundColor: \"#4970FA\",\r\n    //marginTOP:0,\r\n\r\n    //textAlign: 'center',\r\n    color: \"white\",\r\n    //color: 'white',\r\n    alignItems: \"center\",\r\n  },\r\n  signupText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nconst forgotPsswrd = StyleSheet.create({\r\n  forgotText: {\r\n    position: \"relative\",\r\n    color: \"#6B6B6B\",\r\n    fontWeight: \"bold\",\r\n\r\n    bottom: 10,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n","import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet} from \"react-native\";\r\nimport { ButtonGroup, CheckBox } from 'react-native-elements';\r\nimport { TextInput, Button, HelperText} from \"react-native-paper\";\r\n\r\nconst API_URL =  'https://brainbreezeapp.education/api/user/create';\r\n//import APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function SignUpScreen({navigation}) {\r\n  const mailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n\r\n  const [selectedIndex, setSelectedIndex] = useState(2);\r\n  const [check1, setCheck1] = useState(false);\r\n  const [isSecureEntry, setSecureEntry] = useState(true);\r\n  const [isSecureEntry2, setSecureEntry2] = useState(true);\r\n\r\n\r\n\r\n  //TODO: Add proper set state on text input in order to recieve and update as user types their info\r\n  const [user_email, setEmail] = useState('');\r\n  const [user_name, setName] = useState('');\r\n  const [user_password, setPassword] = useState('');\r\n  const [user_type, setUserType] = useState('string');\r\n  const [message, setMessage] = useState('');\r\n  const [confirmPW, setConfirmPW] = useState(''); \r\n\r\n\r\n  const emailError = () => {\r\n    if(user_email.match(mailFormat)){\r\n      return false; \r\n    }else{\r\n      return true; \r\n    }\r\n  }\r\n\r\n  const passwordHelper = () => {\r\n    return (user_password.length < 8); \r\n  }\r\n\r\n\r\n  const onSubmitHandler = () => {\r\n    if(user_name === null){\r\n      alert(\"Name cannot be empty\");\r\n      return; \r\n    }\r\n    console.log(user_email + user_password);\r\n\r\n    if(!user_email.includes('@')){\r\n      alert(\"Not a valid email\");\r\n      return; \r\n    }\r\n    if(user_password.length < 8){\r\n      alert(\"Password needs to be at least 8 characters\");\r\n      return;\r\n    }\r\n\r\n    if(!user_password.match(confirmPW)){\r\n      alert(\"Passwords do not match.\");\r\n      return; \r\n    }\r\n\r\n    const payload = {\r\n        user_name,\r\n        user_email,\r\n        user_password,\r\n        user_type\r\n    };\r\n    fetch(API_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n    })\r\n    .then(async res => { \r\n        try {\r\n            const jsonRes = await res.json();\r\n            if (res.status !== 201) {\r\n                setMessage(jsonRes.message);\r\n                alert(\"Email already in use.\")\r\n            } else {\r\n                setMessage(jsonRes.message);\r\n                alert(\"Account created!\");\r\n                navigation.navigate('LogIn');\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        };\r\n    })\r\n    .catch(err => {\r\n        console.log(err);\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n    <View style = {styles.container}>\r\n      \r\n      <Text style ={styles.title}>Register</Text>\r\n\r\n      <Text style ={[styles.title, {\r\n        fontSize:14,\r\n        fontWeight: 'normal',\r\n        color: '#000',\r\n        marginVertical: 10\r\n      }]}>Enter the following information to create an account.</Text>\r\n\r\n \r\n      <View style={styles.form}>\r\n        <TextInput \r\n            style={styles.input}\r\n            label={'Name'} \r\n            mode={'outlined'}\r\n            outlineColor={'#4970FA'}\r\n            value={''}\r\n            left={<TextInput.Icon name='account'/>}\r\n            onChangeText={newText => setName(newText)}\r\n        />\r\n\r\n        <TextInput \r\n            style={styles.input}\r\n            label={'Email'} \r\n            mode={'outlined'}\r\n            outlineColor={'#4970FA'}\r\n            left={<TextInput.Icon name='email'/>}\r\n            value={''}\r\n            onChangeText={newText => setEmail(newText)}\r\n          />\r\n          {/* <HelperText type='error' visible={emailError()}>\r\n            Email Address is invalid\r\n          </HelperText> */}\r\n\r\n        <TextInput \r\n          secureTextEntry={isSecureEntry} \r\n          style={styles.input}\r\n          label={'Password'} \r\n          mode={'outlined'}\r\n          value={''}\r\n          left={<TextInput.Icon name='lock'/>}\r\n          right={  \r\n              <TextInput.Icon name=\"eye\"\r\n                onPress={() => setSecureEntry(prev => !prev)}\r\n              />\r\n          }\r\n          outlineColor={'#4970FA'}\r\n          onChangeText={newText => setPassword(newText)}\r\n        />\r\n        <HelperText type='info' visible={passwordHelper()} style={{color:'#000'}}>\r\n            Password needs to be at least 8 characters long.\r\n          </HelperText>\r\n\r\n\r\n          <TextInput \r\n          secureTextEntry={isSecureEntry2} \r\n          style={styles.input}\r\n          label={'Confirm Password'} \r\n          mode={'outlined'}\r\n          value={''}\r\n          left={<TextInput.Icon name='lock'/>}\r\n          right={ <TextInput.Icon \r\n            name=\"eye\"\r\n            onPress={() => setSecureEntry2(prev => !prev)}\r\n          />}\r\n          outlineColor={'#4970FA'}\r\n          onChangeText={newText => setConfirmPW(newText)}\r\n        />\r\n    \r\n       \r\n\r\n      <Text style={styles.status}>Are you a...</Text>\r\n        <ButtonGroup\r\n          buttons={['Student', 'Educator']}\r\n          selectedIndex={selectedIndex}\r\n          \r\n          onPress={(value) => {\r\n            setSelectedIndex(value);\r\n            if(value == 0){\r\n              setUserType('student');\r\n            } else if(value == 1 ){\r\n              setUserType('instructor');\r\n            }\r\n          }}\r\n          textStyle={{color:'#000'}}\r\n          selectedTextStyle={{color:'#fff'}}\r\n          selectedButtonStyle={{backgroundColor: '#4970FA'}}\r\n          />\r\n\r\n\r\n        <View style={styles.checkbox}>\r\n          <CheckBox\r\n            color={'#4970FA'}\r\n            checked={check1}\r\n            onPress={() => setCheck1(!check1)}\r\n            checkedColor={'#4970FA'}\r\n            uncheckedColor={'#000'}\r\n          />\r\n          <Text>By checking, you Agree to our Terms of Use and understand our privacy policy. \r\n              You may recieve notifications via email.</Text>\r\n        </View>\r\n\r\n        <Button \r\n          mode=\"contained\" \r\n          onPress={onSubmitHandler} \r\n          contentStyle={{\r\n            height:50,\r\n          }}\r\n          color={'#4970FA'}\r\n          disabled={!check1}\r\n          style={{\r\n            marginTop:15\r\n          }}\r\n        >\r\n          Create Account\r\n        </Button>\r\n        \r\n        \r\n\r\n        </View>\r\n  \r\n  </View>\r\n         \r\n\r\n\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //alignSelf: 'stretch',\r\n    flex: 1,\r\n    backgroundColor: '#E8EAED',\r\n  },\r\n\r\n\r\n  title: {\r\n    top:25,\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"#4970FA\",\r\n    alignSelf:'center'\r\n  },\r\n\r\n  form: {\r\n    marginLeft: 20,\r\n    marginRight: 20\r\n  },\r\n\r\n  input: {\r\n    marginTop: 20\r\n  },\r\n\r\n  status: {\r\n    fontWeight:\"bold\",\r\n    textAlign:\"center\",\r\n    marginTop: 20\r\n  },\r\n\r\n\r\n  \r\n  checkbox: {\r\n    flexDirection: 'row',\r\n    marginTop: 10,\r\n    marginRight: 60\r\n  },\r\n\r\n})\r\n\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../store/AuthContext\";\r\n//var url = \"http://localhost:3001/api\";\r\nvar url = \"https://brainbreezeapp.education/api\";\r\n\r\n\r\n\r\n\r\nclass APIConnection {\r\n  constructor() {\r\n    this.authCtx = useContext(AuthContext);\r\n    this.token = this.authCtx.token;\r\n    this.user_id = this.authCtx.user_id;\r\n  }\r\n\r\n  checkUnauthorized(json) {\r\n    if (json.status == 401) {\r\n      this.authCtx.logout();\r\n    }\r\n  }\r\n\r\n  async getUnitProgress(unit_id) {\r\n    try {\r\n      const response = await fetch(\r\n        `${url}/progress/findByUnit/${unit_id}/${this.user_id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getLessonProgress(lesson_id) {\r\n    try {\r\n      const response = await fetch(\r\n        `${url}/progress/findByLessonAndUser/${lesson_id}/${this.user_id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getModuleProgress(module_id) {\r\n    try {\r\n      const response = await fetch(\r\n        `${url}/progress/findByModuleAndUser/${module_id}/${this.user_id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getClassProgress(class_id) {\r\n    try {\r\n      const response = await fetch(\r\n        `${url}/progress/findByClassAndUser/${class_id}/${this.user_id}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  //student enroll\r\n  async signUpForClass(classID) {\r\n    try {\r\n      const response = await fetch(`${url}/class/signup/` + classID, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        //    body: JSON.stringify({\r\n\r\n        //      class_id: classID\r\n        //  })\r\n         });\r\n        const json = await response.json();\r\n        this.checkUnauthorized(response);\r\n\r\n\r\n        return json;\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.authCtx.logout\r\n      } finally {\r\n      }\r\n    }\r\n\r\n\r\n    async editCourseForInstructor(classID, class_name, class_descrip){\r\n      try {\r\n        const response = await fetch(`${url}/class/update/`+classID, {\r\n           method: 'PUT',\r\n           headers: {\r\n             Accept: 'application/json',\r\n             'Content-Type': 'application/json',\r\n             'token': this.token,\r\n           },\r\n           body: JSON.stringify({ \r\n          \r\n             class_name: class_name,\r\n             class_descrip: class_descrip\r\n         })\r\n         });\r\n        const json = await response.json();\r\n        this.checkUnauthorized(response);\r\n\r\n\r\n        return json;\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.authCtx.logout\r\n      } finally {\r\n      }\r\n    }\r\n\r\n\r\n        \r\n        async postProgress(unitID){\r\n          try {\r\n            const response = await fetch(`${url}/progress/create`, {\r\n               method: 'POST',\r\n               headers: {\r\n                 Accept: 'application/json',\r\n                 'Content-Type': 'application/json',\r\n                 'token': this.token,\r\n               },\r\n               body: JSON.stringify({ \r\n              \r\n                 unit_id: unitID\r\n             })\r\n             });\r\n            const json = await response.json();\r\n            this.checkUnauthorized(response);\r\n\r\n    \r\n            return json;\r\n          } catch (error) {\r\n            console.error(error);\r\n            this.authCtx.logout\r\n          } finally {\r\n          }\r\n        }\r\n\r\n\r\n        async editUnitName(unitID, newName){\r\n          try {\r\n            const response = await fetch(`${url}/unit/update/`+unitID, {\r\n               method: 'PUT',\r\n               headers: {\r\n                 Accept: 'application/json',\r\n                 'Content-Type': 'application/json',\r\n                 'token': this.token,\r\n               },\r\n               body: JSON.stringify({ \r\n              \r\n                 unit_name: newName,\r\n                 unit_index: 0\r\n             })\r\n             });\r\n            const json = await response.json();\r\n            this.checkUnauthorized(response);\r\n\r\n    \r\n            return json;\r\n          } catch (error) {\r\n            console.error(error);\r\n            this.authCtx.logout\r\n          } finally {\r\n          }\r\n        }\r\n\r\n        async postLesson(ModuleID){\r\n          try {\r\n            const response = await fetch(`${url}/lesson/create`, {\r\n               method: 'POST',\r\n               headers: {\r\n                 Accept: 'application/json',\r\n                 'Content-Type': 'application/json',\r\n                 'token': this.token,\r\n               },\r\n               body: JSON.stringify({ \r\n              \r\n                 module_id: ModuleID,\r\n                 lesson_name: \"New Lesson\",\r\n                 lesson_descrip: \"New lesson description\",\r\n                 lesson_index: 0,\r\n                 instructor_id: this.user_id\r\n             })\r\n             });\r\n            const json = await response.json();\r\n            this.checkUnauthorized(response);\r\n\r\n    \r\n            return json;\r\n          } catch (error) {\r\n            console.error(error);\r\n            this.authCtx.logout\r\n          } finally {\r\n          }\r\n        }\r\n\r\n\r\n       async editUserProfile(newName, userType, newBio, newPic) {\r\n          try {\r\n           const response = await fetch(url + '/user/update/'+ this.user_id, {\r\n              method: 'PUT',\r\n              headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'token': this.token,\r\n              },\r\n              body:JSON.stringify({ \r\n                user_name: newName,\r\n                user_type: userType,\r\n                user_pp: newPic,\r\n                user_bio: newBio\r\n            })\r\n            });\r\n           const json = await response.json();\r\n           this.checkUnauthorized(response);\r\n\r\n           return json;\r\n         } catch (error) {\r\n           console.error(error);\r\n           this.authCtx.logout\r\n         } finally {\r\n         }\r\n       }\r\n\r\n\r\n\r\n       async changeEmail(newEmail, currentPassword){\r\n        try{\r\n          const response = await fetch(`${url}/user/changeAuth/${this.user_id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'token': this.token,\r\n            },\r\n            body:JSON.stringify({ \r\n              user_email: newEmail,\r\n              user_password: currentPassword\r\n            })\r\n          });\r\n          const json = await response.json(); \r\n          this.checkUnauthorized(response);\r\n\r\n          return json; \r\n        }catch (error){\r\n          console.error(error);\r\n          this.authCtx.logout\r\n        }finally {\r\n        }\r\n      }\r\n\r\n\r\n      async changePassword(currentEmail, newPassword){\r\n        try{\r\n          const response = await fetch(`${url}/user/changeAuth/${this.user_id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'token': this.token,\r\n            },\r\n            body:JSON.stringify({ \r\n              user_email: currentEmail,\r\n              user_password: newPassword\r\n            })\r\n          });\r\n          const json = await response.json(); \r\n          this.checkUnauthorized(response);\r\n\r\n          return json; \r\n        }catch (error){\r\n          console.error(error);\r\n          this.authCtx.logout\r\n        }finally {\r\n        }\r\n      }\r\n\r\n\r\n       \r\n\r\n\r\n\r\n  // async getClasses() {\r\n\r\n\r\n  //   console.log(\"fetch url dash board debug: \" + url + '/class/findByUser/' + this.user_id);\r\n  //   try {\r\n  //     const response = await fetch(url + '/class/findByUser/' + this.user_id, {\r\n  //       method: 'GET',\r\n  //       headers: {\r\n  //         Accept: 'application/json',\r\n  //         'Content-Type': 'application/json',\r\n  //         'token': this.token,\r\n  //       },\r\n  //     });\r\n  //     const json = await response.json();\r\n  //     this.checkUnauthorized(response);\r\n\r\n\r\n  //     return json;\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //     this.authCtx.logout;\r\n  //   } finally {\r\n  //   }\r\n  // }\r\n\r\n  async editCourseForInstructor(classID, class_name, class_descrip) {\r\n    try {\r\n      const response = await fetch(`${url}/class/update/` + classID, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          class_name: class_name,\r\n          class_descrip: class_descrip,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async postProgress(unitID) {\r\n    try {\r\n      const response = await fetch(`${url}/progress/create`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          unit_id: unitID,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async editUnitName(unitID, newName) {\r\n    try {\r\n      const response = await fetch(`${url}/unit/update/` + unitID, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          unit_name: newName,\r\n          unit_index: 0,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async postLesson(ModuleID) {\r\n    try {\r\n      const response = await fetch(`${url}/lesson/create`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          module_id: ModuleID,\r\n          lesson_name: \"New Lesson\",\r\n          lesson_descrip: \"New lesson description\",\r\n          lesson_index: 0,\r\n          instructor_id: this.user_id,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async editUserProfile(newName, userType, newBio, newPic) {\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/user/update/\" + this.user_id,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n          body: JSON.stringify({\r\n            user_name: newName,\r\n            user_type: userType,\r\n            user_pp: newPic,\r\n            user_bio: newBio,\r\n          }),\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async changeEmail(newEmail, currentPassword) {\r\n    try {\r\n      const response = await fetch(`${url}/user/changeAuth/${this.user_id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          user_email: newEmail,\r\n          user_password: currentPassword,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async changePassword(currentEmail, newPassword) {\r\n    try {\r\n      const response = await fetch(`${url}/user/changeAuth/${this.user_id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          user_email: currentEmail,\r\n          user_password: newPassword,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getClasses() {\r\n    console.log(\r\n      \"fetch url dash board debug: \" + url + \"/class/findByUser/\" + this.user_id\r\n    );\r\n    try {\r\n      const response = await fetch(url + \"/class/findByUser/\" + this.user_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n\r\n  async dropClass(class_id){\r\n    try {\r\n      const response = await fetch(`${url}/class/drop/${class_id}`, {\r\n         method: 'DELETE',\r\n         headers: {\r\n           Accept: 'application/json',\r\n           'Content-Type': 'application/json',\r\n           'token': this.token,\r\n         },\r\n       });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      console.log(\"THIS IS DROP CLASS \" + json);\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout\r\n    } finally {\r\n    }\r\n  }\r\n\r\n\r\n  async deleteLesson(lessonID){\r\n    try {\r\n      const response = await fetch(`${url}/lesson/delete/${lessonID}`, {\r\n         method: 'DELETE',\r\n         headers: {\r\n           Accept: 'application/json',\r\n           'Content-Type': 'application/json',\r\n           'token': this.token,\r\n         },\r\n       });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout\r\n    } finally {\r\n    }\r\n  }\r\n\r\n\r\n  async deleteClass(class_id){\r\n    try {\r\n      const response = await fetch(`${url}/class/delete/${class_id}`, {\r\n         method: 'DELETE',\r\n         headers: {\r\n           Accept: 'application/json',\r\n           'Content-Type': 'application/json',\r\n           'token': this.token,\r\n         },\r\n       });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"THIS IS delete CLASS \" + json);\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getUnitQuizContent(unitID) {\r\n    console.log(\r\n      \"fetch unit content quiz \" + url + \"/quiz/findByUnitId/\" + unitID\r\n    );\r\n    let response = \"initial response\";\r\n\r\n    try {\r\n      response = await fetch(url + \"/quiz/findByUnitId/\" + unitID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      //const json = await response.json();\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async createQuizData(quizID, quizQuestion, quizAnswers) {\r\n    try {\r\n      const response = await fetch(url + \"/quizdata/create/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          quiz_id: quizID,\r\n          quizdata_question: quizQuestion,\r\n          quizdata_answers: quizAnswers,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"Json api: \" + json);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async createNewQuizForUnit(unitID) {\r\n    try {\r\n      const response = await fetch(url + \"/quiz/create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          quiz_name: \"new quiz\",\r\n          unit_id: unitID,\r\n          instructor_id: this.user_id,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async editQuizData(quizID, quizDataID, quizQuestion, quizAnswers) {\r\n    try {\r\n      const response = await fetch(url + \"/quizdata/update/\" + quizID, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          quizdata_id: quizDataID,\r\n          quizdata_question: quizQuestion,\r\n          quizdata_answers: quizAnswers,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n  async deleteQuizData(quizID, quizDataID) {\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/quizdata/delete/\" + quizID + \"/\" + quizDataID,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            token: this.token,\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getQuizData(quizID) {\r\n    console.log(\"fetch unit content quiz data \" + url + \"/quizdata/\" + quizID);\r\n    try {\r\n      const response = await fetch(url + \"/quizdata/\" + quizID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n  async getAllModulesForClass(courseID) {\r\n    try {\r\n      const response = await fetch(`${url}/module/findByClass/` + courseID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getLessonsInModule(moduleID) {\r\n    try {\r\n      const response = await fetch(`${url}/lesson/findByModule/` + moduleID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async postUnit(content, content2) {\r\n    try {\r\n      const response = await fetch(url + \"/unit/create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          accept: \"application/json\",\r\n          token: this.token,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          unit_name: \"fast coutning\",\r\n          unit_content: [content, content2],\r\n          unit_content_type: \"string\",\r\n          lesson_id: 29,\r\n          instructor_id: 5,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n  async getUnitContent(unit_id) {\r\n    console.log(\r\n      \"fetch url dash board debug: \" +\r\n        url + \"/class/findByUser/\" +\r\n        this.user_id\r\n    );\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/unit/\" + unit_id,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async editUnitContent(content, content2, unit_id) {\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/unit/updateUnitContent/\" + unit_id,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            accept: \"application/json\",\r\n            token: this.token,\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          // body: '{\\n  \"unit_content\": \"https://www.youtube.com/watch?v=JfVOs4VSpmA\",\\n  \"unit_content_type\": \"text\"\\n}',\r\n          body: JSON.stringify({\r\n            unit_content: content,\r\n            unit_content_type: content2,\r\n          }),\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getUnitContent(unit_id) {\r\n    console.log(\r\n      \"fetch url dash board debug: \" +\r\n        url + \"/class/findByUser/\" +\r\n        this.user_id\r\n    );\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/unit/\" + unit_id,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getSearchClassResultSearchScreen(keyword) {\r\n    console.log(\r\n      \"class search api called: \" + url + \"/class/findByUser/\" + this.user_id\r\n    );\r\n    try {\r\n      const response = await fetch(url + \"/class/findByName/\" + keyword, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async postClass(courseName, courseDesc) {\r\n    try {\r\n      console.log(\"post class api called: \");\r\n\r\n      const response = await fetch(url + \"/class/create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          class_name: courseName,\r\n          class_descrip: courseDesc,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getUserForProfilePage() {\r\n    console.log(\r\n      \"get user for profile page called \" +\r\n        url +\r\n        \"/class/findByUser/\" +\r\n        this.user_id\r\n    );\r\n    try {\r\n      const response = await fetch(url + \"/user/\" + this.user_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getModulesAndLessonInstructorCourseViewScreen(courseID) {\r\n    console.log(\r\n      \"get modules and lessons called \" +\r\n        url + \"/class/findByUser/\" +\r\n        courseID\r\n    );\r\n\r\n    try {\r\n      const response = await fetch(\r\n        url + \"/class/modulesAndLessons/\" + courseID,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async putLessonNameForLessonCreation(\r\n    lessonName,\r\n    lessonId,\r\n    less_description,\r\n    less_index,\r\n    mod_id\r\n  ) {\r\n    try {\r\n      const response = await fetch(url + \"/lesson/update/\" + lessonId, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          lesson_name: lessonName,\r\n          lesson_descrip: less_description,\r\n          lesson_index: less_index,\r\n          module_id: mod_id,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"Json api: \" + json);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getSingleLessonForLessonCreation(lesson_id) {\r\n    try {\r\n      const response = await fetch(url + \"/lesson/findById/\" + lesson_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"Json api: \" + json);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  // student route will be moved eventually\r\n  async getClassByNameForStudentCourseDescription(class_id) {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://http://localhost:3001/api/class/findByName/\" + class_id,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"Json api: \" + json);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getSectionsPerLesson(lesson_id) {\r\n    // console.log(\"token  \" + this.token);\r\n\r\n    // console.log(\"fetch url dash board debug: \" +  url + '/class/findByUser/');\r\n    //  console.log(LessonID);\r\n    try {\r\n      const response = await fetch(url + \"/unit/findByLesson/\" + lesson_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      console.log(\"Json api: \" + json);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getUnitByID(unitID) {\r\n    // console.log(\"token  \" + this.token);\r\n\r\n    // console.log(\"fetch url dash board debug: \" +  url + '/class/findByUser/');\r\n    //  console.log(LessonID);\r\n    try {\r\n      const response = await fetch(url + \"/unit/\" + unitID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async getClassByID(classID) {\r\n    // console.log(\"token  \" + this.token);\r\n\r\n    // console.log(\"fetch url dash board debug: \" +  url + '/class/findByUser/');\r\n    //  console.log(LessonID);\r\n    try {\r\n      const response = await fetch(url + \"/class/findById/\" + classID, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async addUnitForLessonCreation(lessonID) {\r\n    try {\r\n      const response = await fetch(url + \"/unit/create/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          unit_name: \"Unit Name\",\r\n          unit_content: \"\",\r\n          lesson_id: lessonID,\r\n          instructor_id: this.user_id,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async deleteUnit(unit_id) {\r\n    try {\r\n      const response = await fetch(url + \"/unit/delete/\" + unit_id, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async editModule(moduleID, newModuleName, newModuleDescription, classID) {\r\n    console.log(\r\n      \"fetch url dash board debug: \" + url + \"/class/findByUser/\" + this.user_id\r\n    );\r\n\r\n    try {\r\n      const response = await fetch(url + \"/module/update/\" + moduleID, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          module_name: newModuleName,\r\n          module_descrip: newModuleDescription,\r\n          class_id: classID,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async deleteModule(moduleID) {\r\n    console.log(\"deleting module: \" + moduleID);\r\n    try {\r\n      const response = await fetch(url + \"/module/delete/\" + moduleID, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n\r\n  async createModule(moduleName, description, classID) {\r\n    console.log(\r\n      \"Creating Module aPI called \" + moduleName + \" \" + description + classID\r\n    );\r\n    try {\r\n      const response = await fetch(url + \"/module/create/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          token: this.token,\r\n        },\r\n        body: JSON.stringify({\r\n          module_name: moduleName,\r\n          module_descrip: description,\r\n          class_id: classID,\r\n          instructor_id: this.user_id,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      this.checkUnauthorized(response);\r\n      return json;\r\n    } catch (error) {\r\n      console.error(error);\r\n      this.authCtx.logout;\r\n    } finally {\r\n    }\r\n  }\r\n}\r\nexport default APIConnection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ActivityIndicator,\r\n  View,\r\n  Picker,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Dimensions,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport Authentication from \"../../../utility/Authentication\";\r\nimport { Input, Icon, ButtonGroup, Divider } from \"react-native-elements\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\n\r\nexport default function CourseEditScreen({ route, navigation }) {\r\n  const { courseID, courseName } = route.params;\r\n\r\n  const [className, setClassName] = useState(courseName);\r\n  const [courseDescription, setCourseDescription] = useState(\"\");\r\n\r\n  const [selectedCourseTypeIndex, setSelectedCourseTypeIndex] = useState(0);\r\n  const [selectedCourseCategoryValue, setSelectedCourseCategoryValue] =\r\n    useState(\"Other\");\r\n\r\n  const categoryData = [\r\n    \"Mathematic\",\r\n    \"Physics\",\r\n    \"English\",\r\n    \"Computer Science\",\r\n    \"Other\",\r\n  ];\r\n\r\n  const apiConnection = new APIConnection();\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      apiConnection.getClassByID(courseID).then((json) => {\r\n        setCourseDescription(json.result.class_descrip);\r\n      });\r\n    }\r\n  }, [isFocused]);\r\n\r\n  function getCategoryPickerItems() {\r\n    console.log(\"Route debug:\", courseID, courseName, \"route: \", route);\r\n    let result = [];\r\n    for (let i = 0; i < categoryData.length; i++) {\r\n      result.push(\r\n        <Picker.Item key={i} label={categoryData[i]} value={categoryData[i]} />\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  async function onSave() {\r\n    await apiConnection.editCourseForInstructor(\r\n      courseID,\r\n      className,\r\n      courseDescription\r\n    );\r\n    navigation.goBack();\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView>\r\n      <Text style={styles.title}> Edit Course </Text>\r\n\r\n<Text style={styles.placeholderName}>Course Name</Text>\r\n\r\n        <TextInput\r\n          style={styles.courseName}\r\n          \r\n         // label=\"Course Name\"\r\n         \r\n       // editable={true}\r\n       returnKeyType='done'\r\n          defaultValue={courseName}\r\n          onChangeText={(text) => setClassName(text)}\r\n        />\r\n\r\n    \r\n        <Text style={styles.placeholderDesc}>Course Description</Text>\r\n        <TextInput\r\n          style={styles.courseDesc}\r\n         // label=\"Course Description\"\r\n         returnKeyType='done'\r\n          value={courseDescription}\r\n          multiline={true} \r\n          onChangeText={(text) => setCourseDescription(text)}\r\n        />\r\n\r\n\r\n\r\n\r\n      \r\n      <View style={styles.bottomContainer}>\r\n        <TouchableOpacity style={styles.addBttn} onPress={() => onSave()}>\r\n              <Text style={styles.addText}>Save</Text>\r\n          </TouchableOpacity>\r\n\r\n        </View>\r\n        </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\", \r\n  },\r\n\r\n  addBttn: {\r\n    alignSelf: \"center\",\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n\r\n    // paddingBottom: 5,\r\n    // position: \"absolute\",\r\n    height: 50,\r\n    width: 200,\r\n\r\n    borderRadius: 50,\r\n    backgroundColor: \"#4970FA\",\r\n    color: \"white\",\r\n    // bottom: 60,\r\n    // margin: 1,\r\n  },\r\n  placeholderName: {\r\n\r\n    color: \"black\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    //marginBottom: 1,\r\n    marginRight: 140,\r\n   \r\n    marginTop: 10,\r\n  },\r\n\r\n  placeholderDesc: {\r\n\r\n    color: \"black\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    //marginBottom: 1,\r\n    marginRight: 105,\r\n    marginBottom:-40,\r\n    marginTop:40,\r\n   \r\n   // marginTop: ,\r\n  },\r\n\r\n  addText: {\r\n    color: \"white\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  title: {\r\n    //paddingHorizontal:11,\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"#4970FA\",\r\n  },\r\n  courseName: {\r\n    //position: \"relative\",\r\n    justifyContent: \"center\",\r\n    //alignItems: 'center',\r\n    paddingHorizontal: 10, //inner text spacing\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n    alignSelf:'center',\r\n\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    width: 250,\r\n    height: 40,\r\n\r\n  },\r\n\r\n  courseDesc: {\r\n    marginTop:40,\r\n    justifyContent: \"center\",\r\n    alignSelf:'center',\r\n    height: 200,\r\n    width: 250,\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n   // marginBottom: 10,\r\n    //paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor:'white',\r\n    marginBottom:0,\r\n\r\n  },\r\n\r\n  inputContainerStyle: {\r\n    paddingHorizontal: 40,\r\n    margin: 10,\r\n  },\r\n\r\n  inputStyle: {\r\n    borderWidth: 1,\r\n  },\r\n\r\n  categoryStyle: {\r\n    alignItems: \"center\",\r\n  },\r\n  bottomContainer: {\r\n    flex: 3,\r\n    paddingTop: 20,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    \r\n  },\r\n\r\n  saveButton: {\r\n    \r\n      alignSelf: \"center\",\r\n\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n\r\n      paddingBottom: 5,\r\n      position: \"absolute\",\r\n      height: 50,\r\n      width: 200,\r\n\r\n      borderRadius: 50,\r\n      backgroundColor: \"#4970FA\",\r\n      color: \"white\",\r\n      bottom: 50,\r\n     // margin: 1,\r\n    \r\n  },\r\n});\r\n","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { Children, useEffect, useLayoutEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function ClassSearchScreenTest() {\r\n //-------------------API Fetch code-------------------------\r\n\r\n const isFocused = useIsFocused();\r\n\r\n const [data, setData] = useState([]);\r\n\r\n const apiConnection = new APIConnection();\r\n\r\n\r\n //--------------------------------------------\r\n\r\n function searchAPI(keyword) {\r\n   if (keyword == \"\") {\r\n     alert('Enter class name');\r\n   }\r\n   else {\r\n     apiConnection.getSearchClassResultSearchScreen(keyword).then((json) => {\r\n       console.log(\"Class search debug \" + json);\r\n\r\n       setData(json);\r\n     });\r\n   }\r\n }\r\n function onCoursePress(course_id, course_name, course_descrip, instructor_name) {\r\n   navigation.navigate(\"Dashboard\",\r\n     {\r\n       screen: 'Course Description',\r\n       params: {\r\n         class_id: course_id,\r\n         class_name: course_name,\r\n         class_descrip: course_descrip,\r\n         instructor_name: instructor_name\r\n       }\r\n     })\r\n\r\n }\r\n\r\n const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n return (\r\n   <View style={styles.container}>\r\n     <View style={styles.content}>\r\n       <TextInput\r\n         style={search.searchHolder}\r\n         placeholder={\"Enter Class\"}\r\n         onChangeText={(newText) => setSearchTerm(newText)}\r\n         defaultValue={searchTerm}\r\n       />\r\n\r\n       <View >\r\n         <TouchableOpacity style={search.searchBttn}onPress={() => searchAPI(searchTerm)}>\r\n           <Text style={search.searchText}>Search</Text>\r\n         </TouchableOpacity>\r\n       </View>\r\n\r\n       <Text style={styles.title}>Discover Classes</Text>\r\n     </View>\r\n\r\n     <ScrollView style={{ backgroundColor: '#4970FA' }} contentContainerStyle={styles.content}>\r\n       {/* { {Data.filter((val)=>{\r\n           if (searchTerm == \"\") {\r\n             return val\r\n           } else if (val.CourseTitle.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n             return val\r\n           } \r\n           \r\n         }).map((item,key) => {\r\n           return (\r\n           <TouchableOpacity key={key}> \r\n             <Text style = {styles.boxes}>\r\n               {item.CourseTitle}\r\n             </Text>\r\n           </TouchableOpacity>\r\n           )})} }  */}\r\n\r\n       {data.length > 0 && data.map((item, key) => {\r\n         return (\r\n           // <TouchableOpacity key={key}\r\n           // onPress={() => onCoursePress(item.class_id, item.class_name, item.class_descrip, item.instructor_name)}\r\n           // >\r\n\r\n           //   <Text style={styles.boxes}>\r\n           //     {'Class Name: '+item.class_name +'\\n' +\r\n           //     '--------------------'+'\\n'+\r\n           //     'Class description: '+ item.class_descrip +'\\n'+ \r\n           //     '--------------------'+'\\n'+\r\n           //     'instructor: '+ item.instructor_name + '\\n' + \"the end of this \"}\r\n           //   </Text>\r\n\r\n           // </TouchableOpacity>\r\n           <Card key={item.class_id} style={styles.gridItem} >\r\n             <TouchableOpacity onPress={() => onCoursePress(item.class_id, item.class_name, item.class_descrip, item.instructor_name)}>\r\n\r\n             <Card.Cover style={{height:'50%'}} source={{uri: 'https://picsum.photos/700' }}/>\r\n               <Card.Content  adjustsFontSizeToFit>\r\n             \r\n\r\n                 <Text  style={{textAlign:'center',fontSize:16}}adjustsFontSizeToFit>\r\n                   { item.class_name +'\\n' +\r\n                     'instructor: ' + item.instructor_name}\r\n                 </Text>\r\n\r\n               </Card.Content>\r\n\r\n             </TouchableOpacity>\r\n   \r\n\r\n           </Card>\r\n         );\r\n       })}\r\n     </ScrollView>\r\n   </View>\r\n );\r\n}\r\nconst styles = StyleSheet.create({\r\n gridItem: {\r\n   flex: 1,\r\n   margin: 16,\r\n   width: '65%',\r\n   height: 150,\r\n   borderRadius: 8,\r\n   elevation: 4,\r\n   backgroundColor: 'white',\r\n   color: 'white',\r\n   shadowColor: 'black',\r\n   shadowOpacity: 0.25,\r\n   shadowOffset: { width: 0, height: 2 },\r\n   shadowRadius: 8,\r\n   overflow: Platform.OS === 'android' ? 'hidden' : 'visible',\r\n },\r\n container: {\r\n   flex: 1,\r\n   backgroundColor: \"#E8EAED\",\r\n },\r\n\r\n content: {\r\n    alignItems: \"center\",\r\n\r\n },\r\n\r\n title: {\r\n\r\n   textAlign: \"center\",\r\n   fontSize: 30,\r\n   fontWeight: \"bold\",\r\n   color: \"black\",\r\n   marginTop: 50,\r\n   marginBottom: 50,\r\n\r\n },\r\n\r\n boxes: {\r\n   //padding: 30,\r\n   marginTop: 10,\r\n   fontWeight: 'bold',\r\n   backgroundColor: \"white\",\r\n   borderColor: \"#C0C0C0\",\r\n   borderWidth: 1,\r\n   borderRadius: 10,\r\n   width: 300,\r\n   height: 200,\r\n   textAlign: \"center\",\r\n\r\n   alignItems: \"center\",\r\n\r\n   //top: 10,\r\n },\r\n});\r\n\r\nconst search = StyleSheet.create({\r\n searchHolder: {\r\n   position: \"relative\",\r\n   paddingVertical: 15,\r\n   paddingHorizontal: 15,\r\n   backgroundColor: \"white\",\r\n   borderColor: \"#C0C0C0\",\r\n   bottom: 0,\r\n   borderWidth: 1,\r\n   borderRadius: 60,\r\n   width: 250,\r\n   marginTop: 100,\r\n   right: 50,\r\n },\r\n\r\n searchBttn: {\r\n   width: 100,\r\n   position: \"absolute\",\r\n   paddingVertical: 15,\r\n   paddingHorizontal: 15,\r\n   borderRadius: 60,\r\n   backgroundColor: \"#4970FA\",\r\n   color: \"white\",\r\n   alignItems: \"center\",\r\n   left: 80,\r\n   bottom: 0,\r\n\r\n },\r\n\r\n searchText: {\r\n   color: \"white\",\r\n   fontWeight: \"bold\",\r\n },\r\n});","import React from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport InstructorHome from './InstructorHome'\r\nimport ClassSearchScreenTest from './SearchScreenTest'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function HomeStackNavigatorInstructor()  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n\r\n<Stack.Screen name=\"SearchScreen\" component={ClassSearchScreenTest} />\r\n\r\n      <Stack.Screen name=\"InstructorHome\" component={InstructorHome} />\r\n\r\n\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import { Pressable, View, Text, StyleSheet, Platform, TouchableOpacity,Alert } from 'react-native';\r\nimport { Icon } from 'react-native-elements';\r\nimport { Button } from 'react-native-elements/dist/buttons/Button';\r\n\r\nfunction CourseGridCard({ title, color, onPress, onDelete, courseID }) {\r\n  function alertDrop() {\r\n    Alert.alert(\r\n      \"Warning\",\r\n      \"Are you sure you want to delete this course? You will not be able to recover it.\",\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"Delete\",\r\n          onPress: () => { onDelete(courseID) }\r\n\r\n        }\r\n      ],\r\n      {\r\n        cancelable: true,\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n  \r\n  return (\r\n    <View style={styles.gridItem}>\r\n      <Pressable\r\n        android_ripple={{ color: '#ccc' }}\r\n        style={({ pressed }) => [\r\n          styles.button,\r\n          pressed ? styles.buttonPressed : null,\r\n          \r\n        ]}\r\n        onPress={onPress}\r\n      >\r\n        <View style={[styles.innerContainer, { backgroundColor: 'white' }]}>\r\n          <Text style={styles.title}>{title}</Text>\r\n        </View>\r\n      </Pressable>\r\n      <TouchableOpacity\r\n          style={styles.buttonContainer}\r\n          onPress={() => \r\n            {\r\n              if(Platform.OS == 'web'){\r\n                onDelete(courseID)\r\n              }\r\n              else if(Platform.OS == 'android' || Platform.OS == 'ios')\r\n              {\r\n                alertDrop();\r\n              }\r\n           }  \r\n          \r\n          }\r\n        >\r\n         <Icon name=\"delete\" size={30} color=\"#e33057\" />\r\n        </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default CourseGridCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  gridItem: {\r\n    flex: 1,\r\n    margin: 16,\r\n    height: 150,\r\n    borderRadius: 8,\r\n    elevation: 4,\r\n    backgroundColor: 'white',\r\n    color: 'white',\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.25,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 8,\r\n    overflow: Platform.OS === 'android' ? 'hidden' : 'visible',\r\n  },\r\n  button: {\r\n    flex: 1,\r\n    \r\n  },\r\n  buttonContainer: {\r\n    alignSelf:'center'\r\n  },\r\n  buttonPressed: {\r\n    opacity: 0.5,\r\n    \r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    \r\n    \r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    \r\n  },\r\n});\r\n","import React, { Children,useState, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View, Text, Alert, StyleSheet, Button, TextInput, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList } from \"react-native\";\r\nimport CourseGridCard from '../../../component/CourseGridCard';\r\nimport { AuthContext } from '../../../store/AuthContext';\r\nimport APIConnection from '../../../utility/APIConnection';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\n\r\n\r\n\r\nexport default function InstructorDashboard({navigation}) {\r\n\r\n\r\n\r\n    \r\n\r\n//--------------Copy This Piece Of Code Here------------\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const apiConnection = new APIConnection();\r\n          useLayoutEffect(() => {\r\n            //your code here\r\n            if(isFocused) {\r\n              apiConnection.getClasses().then(json => {\r\n                setData(json);})\r\n            }\r\n            \r\n         },[isFocused]);\r\n\r\n //------------------------------------------\r\n\r\n\r\n function onDelete(courseID)\r\n {\r\n   apiConnection.deleteClass(courseID);\r\n   navigation.goBack();\r\n }\r\n\r\n\r\n\r\n    function classCardComponent(itemData) {\r\n        function pressHandler() {\r\n            console.log(\"item data debug:\", itemData)\r\n          // navigation.navigate('EditCourseAndModule', {\r\n          //   courseID: itemData.item.class_id,\r\n          //   courseName: itemData.item.class_name\r\n          // });\r\n          navigation.navigate('Instructor CourseView', {\r\n            courseID: itemData.item.class_id,\r\n            courseName: itemData.item.class_name\r\n          });\r\n        }\r\n    \r\n        return (\r\n          <CourseGridCard\r\n            title={itemData.item.class_name}\r\n            color={\"#534789\"}\r\n            onPress={pressHandler}\r\n            courseID={itemData.item.class_id}\r\n            onDelete={onDelete}\r\n          />\r\n        );\r\n      }\r\n     \r\n      return (\r\n        \r\n  \r\n        <View style={styles.container}>\r\n        <Text style={styles.title}>Courses</Text>\r\n\r\n\r\n        <FlatList\r\n          data={data}\r\n          keyExtractor={(item) => item.class_id}\r\n          renderItem={classCardComponent}\r\n          numColumns={2}\r\n        />\r\n\r\n\r\n        <TouchableOpacity \r\n        style={addClass.addBttn}\r\n        // style ={styles.bottomContainer}\r\n        onPress={() =>  navigation.navigate('Create Course', { screen:'CreateCourse'})}>\r\n        {/* <View  > */}\r\n          <Text style ={addClass.addText}>+</Text>\r\n        {/* </View>  */}\r\n      </TouchableOpacity>\r\n      \r\n\r\n\r\n\r\n\r\n    </View>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#E8EAED',\r\n\r\n  },\r\n\r\n  content: {\r\n    alignItems: \"center\",\r\n\r\n  },\r\n\r\n  bottomContainer: {\r\n      flex: 1,\r\n      justifyContent: 'flex-end',\r\n\r\n  },\r\n\r\n  \r\n\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: 'black',\r\n    marginTop:50,\r\n    marginBottom: 50\r\n\r\n  },\r\n\r\n  boxes: {\r\n      marginTop:10,\r\n      backgroundColor: 'white',\r\n      borderColor: '#C0C0C0',\r\n      borderWidth: 1,\r\n      borderRadius: 10,\r\n      width:300,\r\n      height: 200,\r\n      textAlign: \"center\",\r\n      alignItems: \"center\"\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n});\r\n\r\nconst addClass = StyleSheet.create({\r\n\r\n  addBttn: {\r\n  alignSelf: 'flex-end',\r\n  flex:1,\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width:80,\r\n  height:80,\r\n  paddingBottom:5,\r\n  position: \"absolute\",\r\n    //height: 60,\r\n\r\n  borderRadius: 50,\r\n  backgroundColor: '#4970FA',\r\n  color: 'white',\r\n  right: 20,\r\n  bottom:40\r\n\r\n  },\r\n\r\n  addText: {\r\n\r\n    color: 'white',\r\n    fontSize: 50,\r\n    fontWeight: \"bold\",\r\n\r\n  }\r\n}\r\n        \r\n      );\r\n\r\n      \r\n\r\n//class id 58b0a1f3-acd6-4893-afe4-10ef88ab161f\r\n//user id 5\r\n//mod id 5\r\n\r\n//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiaWF0IjoxNjQ4ODcyNzc4LCJleHAiOjE2NDg5NTkxNzh9.O2VDmIrA5ZmvrebfYhlQbWyhzPmGlF7OTpgkRzJSfvA","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Picker,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Dimensions,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Authentication from \"../utility/Authentication\";\r\nimport { Input, Icon, ButtonGroup, Divider } from \"react-native-elements\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useLinkProps } from \"@react-navigation/native\";\r\nimport APIConnection from \"../utility/APIConnection\";\r\n\r\nexport default function ModuleEditComponent({ allData, setData, lessonData, navigation }) {\r\n  const [ModuleName, setModuleName] = useState(lessonData.module_name);\r\n  const moduleID = lessonData.module_id;\r\n  const apiConnection = new APIConnection();\r\n\r\n  function updateModuleNameToParent(newModuleName) {\r\n    let index = allData.findIndex((module) => module.module_id === moduleID);\r\n    let newAllData = allData;\r\n    newAllData[index].module_name = newModuleName;\r\n    //mark that this module has been edited\r\n    if (newAllData[index].changeType != \"Created\") {\r\n      newAllData[index].changeType = \"Edited\";\r\n    }\r\n    setData(newAllData);\r\n  }\r\n\r\n\r\n  async function addNewLesson()\r\n  {\r\n    if(moduleID != null)\r\n    {let response = await apiConnection.postLesson(moduleID);\r\n      let lessonID = response.result[0].lesson_id;\r\n      let lessonName = response.result[0].lesson_name;\r\n  \r\n      navigation.navigate(\r\n  \r\n        'LessonCreation', {\r\n          lessonID: lessonID,\r\n          lessonName: lessonName\r\n          \r\n        }\r\n      )\r\n    }\r\n\r\n    else alert(\"Please press save first before continuing\")\r\n\r\n    \r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  function onLessonPress(lessonId, lessonName)\r\n  {\r\n    navigation.navigate('LessonCreation', {\r\n      lessonID: lessonId,\r\n      lessonName: lessonName\r\n      \r\n    })\r\n  }\r\n\r\n  function deleteModule() {\r\n    let newAllData = allData.filter((module) => module.module_id !== moduleID);\r\n    console.log(\"New deleted data is\" + newAllData);\r\n    setData(newAllData);\r\n  }\r\n\r\n  function getLessonsView() {\r\n    const result = [];\r\n\r\n    for (let i = 0; i < lessonData[\"lessons\"].length; i++) {\r\n      result.push(\r\n        <TouchableOpacity key={i} style={[styles.button]} onPress={() => onLessonPress(lessonData.lessons[i].lesson_id, lessonData.lessons[i].lesson_name)}>\r\n          <Text style={[styles.buttonLabel]}>\r\n            {lessonData[\"lessons\"][i].lesson_name}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.backgroundCard}>\r\n      <View style={styles.row}>\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder={lessonData[\"Module\"]}\r\n          onChangeText={(newText) => updateModuleNameToParent(newText)}\r\n          defaultValue={ModuleName}\r\n        />\r\n\r\n        <TouchableOpacity\r\n          style={styles.buttonContainer}\r\n          onPress={() => deleteModule()}\r\n        >\r\n         <Icon name=\"delete\" size={30} color=\"#e33057\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {getLessonsView()}\r\n      </View>\r\n\r\n      <View>\r\n        <TouchableOpacity\r\n        onPress={() => addNewLesson()}\r\n\r\n\r\n\r\n\r\n          style={{\r\n            alignSelf: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: 12,\r\n              fontWeight: \"500\",\r\n              color: \"#4970FA\",\r\n              paddingBottom: 10,\r\n            }}\r\n          >\r\n            Add Lesson+\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: 8,\r\n    backgroundColor: \"aliceblue\",\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 6,\r\n    borderRadius: 4,\r\n    backgroundColor: \"#4970FA\",\r\n    color:'white',\r\n    alignSelf: \"flex-start\",\r\n    marginHorizontal: \"1%\",\r\n    margin: 6,\r\n    shadowColor: \"black\",\r\n    elevation: 10,\r\n    borderWidth: 1,\r\n    fontSize: 12,\r\n    fontWeight: \"500\",\r\n  },\r\n  box: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 6,\r\n    borderRadius: 4,\r\n    backgroundColor: \"#adebff\",\r\n    alignSelf: \"flex-start\",\r\n    marginHorizontal: \"1%\",\r\n    marginBottom: 6,\r\n    minWidth: \"48%\",\r\n    textAlign: \"center\",\r\n  },\r\n  selected: {\r\n    backgroundColor: \"coral\",\r\n    borderWidth: 0,\r\n  },\r\n  buttonLabel: {\r\n    fontSize: 12,\r\n    fontWeight: \"500\",\r\n    color: \"black\",\r\n  },\r\n  selectedLabel: {\r\n    color: \"white\",\r\n  },\r\n  label: {\r\n    textAlign: \"center\",\r\n    marginBottom: 10,\r\n    fontSize: 24,\r\n    //color:'white'\r\n  },\r\n  backgroundCard: {\r\n    margin: 16,\r\n    borderRadius: 8,\r\n    elevation: 4,\r\n    backgroundColor: \"white\",\r\n    borderWidth: .7,\r\n\r\n    color: \"white\",\r\n    shadowColor: \"black\",\r\n    shadowOpacity: 0.25,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 8,\r\n    overflow: Platform.OS === \"android\" ? \"hidden\" : \"visible\",\r\n  },\r\n  buttonContainer: {\r\n    marginVertical: 10,\r\n    marginHorizontal: 10,\r\n  },\r\n\r\n  \r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    View,\r\n    Picker,\r\n    Text,\r\n    Alert,\r\n    StyleSheet,\r\n    Button,\r\n    TextInput,\r\n    TouchableWithoutFeedback,\r\n    Keyboard,\r\n    Dimensions,\r\n    KeyboardAvoidingView,\r\n    Platform,\r\n    TouchableOpacity,\r\n} from \"react-native\";\r\nimport Authentication from \"../utility/Authentication\";\r\nimport { Input, Icon, ButtonGroup, Divider } from \"react-native-elements\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useLinkProps } from \"@react-navigation/native\";\r\nimport ModuleEditComponent from \"./ModuleEditComponent\";\r\nimport { useTransition, animated } from 'react-spring/native'\r\n\r\n\r\nconst AnimatedView = animated(View);\r\n\r\n\r\nexport default function ModuleEditComponentContainer({ stateData, setStateData, navigation }) {\r\n\r\n    //take in 3 arguments\r\n\r\n    const transition = useTransition(stateData, stateData => stateData.module_id, {\r\n        from: { opacity: 0, x: -100, y: 800 },\r\n        enter: { opacity: 1, x: 0, y: 0 }\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <View>\r\n            {stateData.map((module,key) => (\r\n                    <ModuleEditComponent\r\n\r\n                        key={key}\r\n                        allData={stateData}\r\n                        setData={setStateData}\r\n                        lessonData={module}\r\n                        navigation={navigation}>\r\n\r\n                    </ModuleEditComponent>\r\n\r\n            ))\r\n\r\n            }\r\n        </View>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Picker,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Dimensions,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport Authentication from \"../../../utility/Authentication\";\r\nimport { Input, Icon, ButtonGroup, Divider } from \"react-native-elements\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport ModuleEditComponent from \"../../../component/ModuleEditComponent\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\nimport { FAB } from \"react-native-elements\";\r\nimport ModuleEditComponentContainer from \"../../../component/ModuleEditComponentContainer\";\r\nimport { ActivityIndicator } from \"react-native-paper\";\r\nexport default function EditModuleScreen({ navigation, route }) {\r\n  const { courseID, courseName } = route.params;\r\n\r\n  //-----------API Connection Code----------\r\n  const isFocused = useIsFocused();\r\n\r\n  const [finalData, setFinalData] = useState([]);\r\n  const [stateData, setStateData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [dummyState, setDummyState] = useState(true);\r\n  //new module index is used to assign unique id for module that doesnt exist yet\r\n  const [newModIndex, setnewModIndex] = useState(-1);\r\n\r\n  const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n\r\n  //--------for some reason i have to have these force update code to force a rerender-----\r\n  const [, updateState] = React.useState();\r\n  const forceUpdate = React.useCallback(() => updateState({}), []);\r\n  //--------------no idea why but this fixed it----------\r\n\r\n  const apiConnection = new APIConnection();\r\n  // useEffect(() => {\r\n  //   if (isFocused) {\r\n  //     apiConnection\r\n  //       .getModulesAndLessonInstructorCourseViewScreen(courseID)\r\n  //       .then((json) => {\r\n  //         setFinalData(json);\r\n  //         setStateData(json);\r\n  //       });\r\n  //   }\r\n  // }, [isFocused]);\r\n  //---------------------------------------\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n\r\n    async function fetchAPI()\r\n    {\r\n      let json = await apiConnection.getAllModulesForClass(courseID);\r\n      let data = await processAPIModuleData(json);\r\n      for(let i = 0; i< data.length; i++)\r\n      {\r\n        let element = data[i];\r\n        console.log('data :'+ element.module_id);\r\n        let json2 = await apiConnection.getLessonsInModule(element.module_id);\r\n        processAPILesson(data[i].lessons,json2);\r\n\r\n\r\n      }\r\n      //  await data.forEach(element=>{\r\n\r\n      //    apiConnection.getLessonsInModule(element.module_id).then((json2) => {\r\n      //     processAPILesson(element.lessons,json2);\r\n\r\n      //    })\r\n\r\n\r\n      //  });\r\n\r\n     \r\n\r\n\r\n       setFinalData(data);\r\n       setStateData(data);\r\n       setIsLoading(false);\r\n\r\n\r\n\r\n     \r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    if (isFocused) {\r\n      fetchAPI();\r\n\r\n    }\r\n\r\n  }, [isFocused]);\r\n\r\n\r\n  function processAPILesson(lessonArr, lessonData){\r\n\r\n    for(let i =0; i < lessonData.length; i++){\r\n      let newLesson={};\r\n      newLesson['lesson_id'] = lessonData[i].lesson_id;\r\n      newLesson['lesson_name'] = lessonData[i].lesson_name;\r\n      newLesson['lesson_descrip'] = lessonData[i].lesson_descrip;\r\n      newLesson['lesson_index'] = lessonData[i].lesson_index;\r\n\r\n      lessonArr[i] = newLesson;\r\n\r\n    }\r\n\r\n\r\n    return lessonArr;\r\n  }\r\n\r\n\r\n    //Morph json from API into an array that we can use\r\n    function processAPIModuleData(json){\r\n      let returnData=[]\r\n     for(let i = 0; i <json.length; i++){\r\n       let newModule = {};\r\n       newModule['module_name'] = json[i].module_name;\r\n       newModule['module_id'] = json[i].module_id;\r\n       newModule['instructor_id'] = json[i].instructor_id;\r\n      newModule['lessons'] = [];\r\n\r\n      returnData[i] = newModule;\r\n\r\n\r\n     }\r\n\r\n     return returnData;\r\n  }\r\n\r\n\r\n\r\n  function refresh()\r\n  {\r\n    setDummyState(!dummyState);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //------------------------------------\r\n\r\n  async function onSave() {\r\n    console.log(\"On save pressed, this new all data is:\" + stateData);\r\n\r\n    //find which module is needed to delete\r\n    const deleteList = [];\r\n    for (let i = 0; i < finalData.length; i++) {\r\n      let tobeDeleted = true;\r\n      for (let j = 0; j < stateData.length; j++) {\r\n        if (finalData[i].module_id == stateData[j].module_id) {\r\n          tobeDeleted = false;\r\n          j = stateData.length;\r\n        }\r\n\r\n      }\r\n      if (tobeDeleted == true) {\r\n        deleteList.push(finalData[i].module_id)\r\n      }\r\n    }\r\n\r\n\r\n    await Promise.all(\r\n      stateData.map(async (module) => {\r\n\r\n        if (module.changeType == \"Edited\") {\r\n          console.log(\"This module has been changed: \" + module.module_name);\r\n          const response = await apiConnection.editModule(module.module_id, module.module_name, module.module_descrip, courseID)\r\n        }\r\n        else if (module.changeType == \"Created\") {\r\n          console.log(\"This module has been created: \" + module.module_name)\r\n          const response = await apiConnection.createModule(module.module_name, module.module_descrip, courseID);\r\n        }\r\n        else if (deleteList.includes(module.module_id)) {\r\n          console.log(\"This module has been deleted: \" + module.module_name)\r\n\r\n          const response = await apiConnection.deleteModule(module.module_id);\r\n        }\r\n\r\n\r\n      })\r\n    )\r\n    await Promise.all(\r\n      deleteList.map(async (deleteModuleID) => {\r\n        const response = await apiConnection.deleteModule(deleteModuleID);\r\n      })\r\n    )\r\n\r\n    navigation.goBack();\r\n\r\n  }\r\n\r\n\r\n\r\n  function addNewModule() {\r\n    let newEmptyModule = {\r\n      \"module_id\": newModIndex,\r\n      \"changeType\": \"Created\",\r\n      \"module_name\": \"New Module\",\r\n      \"module_descrip\": \"new description\",\r\n      \"instructor_id\": null,\r\n      \"lessons\": []\r\n    }\r\n\r\n    setnewModIndex(newModIndex - 1);\r\n\r\n    let newStateData = stateData;\r\n    newStateData.push(newEmptyModule);\r\n    setStateData(newStateData);\r\n\r\n\r\n    forceUpdate()\r\n\r\n  }\r\n\r\n  function getModuleView() {\r\n    // const result = [];\r\n    // for (let i = 0; i < stateData.length; i++) {\r\n    //   result.push(\r\n    //     <ModuleEditComponent\r\n    //       key={i}\r\n    //       allData={stateData}\r\n    //       setData={setStateData}\r\n    //       lessonData={stateData[i]}\r\n    //     ></ModuleEditComponent>\r\n    //   );\r\n    // }\r\n\r\n    return (\r\n      <View\r\n      >\r\n        {stateData.map((module, index) => (\r\n          <ModuleEditComponent\r\n          \r\n          key={index}\r\n          allData={stateData}\r\n          setData={setStateData}\r\n          lessonData={module}>\r\n           \r\n          </ModuleEditComponent>\r\n        ))\r\n        \r\n        }\r\n      </View>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <ScrollView>\r\n      {isLoading ? <ActivityIndicator \r\n      size={\"large\"}\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        padding: 10\r\n      }}\r\n      ></ActivityIndicator> : <View>\r\n      <View style={{ padding: 10, flex: 1, backgroundColor: \"white\" }}>\r\n        <Text style={styles.label}>Edit Modules</Text>\r\n        <ScrollView>\r\n          <ModuleEditComponentContainer\r\n          stateData={stateData}\r\n          setStateData={setStateData}\r\n          navigation={navigation}\r\n          ></ModuleEditComponentContainer>\r\n        </ScrollView>\r\n\r\n        <Button\r\n          onPress={() => onSave()}\r\n          title=\"Save\"\r\n          titleStyle={{ fontWeight: \"700\" }}\r\n          buttonStyle={{\r\n            backgroundColor: \"rgba(90, 154, 230, 1)\",\r\n            borderColor: \"transparent\",\r\n            borderWidth: 0,\r\n            borderRadius: 100,\r\n          }}\r\n          containerStyle={{\r\n            width: 100,\r\n            marginHorizontal: 50,\r\n            marginVertical: 10,\r\n            paddingHorizontal: 200,\r\n            paddingTop: 40,\r\n          }}\r\n        />\r\n\r\n\r\n      </View>\r\n      <FAB\r\n        style={styles.fab}\r\n        icon={{\r\n          name: 'add',\r\n          color: 'white',\r\n        }}\r\n        color=\"blue\"\r\n        onPress={() => addNewModule()}\r\n      >\r\n\r\n      </FAB>\r\n        </View>}\r\n\r\n      \r\n    </ScrollView>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginTop: 8,\r\n    backgroundColor: \"aliceblue\",\r\n  },\r\n  box: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  button: {\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 6,\r\n    borderRadius: 4,\r\n    backgroundColor: \"oldlace\",\r\n    alignSelf: \"flex-start\",\r\n    marginHorizontal: \"1%\",\r\n    marginBottom: 6,\r\n    minWidth: \"48%\",\r\n    textAlign: \"center\",\r\n  },\r\n  selected: {\r\n    backgroundColor: \"coral\",\r\n    borderWidth: 0,\r\n  },\r\n  buttonLabel: {\r\n    fontSize: 12,\r\n    fontWeight: \"500\",\r\n    color: \"coral\",\r\n  },\r\n  selectedLabel: {\r\n    color: \"white\",\r\n  },\r\n  label: {\r\n    textAlign: \"center\",\r\n    marginBottom: 10,\r\n    fontSize: 24,\r\n  },\r\n  contentView: {\r\n    flex: 1,\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    marginVertical: 20,\r\n  },\r\n  subHeader: {\r\n    backgroundColor: \"#2089dc\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    paddingVertical: 5,\r\n    marginBottom: 10,\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Text, TabView } from 'react-native-elements';\r\nimport CourseEditScreen from './CourseEditScreen';\r\nimport EditModuleScreen from './EditModuleScreen'\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport ModuleEditComponent from '../../../component/ModuleEditComponent';\r\n\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\n\r\nexport default function EditCourseAndModuleTabScreen({ route, navigation }) {\r\n\r\n    const {courseID, courseName} = route.params;\r\n\r\n    return (\r\n        <Tab.Navigator>\r\n            <Tab.Screen name=\"Course Edit\" component={CourseEditScreen} initialParams={{courseID, courseName}} />\r\n            <Tab.Screen name=\"Module Edit\" component={EditModuleScreen}  initialParams={{courseID, courseName}} />\r\n        </Tab.Navigator>\r\n    );\r\n};","import React, { useState, useEffect, Component, useContext } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport {Button} from \"react-native-paper\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { Input, Icon, ButtonGroup, Divider } from \"react-native-elements\";\r\nimport { AuthContext } from \"../../../store/AuthContext\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function CreateCourse({ navigation }) {\r\n  const apiConnection = new APIConnection();\r\n\r\n  const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n  const categoryData = [\"Mathematic\", \"Physics\", \"English\", \"Computer Science\"];\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n\r\n  const [selectedCourseTypeIndex, setSelectedCourseTypeIndex] = useState(0);\r\n  const [courseText, setCourseText] = useState(null);\r\n\r\n  const [courseDesc, setCourseDesc] = useState(null);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const token = authCtx.token;\r\n\r\n  function onSaved(courseName, courseDesc) {\r\n    apiConnection\r\n      .postClass(courseName, courseDesc)\r\n      .then(() => delay(300))\r\n      .then((json) => {\r\n        navigation.push(\"Instructor Dashboard\");\r\n      });\r\n  }\r\n\r\n  function getCategoryPickerItems() {\r\n    let result = [];\r\n    for (let i = 0; i < categoryData.length; i++) {\r\n      result.push(\r\n        <Picker.Item key={i} label={categoryData[i]} value={categoryData[i]} />\r\n      );\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n      <Text style={styles.title}> Create Course </Text>\r\n      <Text style={addClass.placeholderText}>Course Name</Text>\r\n\r\n      <TextInput\r\n        style={addClass.courseName}\r\n        value={courseText}\r\n        returnKeyType='done'\r\n        onChangeText={(courseText) => setCourseText(courseText)}\r\n      />\r\n\r\n\r\n      <Text style={styles.placeholderDesc}>Course Description</Text>\r\n      <TextInput\r\n          style={styles.courseDesc}\r\n         // label=\"Course Description\"\r\n          //value={courseDescription}\r\n          returnKeyType='done'\r\n          multiline={true} \r\n          onChangeText={(text) => setCourseDesc(text)}\r\n        />\r\n\r\n\r\n      <View style={styles.bottomContainer}>\r\n        <TouchableOpacity\r\n        style={addClass.addBttn}\r\n          onPress={() => {\r\n            if (courseText == \"\") {\r\n              alert(\"Need to enter class name\");\r\n            } else {\r\n              onSaved(courseText, courseDesc);\r\n            }\r\n            \r\n          }}\r\n        >\r\n\r\n            <Text style={addClass.addText}>Save</Text>\r\n  \r\n        </TouchableOpacity>\r\n      </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\", // ignore this - we'll come back to it\r\n    //justifyContent: 'space-around',\r\n    // flexDirection:'column',\r\n    backgroundColor: \"#E8EAED\",\r\n  },\r\n\r\n  content: {\r\n    flex: 2,\r\n    //alignItems: \"center\",\r\n    //justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  bottomContainer: {\r\n    flex: 1,\r\n    paddingTop: 20,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"#4970FA\",\r\n    marginTop: 50,\r\n    marginBottom: 50,\r\n  },\r\n\r\n  boxes: {\r\n    marginTop: 10,\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    width: 300,\r\n    height: 200,\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  courseDesc: {\r\n    marginTop:40,\r\n    justifyContent: \"center\",\r\n    alignSelf:'center',\r\n    height: 200,\r\n    width: 250,\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n   // marginBottom: 10,\r\n    //paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor:'white',\r\n    marginBottom:0,\r\n\r\n  },\r\n  placeholderDesc: {\r\n\r\n    color: \"black\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    //marginBottom: 1,\r\n    marginRight: 105,\r\n    marginBottom:-40,\r\n    marginTop:40,\r\n   \r\n   // marginTop: ,\r\n  },\r\n});\r\n\r\nconst addClass = StyleSheet.create({\r\n  courseName: {\r\n    position: \"relative\",\r\n    justifyContent: \"center\",\r\n    //alignItems: 'center',\r\n    paddingHorizontal: 10, //inner text spacing\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    width: 250,\r\n    height: 40,\r\n    //marginTop:100\r\n  },\r\n\r\n  addBttn: {\r\n    alignSelf: \"center\",\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n\r\n    // paddingBottom: 5,\r\n    // position: \"absolute\",\r\n    height: 50,\r\n    width: 200,\r\n\r\n    borderRadius: 50,\r\n    backgroundColor: \"#4970FA\",\r\n    color: \"white\",\r\n    // bottom: 50,\r\n    //margin: 1,\r\n  },\r\n\r\n  addText: {\r\n    color: \"white\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  placeholderText: {\r\n    position: \"relative\",\r\n    color: \"black\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 1,\r\n    marginRight: 140,\r\n    marginTop: 10,\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\n// Import required components\r\nimport {\r\n  SafeAreaView,\r\n  LayoutAnimation,\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  UIManager,\r\n  TouchableOpacity,\r\n  Platform,\r\n} from 'react-native';\r\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\r\n\r\nexport default function ModuleView({item, onClickFunction,route,lessonID,navigation}) {\r\n    //Custom Component for the Expandable List\r\n    \r\n  const [layoutHeight, setLayoutHeight] = useState(0);\r\n\r\n  //same as component did mount, this method is called when the component is first mounted\r\n  useEffect(() => {\r\n    if (item.isExpanded) {\r\n      setLayoutHeight(null);\r\n    } else {\r\n      setLayoutHeight(0);\r\n    }\r\n  }, [item.isExpanded]);\r\n\r\n  return (\r\n    <View>\r\n      {/*Header of the Expandable List Item*/}\r\n     \r\n      <View style={styles.classes}>\r\n      <TouchableOpacity\r\n        activeOpacity={0.8}\r\n        onPress={onClickFunction}\r\n        style={styles.header}>\r\n\r\n        <Text style={styles.headerText} >{item.Module_Title}</Text>\r\n        <FontAwesome5 style={{transform:[{rotate: layoutHeight != 0? '180deg': '0deg'}] }} name={'angle-down'} size={15} color={'white'}/>\r\n        \r\n    \r\n      </TouchableOpacity>\r\n       </View>\r\n      <View\r\n        style={{\r\n          height: layoutHeight,\r\n          overflow: 'hidden',\r\n         \r\n          // alignContent:'center',\r\n          // alignItems:'center',\r\n          // justifyContent:'center',\r\n        \r\n        }}>\r\n        {/*Content under the header of the Expandable List Item*/}\r\n        {item.Lessons.map((item, key) => (\r\n          <TouchableOpacity\r\n            key={key}\r\n            style={styles.content}\r\n            onPress={() =>  navigation\r\n              .navigate('LessonCreation', {\r\n               lessonID : item.lesson_id})\r\n        //  alert('Id: ' + item.lesson_id + ' val: ' + item.lesson_descrip)\r\n          }>\r\n            <Text style={styles.text}>\r\n               {item.lesson_name}\r\n            </Text>\r\n            {/* <View style={styles.separator} /> */}\r\n            \r\n          </TouchableOpacity>\r\n          \r\n        ))}\r\n        \r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    classes:{\r\n      // backgroundColor: 'black',\r\n     \r\n      alignItems:'center',\r\n      padding:5,\r\n      borderRadius:10\r\n    },\r\n    container: {\r\n      flex: 1,\r\n    },\r\n    titleText: {\r\n      flex: 1,\r\n      fontSize: 22,\r\n      fontWeight: 'bold',\r\n    },\r\n    header: {\r\n      width:345,\r\n      alignItems:'center',\r\n      borderRadius:10,\r\n      borderWidth:.85,\r\n      //borderColor:'#E8EAED',\r\n      flexDirection:'row',\r\n      justifyContent:'space-between',\r\n       backgroundColor: '#3385ff',\r\n      padding: 20,\r\n    },\r\n    headerText: {\r\n      fontSize: 16,\r\n      fontWeight: '500',\r\n      color: 'white'\r\n    },\r\n    separator: {\r\n      height: 1,\r\n      backgroundColor: 'black',\r\n      width: '95%',\r\n      marginLeft: 16,\r\n      marginRight: 16,\r\n    },\r\n    text: {\r\n      fontSize: 16,\r\n      color: 'black',\r\n      padding: 10,\r\n    },\r\n    content: {\r\n      borderRadius:10,\r\n      borderColor:'black',\r\n      borderWidth:.75,\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      backgroundColor: 'white',\r\n      margin:2\r\n    },\r\n  });","import { useEffect, useState, useContext, useLayoutEffect } from \"react\";\r\nimport * as React from \"react-native\";\r\nimport { BottomSheet, Button, ListItem } from \"react-native-elements\";\r\n\r\nimport { Component } from \"react\";\r\n//import { render } from 'react-dom';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  LayoutAnimation,\r\n  UIManager,\r\n  Platform,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport FontAwesome5 from \"react-native-vector-icons/FontAwesome5\";\r\nimport Icon from \"react-native-vector-icons/SimpleLineIcons\";\r\n// import {AuthContext} from '../store/AuthContext';\r\nimport ModuleView from \"../../../component/ModuleView\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n//  import Course from '../component/course';\r\n\r\n\r\n\r\nexport default function InstructorCourseView({ navigation, route }) {\r\n  //retrieving course name and courseID from route.params\r\n  const { courseID, courseName } = route.params;\r\n\r\n\r\n\r\n\r\n  //-----------API Connection Code----------\r\n  const isFocused = useIsFocused();\r\n\r\n  const [finalData, setFinalData] = useState([]);\r\n  const [lessonID, setLessonID] = useState(0);\r\n\r\n  const apiConnection = new APIConnection();\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      apiConnection.getAllModulesForClass(courseID)\r\n        .then((json) => {\r\n\r\n          let data = processAPIModuleData(json);\r\n          data.forEach(element => {\r\n\r\n            console.log('data :' + element.Module_ID);\r\n            apiConnection.getLessonsInModule(element.Module_ID)\r\n              .then((json) => {\r\n                processAPILesson(element.Lessons, json);\r\n\r\n              });\r\n\r\n          })\r\n\r\n          setFinalData(data);\r\n\r\n        })\r\n\r\n    }\r\n\r\n  }, [isFocused]);\r\n\r\n\r\n  function processAPILesson(lessonArr, lessonData) {\r\n\r\n    for (let i = 0; i < lessonData.length; i++) {\r\n      let newLesson = {};\r\n      newLesson['lesson_id'] = lessonData[i].lesson_id;\r\n      newLesson['lesson_name'] = lessonData[i].lesson_name;\r\n      newLesson['lesson_descrip'] = lessonData[i].lesson_descrip;\r\n      newLesson['lesson_index'] = lessonData[i].lesson_index;\r\n\r\n      lessonArr[i] = newLesson;\r\n\r\n    }\r\n    return lessonArr;\r\n  }\r\n\r\n\r\n  //Morph json from API into an array that we can use\r\n  function processAPIModuleData(json) {\r\n    let returnData = []\r\n    for (let i = 0; i < json.length; i++) {\r\n      let newModule = {};\r\n      newModule['isExpanded'] = false;\r\n      newModule['Module_Title'] = json[i].module_name;\r\n      newModule['Module_ID'] = json[i].module_id;\r\n      newModule['instructorID'] = json[i].instructor_id;\r\n      newModule['Lessons'] = [];\r\n\r\n      returnData[i] = newModule;\r\n\r\n\r\n    }\r\n\r\n    return returnData;\r\n  }\r\n  //---------------------------------------\r\n\r\n  //Morph json from API into an array that we can use\r\n  function processAPIData(json) {\r\n    let returnData = [];\r\n    for (let i = 0; i < json.length; i++) {\r\n      let newModule = {};\r\n      newModule[\"isExpanded\"] = false;\r\n      newModule[\"Module_Title\"] = json[i].module_name;\r\n      let newLessonArray = [];\r\n      for (let j = 0; j < json[i].lessons.length; j++) {\r\n        newLessonArray[j] = json[i].lessons[j];\r\n        setLessonID(newLessonArray[j].lesson_id);\r\n        console.log(lessonID);\r\n      }\r\n      newModule[\"Lessons\"] = newLessonArray;\r\n      returnData[i] = newModule;\r\n    }\r\n    return returnData;\r\n  }\r\n\r\n\r\n  if (Platform.OS == \"android\") {\r\n    UIManager.setLayoutAnimationEnabledExperimental(true);\r\n  }\r\n  //this is used to signified the component is abou tto be animated (like setState())\r\n  //could be used to define animation property\r\n  const updateLayout = (index) => {\r\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\r\n    const array = [...finalData];\r\n\r\n    array[index][\"isExpanded\"] = !array[index][\"isExpanded\"];\r\n\r\n    setFinalData(array);\r\n  };\r\n\r\n\r\n  return (\r\n    <View // onLayout={(event)=>{\r\n      style={{ flex: 2, alignItems: \"stretch\" }}\r\n    >\r\n      <SafeAreaView style={{ flex: 1 }}>\r\n\r\n\r\n        <View style={styles.courseTitleBackground}>\r\n          <Text\r\n            style={{\r\n              fontSize: 25,\r\n              color: \"white\",\r\n              textAlign: \"center\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            {courseName}\r\n          </Text>\r\n        </View>\r\n\r\n        {/* <View onLayout={(event)=>{\r\n            var{x,y,width,Viewheight} = event.nativeEvent.layout; cheight =Viewheight}} > */}\r\n        <ScrollView>\r\n          <View style={styles.lessContainer}>\r\n            {/* {getLesson()}  */}\r\n            {/* <SafeAreaView style={{ }}> */}\r\n\r\n            <View style={styles.container}>\r\n              <View style={{ flexDirection: \"row\", padding: 10 }}>\r\n                <TouchableOpacity\r\n                  onPress={() => setMultiSelect(!multiSelect)}\r\n                ></TouchableOpacity>\r\n              </View>\r\n              <ScrollView>\r\n                {finalData.map((item, key) => (\r\n                  <ModuleView\r\n                    key={key}\r\n                    onClickFunction={() => {\r\n                      updateLayout(key);\r\n                    }}\r\n                    route={route}\r\n                    navigation={navigation}\r\n                    // lessonID={lessonID}\r\n                    item={item}\r\n                  />\r\n                ))}\r\n              </ScrollView>\r\n            </View>\r\n            {/* </SafeAreaView> */}\r\n          </View>\r\n        </ScrollView>\r\n\r\n        <TouchableOpacity\r\n          style={styles.editButton}\r\n          onPress={() => navigation.navigate('EditCourseAndModule', {\r\n            courseID: courseID,\r\n            courseName: courseName\r\n          })}\r\n        >\r\n          <FontAwesome5 name={\"edit\"} color={\"white\"} size={20} />\r\n        </TouchableOpacity>\r\n        {/* </View> */}\r\n      </SafeAreaView>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  courseTitleBackground: {\r\n    backgroundColor: \"#4970FA\",\r\n    padding: 20,\r\n  },\r\n\r\n  editButton: {\r\n    alignSelf: 'flex-end',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 80,\r\n    height: 80,\r\n    paddingBottom: 5,\r\n    position: \"absolute\",\r\n    //height: 60,\r\n\r\n    borderRadius: 50,\r\n    backgroundColor: '#4970FA',\r\n    color: 'white',\r\n    right: 20,\r\n    bottom: 40\r\n  },\r\n  titleStyle: {\r\n    color: \"white\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    // borderWidth: 3,\r\n    // borderColor:'black',\r\n    width: 350,\r\n  },\r\n  titleText: {\r\n    flex: 1,\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n  },\r\n  menu: {\r\n    // alignItems:'flex-start',\r\n\r\n    alignSelf: \"flex-start\",\r\n    justifyContent: \"center\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"#3385ff\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  lesson: {\r\n    backgroundColor: \"#3385ff\",\r\n    width: 75,\r\n    height: 75,\r\n    borderRadius: 75 / 2,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  lessonCompletion: {\r\n    backgroundColor: \"#3385ff\",\r\n    width: 75,\r\n    height: 75,\r\n    borderRadius: 75 / 2,\r\n    alignSelf: \"center\",\r\n    // justifyContent:'space-between'\r\n  },\r\n  lessContainer: {\r\n    // backgroundColor: 'gray',\r\n    // shadowColor:'#171717',\r\n    // shadowOffset: {width: -2, height: 4},\r\n    // shadowOpacity: 0.2,\r\n    // shadowRadius: 3,\r\n    flex: 20,\r\n    marginTop: 10,\r\n    width: 350,\r\n\r\n    alignSelf: \"center\",\r\n    // borderColor:'#3385ff',\r\n    // borderWidth:3,\r\n    // borderRadius:20,\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  lessonNum: {\r\n    backgroundColor: `#0000ff`,\r\n    marginTop: 50,\r\n    width: 80,\r\n    height: 25,\r\n    borderRadius: 78,\r\n  },\r\n  searchIcon: {\r\n    justifyContent: \"center\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  homeIcon: {\r\n    alignSelf: \"flex-start\",\r\n    marginLeft: 5,\r\n  },\r\n  settingIcon: {\r\n    alignSelf: \"center\",\r\n  },\r\n  profileIcon: {\r\n    alignSelf: \"flex-end\",\r\n    marginRight: 5,\r\n  },\r\n});\r\n","import React, { Children,useState,useCallback, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View,Pressable,Modal,Text,ScrollView, Alert, StyleSheet, TextInput, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList } from \"react-native\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport ReactPlayer from \"react-player\";\r\nimport YoutubePlayer from 'react-native-youtube-iframe';\r\nimport { AuthContext } from '../store/AuthContext';\r\nimport { Button } from 'react-native-paper';\r\n\r\n\r\n\r\n\r\n\r\nconst Content = (props) => {\r\n        \r\n    return (\r\n        \r\n\r\n        \r\n\r\n        <View style={styles.container}>\r\n     \r\n\r\n     \r\n    \r\n            <Text selectable={true} style={styles.textStyle}>\r\n           {props.text}\r\n            </Text>\r\n\r\n\r\n\r\n\r\n        \r\n\r\n\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      //  flex:1,\r\n       // alignItems:'stretch',\r\n    \r\n        //margin:5,\r\n       //borderWidth:1,\r\n       borderColor: '#C0C0C0',\r\n      \r\n    \r\n    \r\n      },\r\n      textStyle: {\r\n        //  flex:1,\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        marginHorizontal:5,\r\n        marginBottom:10,\r\n\r\n        \r\n    \r\n      },\r\n      textHolder: {\r\n        flex:1,\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        minWidth: Dimensions.get('window').width -20,\r\n        //paddingBottom:100,\r\n        //maxHeight: 800,\r\n\r\n      \r\n\r\n  \r\n \r\n       \r\n        //minWidth:Dimensions.get('window').width-15,\r\n      \r\n  \r\n\r\n      \r\n    \r\n      },\r\n\r\n\r\n\r\n\r\n});\r\n\r\n\r\nexport default Content;\r\n","import React, { Children,useState,useCallback, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View,Pressable,Modal,Text,ScrollView, Alert, StyleSheet, Button, TextInput, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList } from \"react-native\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { Video, AVPlaybackStatus } from 'expo-av';\r\nimport { WebView } from 'react-native-webview';\r\nimport ReactPlayer from \"react-player\";\r\nimport YoutubePlayer from 'react-native-youtube-iframe';\r\nimport { AuthContext } from '../store/AuthContext';\r\n\r\n\r\n\r\n\r\nconst TextContent = (props) => {\r\n    \r\n    //const [height, setHeight] = useState(42);\r\n\r\n \r\n\r\n   \r\n    \r\n    return (\r\n        \r\n\r\n        \r\n\r\n        <View style={styles.container}>\r\n     \r\n\r\n     \r\n\r\n\r\n            <Text style={styles.textStyle}>\r\n        {props.TextInput}\r\n         </Text>\r\n\r\n\r\n\r\n        </View>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n       // flex:1,\r\n        alignItems:'stretch',\r\n       // marginBottom:5,\r\n       // margin:5\r\n       //borderWidth:1,\r\n       borderColor: '#C0C0C0',\r\n      \r\n    \r\n    \r\n      },\r\n      textStyle: {\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        marginHorizontal:5,\r\n        marginTop:25,\r\n        \r\n    \r\n      },\r\n      textHolder: {\r\n        flex:2,\r\n        fontSize: 16,\r\n        fontWeight: \"bold\",\r\n        minWidth: Dimensions.get('window').width -20,\r\n\r\n   \r\n        \r\n        //paddingBottom:100,\r\n        //maxHeight: 800,\r\n\r\n      \r\n\r\n  \r\n \r\n       \r\n        //minWidth:Dimensions.get('window').width-15,\r\n      \r\n  \r\n\r\n      \r\n    \r\n      }\r\n\r\n\r\n\r\n});\r\n\r\n\r\nexport default TextContent;\r\n","import React, { Children, useState, useCallback, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View,TextInput, Pressable, Modal, Text, ScrollView, Alert, StyleSheet, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList } from \"react-native\";\r\nimport { AuthContext } from '../../../store/AuthContext';\r\nimport APIConnection from '../../../utility/APIConnection';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { Video, AVPlaybackStatus } from 'expo-av';\r\n//import { TextInput } from 'react-native-paper';\r\n\r\n\r\nimport ReactPlayer from \"react-player\";\r\nimport YoutubePlayer from 'react-native-youtube-iframe';\r\nimport Content from '../../../component/CreateComponent';\r\nimport TextContent from '../../../component/CreateText';\r\nimport { Button } from 'react-native-paper';\r\n\r\n\r\n//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiaWF0IjoxNjUwNzU5MTg0LCJleHAiOjE2NTA4NDU1ODR9.yOWeS1cXAYZEXHyAkG5ncmznm64Mtu8vvcF9e_pw8WQ\r\n///1ba2a0e8-473d-4410-a5fb-2c8a5299ecb6\r\n\r\n\r\nexport default function CreateContent({navigation, route}) {\r\n\r\n  const {unitID, unitName} = route.params;\r\n\r\n\r\n\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const token = authCtx.token;\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [text, setText] = useState('');\r\n  const [textItems, setTextItems] = useState([]);\r\n  const [data, setData] = useState();\r\n\r\n  const video = React.useRef(null);\r\n  const [unitNameEntry, setUnitNameEntry] = useState(unitName);\r\n\r\n\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n\r\n\r\n  //Youtube URL \r\n  const [modalVisible1, setModalVisible1] = useState(false);\r\n  //bottom modal pop\r\n  const [modalVisible2, setModalVisible2] = useState(false);\r\n\r\n  //quiz modal\r\n  const [modalVisible3, setModalVisible3] = useState(false);\r\n\r\n\r\n\r\n\r\n  const [link, setLink] = useState('');\r\n  const [linkItems, setLinkItems] = useState([]);\r\n\r\n  const [linkItemsAPI, setLinkItemsAPI] = useState([]);\r\n  const [itemsAPI, setItemsAPI] = useState([]);\r\n\r\n  const [videoDisplay, setVideoDisplay] = useState([]);\r\n\r\n\r\n  const apiConnection = new APIConnection();\r\n\r\n  const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n  async function onSaved(content, content2,unit_id) {\r\n\r\n\r\n    if(unitNameEntry != unitName)\r\n    {\r\n      await apiConnection.editUnitName(unitID, unitNameEntry)\r\n    }\r\n\r\n\r\n    apiConnection.editUnitContent(content, content2, unitID).then(() => delay(300)).then((json) => {\r\n      setLink(link);\r\n      // navigation.push('Instructor Dashboard');\r\n      navigation.goBack();\r\n      ///https://www.youtube.com/watch?v=cBxyB788_5w\r\n    })\r\n  }\r\n\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {\r\n    //your code here\r\n\r\n    \r\n    if (isFocused) {\r\n      apiConnection.getUnitByID(unitID).then((unitjson) => {\r\n        setUnitNameEntry(unitjson.unit_name)\r\n      })\r\n      apiConnection.getUnitContent(unitID).then((json) => {\r\n        setData(json);\r\n        let unitContent = json.unit_content;\r\n        setVideoDisplay(json.unit_content);\r\n        setLinkItems([textInput(json.unit_content)]);\r\n        setLinkItemsAPI(link);\r\n        setTextItems([json.unit_content_type])\r\n        setLink(json.unit_content);\r\n        setText(json.unit_content_type)\r\n      })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n  }, [isFocused]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function YouTubeGetID(url) {\r\n    url = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\r\n    return (url[2] !== undefined) ? url[2].split(/[^0-9a-z_\\-]/i)[0] : url[0];\r\n  }\r\n\r\n  //Checks for links and matches if they are youtube links. add to array\r\n  const handleLinks = () => {\r\n    //setLink(null)\r\n    var urlRegex = /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig;\r\n    if (link == null || !JSON.stringify(link).match(urlRegex)) {\r\n      Alert.alert(\"Wrong Input\", \"Must enter a Youtube URL\");\r\n      //setLink(\"\");\r\n      return null;\r\n    }\r\n\r\n\r\n    setLinkItems([textInput(link)]);\r\n    setLinkItemsAPI(link);\r\n    //onSaved(linkItems);\r\n    //setLink('');\r\n    console.log(linkItems);\r\n\r\n  }\r\n\r\n  //Checks if it's text. add to array\r\n  const handleText = () => {\r\n    //setLink(null)\r\n    if (text == null) {\r\n      Alert.alert(\"Wrong Input\", \"Must enter text\");\r\n      setText(text);\r\n      return null;\r\n\r\n    }\r\n\r\n    setTextItems(text);\r\n    //setTextItemsAPI([...textItemsAPI, text])\r\n    //onSaved(text);\r\n    //setText(null);\r\n\r\n\r\n  }\r\n\r\n  function deleteVideo () {\r\n    if (linkItems == null || linkItems == \"\"  ) {\r\n      return null;\r\n\r\n\r\n    } else if (linkItems != \"\" || linkItems != null) {\r\n      return  <Button icon=\"delete\" mode=\"contained\" color='red' onPress={() => {setLinkItems(null); setLink(\"\")}}>\r\n      Delete</Button>\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function deleteText () {\r\n    if (textItems == null || textItems == \"\"  ) {\r\n      return null;\r\n\r\n\r\n    } else if (textItems != \"\" || textItems != null) {\r\n      return  <Button icon=\"delete\" mode=\"contained\" color='red' onPress={() => {setTextItems(null); setText(\"\")}}>\r\n      Delete</Button>\r\n    }\r\n\r\n  }\r\n\r\n  //turns valid link into component\r\n  function textInput(videolink) {\r\n    if (videolink == \"\" || videolink == null) {\r\n     // Alert.alert(\"Wrong Input\", \"Must enter a Youtube URL\");\r\n    // setLink(link)\r\n      //setLink('');\r\n      return \"\";\r\n    } \r\n\r\n    var linkInput = JSON.stringify(videolink);\r\n\r\n    if (Platform.OS === 'web') {\r\n\r\n      return <div style={{ marginTop: 10 }}>\r\n        <ReactPlayer\r\n          url={linkInput}\r\n          height={200}\r\n          width={400}\r\n\r\n          controls={true} />\r\n      </div>\r\n\r\n\r\n    } else if (Platform.OS == 'ios' || Platform.OS === 'android') {\r\n\r\n      return <YoutubePlayer\r\n      key={0}\r\n        height={270}\r\n        width={400}\r\n        play={playing}\r\n        videoId={YouTubeGetID(linkInput)}\r\n        webViewStyle={{ bottom: -40 }}\r\n      //videoId={\"iee2TATGMyI\"}\r\n      //https://youtu.be/cBxyB788_5w\r\n\r\n      />\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  //https://www.youtube.com/watch?v=cBxyB788_5w\r\n  //https://www.youtube.com/watch?v=JfVOs4VSpmA\r\n  //https://www.youtube.com/watch?v=jrLhP5sK2wI\r\n\r\n\r\n\r\n\r\n  return (\r\n    /**/\r\n    <View style={styles.container}>\r\n      <TextInput\r\n      style={styles.title}\r\n      defaultValue={unitNameEntry}\r\n      placeholder='Change Unit Name Here'\r\n      value={unitNameEntry}\r\n      onChangeText={text => setUnitNameEntry(text)}\r\n    />\r\n      <View style={styles.content}>\r\n\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible1}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            setModalVisible1(!modalVisible1);\r\n          }}\r\n        >\r\n\r\n          <TouchableWithoutFeedback>\r\n\r\n            <View style={modalView.centeredView}>\r\n              <View style={modalView.modalView}>\r\n                <Text style={modalView.modalText}>Enter a Youtube Link</Text>\r\n\r\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\r\n                  <TextInput style={modalView.textInput} placeholder={'Enter URL'} value={link} onChangeText={newText => setLink(newText)} />\r\n                </KeyboardAvoidingView>\r\n\r\n                <TouchableOpacity\r\n                  style={[modalView.button, modalView.buttonClose]}\r\n                  onPress={() => { handleLinks(), setModalVisible1(!modalVisible1); }}\r\n                >\r\n                  <Text style={modalView.textStyle}>Done</Text>\r\n                </TouchableOpacity>\r\n\r\n              </View>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n\r\n        </Modal>\r\n\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible3}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            setModalVisible3(!modalVisible3);\r\n          }}\r\n        >\r\n\r\n          <TouchableWithoutFeedback>\r\n\r\n            <View style={modalView.centeredView}>\r\n              <View style={modalView.modalView}>\r\n                <Text style={modalView.modalText}>Enter text</Text>\r\n\r\n                <KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\r\n                  <TextInput style={modalView.textInput2} multiline={true} editable={true} placeholder={'Enter text'} value={text} onChangeText={newText => setText(newText)} />\r\n                </KeyboardAvoidingView>\r\n\r\n                <TouchableOpacity\r\n                  style={[modalView.button, modalView.buttonClose]}\r\n                  onPress={() => { handleText(), setModalVisible3(!modalVisible3) }}\r\n                >\r\n                  <Text style={modalView.textStyle}>Done</Text>\r\n                </TouchableOpacity>\r\n\r\n              </View>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n\r\n        </Modal>\r\n\r\n\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible2}\r\n          onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            setModalVisible2(!modalVisible2);\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            activeOpacity={1}\r\n            onPressOut={() => { setModalVisible2(false) }}\r\n          >\r\n            <TouchableWithoutFeedback>\r\n              <View style={bottomModal.centeredView}>\r\n                <View style={bottomModal.modalView}>\r\n                  <Text style={bottomModal.modalText}>Choose Content:</Text>\r\n\r\n                  <TouchableOpacity style={[bottomModal.button, bottomModal.buttonClose]} onPress={() => { setModalVisible1(true); setModalVisible2(!modalVisible2) }}>\r\n                    <Text style={addClass.textStyle}>Add Video</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity style={[bottomModal.button, bottomModal.buttonClose]} onPress={() => { setModalVisible3(!modalVisible3); setModalVisible2(!modalVisible2) }}>\r\n                    <Text style={addClass.textStyle}>Add Text</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity style={[bottomModal.button, bottomModal.buttonClose]} onPress={() => { {setModalVisible2(!modalVisible2); navigation.navigate('Edit Quiz')} }}>\r\n                    <Text style={addClass.textStyle}>Add Quiz</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <Text style={bottomModal.textStyle}>Hide Modal</Text>\r\n\r\n                </View>\r\n              </View>\r\n            </TouchableWithoutFeedback>\r\n          </TouchableOpacity>\r\n        </Modal>\r\n\r\n        <ScrollView contentContainerStyle={styles.scroll}>\r\n\r\n          \r\n\r\n\r\n            \r\n\r\n\r\n           \r\n             <View>\r\n                <Content text={linkItems}/>\r\n                {deleteVideo()}\r\n\r\n                    </View>\r\n\r\n           \r\n                \r\n\r\n  \r\n          \r\n\r\n\r\n\r\n\r\n\r\n          <TextContent style={styles.textStyle} TextInput={textItems} />\r\n          {deleteText()}\r\n \r\n\r\n\r\n\r\n      </ScrollView>\r\n\r\n\r\n      </View>\r\n\r\n\r\n\r\n\r\n\r\n      <View style={styles.bottomContainer}>\r\n        <Button icon=\"content-save-outline\" mode=\"contained\" style={{ padding: 7, backgroundColor: '#4970FA' }} onPress={() => { onSaved(link,text) }}>\r\n          Save\r\n        </Button>\r\n        <Text style={{ alignSelf: 'center', marginBottom: 95, fontWeight: \"bold\", }}></Text>\r\n\r\n\r\n\r\n\r\n        <TouchableOpacity style={addClass.addText}  onPress={() => setModalVisible2(true)}>\r\n          \r\n            <Text style={addClass.textStyle}>Add Content</Text>\r\n\r\n        </TouchableOpacity>\r\n\r\n\r\n\r\n      </View>\r\n\r\n\r\n\r\n\r\n\r\n    </View>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#E8EAED',\r\n\r\n\r\n  },\r\n\r\n  scroll: {\r\n    //flex:1,\r\n    alignItems: 'center',\r\n\r\n\r\n  },\r\n\r\n  content: {\r\n    flex: 2,\r\n    alignSelf: 'center',\r\n    marginBottom: 5,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n  },\r\n\r\n\r\n  bottomContainer: {\r\n    //  flex:1,\r\n    justifyContent: 'flex-end',\r\n\r\n    shadowColor: \"black\",\r\n    backgroundColor: '#E8EAED',\r\n\r\n\r\n  },\r\n\r\n\r\n\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: 'black',\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n\r\n  },\r\n\r\n  boxes: {\r\n    marginTop: 10,\r\n    backgroundColor: 'white',\r\n    borderColor: '#C0C0C0',\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    width: 300,\r\n    height: 200,\r\n    textAlign: \"center\",\r\n    alignItems: \"center\"\r\n\r\n  },\r\n\r\n  video: {\r\n    alignSelf: 'center',\r\n    width: 320,\r\n    height: 200,\r\n  },\r\n\r\n  textStyle: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n});\r\n\r\nconst bottomModal = StyleSheet.create({\r\n  centeredView: {\r\n    //flex: 1,\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: 'center',\r\n    marginTop: Dimensions.get('window').height - 300,\r\n    //marginBottom:800\r\n  },\r\n  modalView: {\r\n    //  flex: 1,\r\n    // marginBottom: 300,\r\n    //position:'absolute',\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    width: Dimensions.get('window').width,\r\n    paddingBottom: 500,\r\n    // maxHeight:Dimensions.get('window').height - 50,\r\n    // marginBottom: 300,\r\n    //marginTop: 500,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    //flex:1,\r\n    //justifyContent: 'space-between',\r\n    borderRadius: 10,\r\n    backgroundColor: '#4970FA',\r\n    margin: 10,\r\n    padding: 10,\r\n    elevation: 2,\r\n    //alignSelf: 'auto'\r\n\r\n    //position:'absolute',\r\n\r\n\r\n  },\r\n  buttonOpen: {\r\n    //marginBottom:100,\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    width: 200,\r\n    borderRadius: 10,\r\n    backgroundColor: '#4970FA',\r\n    alignItems: 'center'\r\n  },\r\n  textStyle: {\r\n\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    alignSelf: 'center'\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n    alignSelf: 'center'\r\n\r\n  },\r\n  textInput: {\r\n    height: 30,\r\n    width: 200,\r\n    borderColor: '#C0C0C0',\r\n    borderWidth: 1,\r\n    borderRadius: 60,\r\n    marginBottom: 10,\r\n    //paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n\r\n  }\r\n\r\n\r\n});\r\n\r\nconst modalView = StyleSheet.create({\r\n  centeredView: {\r\n    // flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: Dimensions.get('window').height - 600\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    width: 350,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2\r\n  },\r\n  buttonOpen: {\r\n    backgroundColor: \"#F194FF\",\r\n  },\r\n  buttonClose: {\r\n    backgroundColor: \"#2196F3\",\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n\r\n  },\r\n  textInput: {\r\n    height: 40,\r\n    width: 300,\r\n    marginHorizontal:1,\r\n    borderColor: '#C0C0C0',\r\n    borderWidth: 1,\r\n    borderRadius: 60,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n\r\n  },\r\n\r\n  textInput2: {\r\n    height: 100,\r\n    width: 275,\r\n    borderColor: '#C0C0C0',\r\n    borderWidth: 1,\r\n    borderRadius: 20,\r\n    marginBottom: 10,\r\n    //paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n\r\n  }\r\n\r\n});\r\n\r\nconst addClass = StyleSheet.create({\r\n\r\n  addText: {\r\n    alignSelf: 'center',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 250,\r\n    height: 50,\r\n    paddingBottom: 5,\r\n    position: \"absolute\",\r\n    //height: 60,\r\n\r\n    borderRadius: 10,\r\n    backgroundColor: '#4970FA',\r\n    color: 'white',\r\n    //right: 20,\r\n    bottom: 25\r\n\r\n  },\r\n  addURL: {\r\n    alignSelf: 'flex-start',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 150,\r\n    height: 50,\r\n    paddingBottom: 5,\r\n    //position: \"absolute\",\r\n    //height: 60,\r\n\r\n    borderRadius: 10,\r\n    backgroundColor: '#4970FA',\r\n    color: 'white',\r\n    //right: 20,\r\n    bottom: 40\r\n\r\n  },\r\n\r\n  addQuiz: {\r\n    alignSelf: 'flex-end',\r\n\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 150,\r\n    height: 50,\r\n    paddingBottom: 5,\r\n    //position: \"absolute\",\r\n    //height: 60,\r\n\r\n    borderRadius: 10,\r\n    backgroundColor: '#4970FA',\r\n    color: 'white',\r\n    //right: 20,\r\n    bottom: 40\r\n\r\n  },\r\n\r\n  searchHolder: {\r\n\r\n\r\n\r\n    position: 'relative',\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: 'white',\r\n    borderColor: '#C0C0C0',\r\n    //bottom:100,\r\n    borderWidth: 1,\r\n    borderRadius: 60,\r\n    width: 250,\r\n\r\n    //justifyContent:'space-between'\r\n    marginTop: 25,\r\n\r\n\r\n    //right: 0,\r\n\r\n\r\n\r\n\r\n\r\n  },\r\n\r\n  textStyle: {\r\n\r\n    color: 'white',\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n\r\n  },\r\n\r\n\r\n\r\n\r\n}\r\n\r\n);\r\n\r\n\r\n","import * as React from 'react-native';\r\nimport {\r\n    Text, StyleSheet,\r\n    View, TouchableOpacity, SafeAreaView,\r\n    FlatList, TextInput, ScrollView\r\n} from 'react-native';\r\n\r\nimport { Card, Title, Paragraph, Button } from 'react-native-paper';\r\n\r\nconst UnitEditCard = ({unitName, onPress, onDelete, unitID}) => (\r\n\r\n    <View\r\n    style={styles.cardContainer}\r\n    >\r\n  <Card\r\n  \r\n  onPress={() => onPress(unitID, unitName)}>\r\n    <Card.Content>\r\n      <Title>{unitName}</Title>\r\n    </Card.Content>\r\n    <Card.Actions>\r\n      <Button\r\n      onPress={() => onDelete(unitID)}>Delete</Button>\r\n    </Card.Actions>\r\n  </Card>\r\n    </View>\r\n\r\n);\r\n\r\nexport default UnitEditCard;\r\n\r\nconst styles = StyleSheet.create({\r\n    cardContainer: {\r\n        padding: 10,\r\n       // flex: 1\r\n\r\n    },\r\n})","import { useEffect, useState } from 'react';\r\nimport * as React from 'react-native';\r\nimport {\r\n    Text, StyleSheet,\r\n    View, TouchableOpacity,\r\n    FlatList, TextInput, ScrollView, Dimensions,Alert,\r\n    Platform\r\n} from 'react-native';\r\n\r\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\r\nimport { Icon } from 'react-native-elements';\r\n\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\nimport UnitEditCard from '../../../component/UnitCardInstructor';\r\nimport { Card, Title, Paragraph, Button } from 'react-native-paper';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\n\r\n\r\nexport default function LessonCreation({ navigation, route }) {\r\n\r\n    //  const {lesssonID} = route.params;\r\n    const [newLessonName, setLessonName] = useState('');\r\n    const [myData, setMyData] = useState([]);\r\n    const [lessonData, setLessonData] = useState([]);\r\n\r\n    const { lessonID, lessonName } = route.params;\r\n\r\n    // isFocused tells us whether we are on the screen or not \r\n    const isFocused = useIsFocused();\r\n    const apiConnection = new APIConnection();\r\n    useEffect(() => {\r\n        if (isFocused) {\r\n            console.log('PASSED IN LessonID ' + lessonID);\r\n            getLessonInfo(lessonID);\r\n            refreshPage()\r\n\r\n        }\r\n    }, [isFocused]);\r\n\r\n\r\n\r\n    function onDelete(lessonID)\r\n    {\r\n      apiConnection.deleteLesson(lessonID);\r\n       navigation.goBack();\r\n    }\r\n\r\n    function refreshPage() {\r\n        apiConnection\r\n            .getSectionsPerLesson(lessonID)\r\n            .then((json) => {\r\n                let d = json;\r\n                setMyData(d);\r\n\r\n            });\r\n\r\n\r\n    }\r\n\r\n\r\n    function getLessonInfo(lesson_id) {\r\n        apiConnection.getSingleLessonForLessonCreation(lesson_id)\r\n            .then((json) => {\r\n                let data = json;\r\n                setLessonData(data)\r\n            })\r\n    }\r\n\r\n    function onUnitPress(unitID, unitName) {\r\n        navigation.navigate('Content Edit', {\r\n            unitID: unitID,\r\n            unitName: unitName,\r\n\r\n        })\r\n    }\r\n\r\n\r\n    async function changeName(lessonName, LessonID, lessDescription, lessIndex, modID) {\r\n        await apiConnection.putLessonNameForLessonCreation(lessonName, LessonID, lessDescription,\r\n            lessIndex, modID)\r\n    }\r\n\r\n    async function addUnit() {\r\n        await apiConnection.addUnitForLessonCreation(lessonID);\r\n        refreshPage();\r\n    }\r\n\r\n    async function deleteUnit(unitID) {\r\n        await apiConnection.deleteUnit(unitID);\r\n        refreshPage();\r\n\r\n    }\r\n\r\n    function alertDeleteLesson(){\r\n        Alert.alert(\r\n            \"Warning\",\r\n            \"Are you sure you want to delete this Lesson? You will not be able to recover it.\",\r\n            [\r\n              {\r\n                text: \"Cancel\",\r\n                style: \"cancel\",\r\n              },\r\n              {\r\n                text: \"Delete\",\r\n                onPress: () => { onDelete(lessonID) }\r\n      \r\n              }\r\n            ],\r\n            {\r\n              cancelable: true,\r\n      \r\n            }\r\n          );\r\n    }\r\n\r\n\r\n    return (\r\n        //   <View style={{flex:2}}>\r\n        <View>\r\n            <View style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n                {/* <ScrollView> */}\r\n                <Text style={{ fontSize: 20 }}>\r\n                    {newLessonName}\r\n                </Text>\r\n\r\n\r\n                <View style={{ flexDirection: 'row', marginTop: 50 }}>\r\n\r\n                    <View style={{\r\n                        alignItems: 'center', justifyContent: 'center',\r\n                        borderRadius: 2, borderColor: 'black', width: 100,\r\n                        height: 40,\r\n                    }}>\r\n                        <Text style={{ textAlign: 'center', fontSize: 13, fontWeight: 'bold', color: 'black' }}>\r\n                            Change Lesson Name:\r\n                        </Text>\r\n                    </View>\r\n\r\n                    <View style={{ justifyContent: 'center', alignContent: 'center', alignItems: 'center' }}>\r\n                        <TextInput defaultValue={lessonName} maxLength={100} style={{\r\n                            backgroundColor: 'silver', borderWidth: 2,\r\n                            borderColor: 'black', borderRadius: 5, width: 150, height: 40\r\n                        }}\r\n                            onChangeText={(newText) => {\r\n                                setLessonName(newText);\r\n\r\n                            }} />\r\n\r\n\r\n                    </View>\r\n\r\n                    {/* {console.log('LESSON_DESCRIPTION: '+ lessonData.lesson_descrip + \r\n                            \"\\n LESSON_INDEX : \" + lessonData.lesson_index + \r\n                            \" \\n LESSON_MODULE_ID: \" + lessonData.module_id\r\n                            + \"\\n Instructor_ID \" + instID)}  */}\r\n\r\n                    <TouchableOpacity style={styles.saveButton} onPress={() => {\r\n                        if (newLessonName != '') {\r\n                            changeName(newLessonName, lessonID, lessonData.lesson_descrip,\r\n                                lessonData.lesson_index, lessonData.module_id);\r\n                            alert('Saved ' + newLessonName + ' as new name')\r\n                        }\r\n                        else { alert('No new name was entered') }\r\n                    }}>\r\n                        <Text style={{ color: 'white' }}> Save Name</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity\r\n                        style={styles.buttonContainer}\r\n                        onPress={() =>\r\n                            {\r\n                                if(Platform.OS == 'web')\r\n                                {    onDelete(lessonID)\r\n                               \r\n                                }\r\n                                else if(Platform.OS == 'android' || Platform.OS == 'ios')\r\n                                {\r\n                                    alertDeleteLesson();\r\n                                }\r\n\r\n                            }\r\n\r\n                            }\r\n                    >\r\n                        <Icon name=\"delete\" size={30} color=\"#e33057\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n\r\n                {/* Displays the list of units*/}\r\n\r\n\r\n                {myData.length >= 1 ?\r\n                    <FlatList\r\n                        nestedScrollEnabled\r\n                        contentContainerStyle={{ width: Dimensions.get('window').width, alignItems: 'center' }}\r\n                        ListEmptyComponent={\r\n                            <Text>This lesson doesn't have any content, please click the add button</Text>\r\n                        }\r\n\r\n\r\n                        numColumns={2}\r\n\r\n                        data={myData}\r\n                        keyExtractor={(item) => item.unit_id}\r\n                        //  contentContainerStyle={{flexGrow:2}}\r\n                        renderItem={({ item, index }) =>\r\n\r\n                            <UnitEditCard\r\n                                unitName={item.unit_name}\r\n                                unitID={item.unit_id}\r\n                                onPress={onUnitPress}\r\n                                onDelete={deleteUnit}\r\n\r\n                            ></UnitEditCard>\r\n\r\n\r\n\r\n                        }\r\n\r\n                    /> : <Text>No content</Text>}\r\n\r\n                <View>\r\n\r\n                    <View style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n\r\n\r\n\r\n                    </View>\r\n\r\n\r\n\r\n\r\n                    {/* Displays the addButton */}\r\n\r\n\r\n                </View>\r\n\r\n\r\n\r\n\r\n                {/* </View> */}\r\n\r\n\r\n\r\n\r\n\r\n                {/* </ScrollView> */}\r\n            </View>\r\n\r\n\r\n            <TouchableOpacity style={styles.addButton} onPress={() => { addUnit() }}>\r\n                <Text style={styles.addTextButton}>+</Text>\r\n            </TouchableOpacity>\r\n\r\n\r\n\r\n        </View>\r\n        /* // </View> */\r\n\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    buttonContainer: {\r\n        marginVertical: 10,\r\n        marginHorizontal: 10,\r\n      },\r\n    saveButton: {\r\n        backgroundColor: '#3385ff',\r\n        height: 40,\r\n        padding: 5,\r\n        borderWidth: 2,\r\n        borderColor: 'white',\r\n        borderRadius: 4,\r\n        marginLeft: 15\r\n    },\r\n    cardContainer: {\r\n        padding: 10\r\n\r\n    },\r\n\r\n    bottomContainer: {\r\n        justifyContent: 'flex-end',\r\n        //margin:1,\r\n\r\n    },\r\n    // item: {\r\n    //     backgroundColor: '#f9c2ff',\r\n    //     padding: 20,\r\n    //     marginVertical: 8,\r\n    //     marginHorizontal: 16,\r\n    // },\r\n    sectionText: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        flexDirection: 'row',\r\n        textAlign: 'center'\r\n    },\r\n    deleteButton: {\r\n\r\n    },\r\n\r\n    addButton: {\r\n        alignSelf: 'flex-end',\r\n        textAlign: 'center',\r\n        flex: 1,\r\n\r\n        backgroundColor: '#4970FA',\r\n        shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n        shadowOpacity: 2,\r\n        shadowOffset: { width: 1, height: 2 },\r\n        alignSelf: 'center',\r\n\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: 80,\r\n        height: 80,\r\n        paddingBottom: 5,\r\n\r\n\r\n        position: \"absolute\",\r\n\r\n        top: Dimensions.get('window').height - 300,\r\n        right: 20,\r\n        // bottom:40,\r\n        borderRadius: 50,\r\n\r\n        //height: 60,\r\n\r\n\r\n\r\n    },\r\n\r\n    addTextButton: {\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n        fontSize: 40,\r\n\r\n    },\r\n    homeIcon: {\r\n        alignSelf: 'flex-start',\r\n        marginLeft: 10\r\n    },\r\n    settingIcon: {\r\n        alignSelf: 'center'\r\n    },\r\n    profileIcon: {\r\n        alignSelf: 'flex-end',\r\n        marginRight: 10\r\n    },\r\n    footer: {\r\n        backgroundColor: '#3385ff',\r\n        justifyContent: 'flex-end',\r\n        width: 300,\r\n        flexDirection: 'row',\r\n        paddingBottom: 10,\r\n        paddingTop: 10,\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    }\r\n})","import { Dimensions } from \"react-native\";\r\nconst {width, height} = Dimensions.get('window');\r\n\r\nexport const COLORS = {\r\n    primary: \"#252c4a\",\r\n    secondary: '#1E90FF',\r\n    accent: '#3498db',\r\n    \r\n    success: '#00C851',\r\n    error: '#ff4444',\r\n\r\n    black: \"#171717\",\r\n    white: \"#FFFFFF\",\r\n    background: \"#252C4A\"\r\n}\r\n\r\n\r\nexport const SIZES = {\r\n    base: 10,\r\n    width,\r\n    height\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    SafeAreaView,\r\n    StatusBar,\r\n    StyleSheet,\r\n    Image,\r\n    TouchableOpacity,\r\n    Modal,\r\n    Animated,\r\n    TextInput,\r\n    ScrollView,\r\n} from \"react-native\";\r\nimport { COLORS, SIZES } from \"../constants/themes\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\r\nimport { Button } from \"react-native-elements\";\r\nimport FontAwesome5Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport { color } from \"react-native-elements/dist/helpers\";\r\nimport { NavigationContainer, useIsFocused } from \"@react-navigation/native\";\r\nimport { RadioButton } from 'react-native-paper';\r\nimport APIConnection from \"../utility/APIConnection\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function QuizEditComponent({navigation, unitID}) {\r\n\r\n\r\n    const invalidChars = [\"'\", '\"']\r\n\r\n    const initialdata = [\r\n        {\r\n            changeType: \"Created\",\r\n            quizdata_id: 1,\r\n            quizdata_question: \"Default Value\",\r\n            quizdata_answers: [\"Default Value\", \"Default Value\", \"Default Value\", \"Default Value\"],\r\n            correct_option: 0,\r\n        }\r\n    ];\r\n\r\n    const isFocused = useIsFocused();\r\n\r\n    const [quizData, setQuizData] = useState([\r\n        {\r\n            changeType: \"Created\",\r\n            quizdata_id: 1,\r\n            quizdata_question: \"Default Value\",\r\n            quizdata_answers: [\"Default Value\", \"Default Value\", \"Default Value\", \"Default Value\"],\r\n            correct_option: 0,\r\n        }\r\n    ]);    \r\n    \r\n\r\n    //used for posting and editting quiz\r\n    const [quizID, setQuizID] = useState();\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [deleteList, setDeleteList] = useState([]);\r\n\r\n    const [correctAnswer, setCorrectAnswer] = useState(0);\r\n    const [dummyState, setDummyState] = useState(true);\r\n\r\n\r\n\r\n//----------------------------------------------------------------------------------\r\n    const [iQuizData, setIQuizData] = useState();\r\n\r\n\r\n    const apiConnection = new APIConnection();\r\n    useEffect(() => {\r\n\r\n    \r\n        async function fetchMyAPI() {\r\n            let response = await apiConnection.getUnitQuizContent(unitID);\r\n            if(response.status == 400)\r\n            {\r\n                //empty unit that needs a new quiz\r\n                await apiConnection.createNewQuizForUnit(unitID);\r\n                response = await apiConnection.getUnitQuizContent(unitID);\r\n\r\n            }\r\n            response = await response.json();\r\n\r\n            setQuizID(response[0].quiz_id);\r\n\r\n            let quizDataResponse = await apiConnection.getQuizData(response[0].quiz_id);\r\n\r\n            if(quizDataResponse.status == 400)\r\n            {\r\n                // do nothing\r\n            }\r\n            else {\r\n                quizDataResponse = await quizDataResponse.json();\r\n\r\n                setIQuizData(quizDataResponse);\r\n                processJSON(quizDataResponse);\r\n                console.log(\"Quiz data fetched is: \" + iQuizData)\r\n            }\r\n\r\n          }\r\n\r\n          if(isFocused) {\r\n            fetchMyAPI();\r\n\r\n\r\n        }\r\n\r\n    }, [isFocused]);\r\n\r\n\r\n\r\n    function processJSON(quizDataResponse)\r\n    {\r\n        let json = quizDataResponse;\r\n        for(let i = 0; i < quizDataResponse.length; i++)\r\n        {\r\n            let answers = quizDataResponse[i].quizdata_answers;\r\n            answers = answers.replace(/[']+/g, '\"');\r\n            let answersJson = JSON.parse(answers);\r\n            json[i].quizdata_answers = answersJson.choices;\r\n            json[i].correct_option = answersJson.answer;\r\n\r\n            console.log(\"Quiz data answers\" + answersJson.type + answersJson[0]);\r\n            console.log(\"Quiz data answers array\" + [\"hi\", \"There\", \"Cutie\"]);\r\n\r\n\r\n\r\n        }\r\n\r\n        setQuizData(json);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    function updateQuizAnswerToParent(newAnswer, index) {\r\n        let newQuizData = quizData;\r\n        newQuizData[currentIndex].quizdata_answers[index] = newAnswer;\r\n        if (newQuizData[currentIndex].changeType != \"Created\") {\r\n            newQuizData[currentIndex].changeType = \"Edited\";\r\n        }\r\n        setQuizData(newQuizData);\r\n    }\r\n\r\n    function updateQuizQuestionToParent(newQuestion) {\r\n        let newQuizData = quizData;\r\n        newQuizData[currentIndex].quizdata_question = newQuestion;\r\n        if (newQuizData[currentIndex].changeType != \"Created\") {\r\n            newQuizData[currentIndex].changeType = \"Edited\";\r\n        }\r\n        setQuizData(newQuizData);\r\n    }\r\n\r\n    function updateCorrectAnswer(index) {\r\n        setCorrectAnswer(index);\r\n        let newQuizData = quizData;\r\n        if (newQuizData[currentIndex].changeType != \"Created\") {\r\n            newQuizData[currentIndex].changeType = \"Edited\";\r\n        }\r\n         newQuizData[currentIndex].correct_option = index;\r\n        setQuizData(newQuizData);\r\n\r\n\r\n    }\r\n\r\n    function onLeftArrowPressed() {\r\n        if (currentIndex > 0) { \r\n            setCorrectAnswer(quizData[currentIndex - 1].correct_option);\r\n            setCurrentIndex(currentIndex - 1);\r\n         }\r\n    }\r\n\r\n    function onRightArrowPressed() {\r\n        if (currentIndex < quizData.length - 1) { \r\n            setCorrectAnswer(quizData[currentIndex + 1].correct_option);\r\n\r\n            setCurrentIndex(currentIndex + 1);\r\n        }\r\n    }\r\n\r\n\r\n    function renderTopQuizHeader() {\r\n        return (\r\n            <View style={{\r\n                marginVertical: 40,\r\n\r\n            }}>\r\n                <View\r\n                    style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-around\"\r\n                    }}>\r\n                    <Button\r\n                        icon={{\r\n                            name: \"arrow-left\",\r\n                            type: 'font-awesome',\r\n                            size: 15,\r\n                            color: 'white'\r\n                        }}\r\n                        buttonStyle={styles.arrowButton}\r\n                        containerStyle={styles.arrowButtonContainer}\r\n                        onPress={onLeftArrowPressed}\r\n\r\n                    >\r\n\r\n                    </Button>\r\n                    <Text>\r\n                    {(currentIndex + 1) + \" / \" + quizData.length}\r\n\r\n                    </Text>\r\n\r\n\r\n\r\n                    <Button\r\n                        icon={{\r\n                            name: \"arrow-right\",\r\n                            type: 'font-awesome',\r\n                            size: 15,\r\n                            color: 'white'\r\n                        }}\r\n                        buttonStyle={styles.arrowButton}\r\n                        containerStyle={styles.arrowButtonContainer}\r\n                        onPress={onRightArrowPressed}\r\n\r\n                    >\r\n\r\n\r\n                    </Button>\r\n\r\n\r\n\r\n                </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n    function renderAnswersInput() {\r\n        return (\r\n            <View style={{flex: 1}}>\r\n                {\r\n\r\n                    quizData[currentIndex].quizdata_answers.map((answer, index) => (\r\n\r\n                        <View\r\n                            key={index}\r\n                            style={{\r\n                                flexDirection: \"row\",\r\n\r\n                                justifyContent: \"flex-start\"\r\n                            }}>\r\n\r\n                            <View\r\n                            style={{\r\n                                width:50\r\n                            }}></View>\r\n\r\n                            <TextInput\r\n                                key={answer}\r\n                                style={styles.answerInput}\r\n                                onChangeText={(newAnswer) => updateQuizAnswerToParent(newAnswer, index)}\r\n                                defaultValue={answer}>\r\n\r\n                            </TextInput>\r\n                            <RadioButton\r\n                                key={index}\r\n                                value={index}\r\n                                color={\"#000dff\"}\r\n                                uncheckedColor={\"#000000\"}\r\n                                status={correctAnswer === index ? 'checked' : 'unchecked'}\r\n                                onPress={() => updateCorrectAnswer(index)}\r\n\r\n                            >\r\n\r\n                            </RadioButton>\r\n\r\n                        </View>\r\n\r\n\r\n                    ))}\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    async function onSave() {\r\n\r\n        let valid = true;\r\n        for(let i = 0; i < quizData.length; i++)\r\n        {\r\n            //combining all string in quiz to do test at once\r\n            let allStringInQuestion = quizData[i].quizdata_question;\r\n\r\n            for(let i2 = 0; i2 < quizData[i].quizdata_answers.length; i2++)\r\n            {\r\n                allStringInQuestion += quizData[i].quizdata_answers[i2];\r\n            }\r\n\r\n\r\n            for(let j = 0; j < invalidChars.length; j++)\r\n            {\r\n                if(allStringInQuestion.includes(invalidChars[j]))\r\n                {\r\n                    alert(\"Your quiz data contain invalid characters such as ' or '', please remove them and try again\");\r\n                    valid = false;\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if(valid){\r\n\r\n        \r\n        await Promise.all(\r\n            quizData.map(async (question) => {\r\n\r\n                if (question.changeType == \"Edited\") {\r\n                    question.changeType == \"None\";\r\n                    console.log(\"This question has been changed: \" + question.quizdata_question);\r\n                    let quizdata_answersTemporary = {\r\n                        answer: 0,\r\n                        choices: [\"test\", \"test\", \"test\", \"test\"]\r\n                    }\r\n                    quizdata_answersTemporary.answer = question.correct_option;\r\n                    quizdata_answersTemporary.choices = question.quizdata_answers;\r\n                    let string1 = JSON.stringify(quizdata_answersTemporary);\r\n                    string1 = string1.replace(/[\"]+/g, \"'\");\r\n                    const response = await apiConnection.editQuizData(quizID,question.quizdata_id, question.quizdata_question, string1);\r\n                }\r\n                else if (question.changeType == \"Created\") {\r\n                    question.changeType == \"None\";\r\n\r\n                    console.log(\"This question has been created: \" + question.quizdata_question)\r\n                    let quizdata_answersTemporary = {\r\n                        answer: 0,\r\n                        choices: [\"test\", \"test\", \"test\", \"test\"]\r\n                    }\r\n                    quizdata_answersTemporary.answer = question.correct_option;\r\n                    quizdata_answersTemporary.choices = question.quizdata_answers;\r\n                    let string1 = JSON.stringify(quizdata_answersTemporary);\r\n                    string1 = string1.replace(/[\"]+/g, \"'\");\r\n\r\n                    const response = await apiConnection.createQuizData(quizID, question.quizdata_question, string1);\r\n                }\r\n                \r\n\r\n\r\n            })\r\n        )\r\n        await Promise.all(\r\n            deleteList.map(async (deletedQuestionID) => {\r\n                console.log(\"This question has been deleted: \" + deletedQuestionID)\r\n\r\n                const response = await apiConnection.deleteQuizData(quizID, deletedQuestionID);\r\n\r\n            })\r\n        )\r\n        setDeleteList([]);\r\n\r\n        navigation.goBack();\r\n    }\r\n\r\n\r\n\r\n    }\r\n\r\n    function onDelete() {\r\n\r\n        //If there are still lesson to be deleted\r\n        if (quizData.length > 1) {\r\n            if (quizData[currentIndex].changeType != \"Created\") {\r\n                deleteList.push(quizData[currentIndex].quizdata_id);\r\n                setDeleteList(deleteList);\r\n            }\r\n            quizData.splice(currentIndex, 1);\r\n            setQuizData(quizData);\r\n            setCurrentIndex(0);\r\n            setDummyState(!dummyState);\r\n\r\n\r\n        }\r\n        else{\r\n            alert(\"Quiz must have at least one question\");\r\n        }\r\n    }\r\n\r\n\r\n    function onCreate() {\r\n\r\n        let newQuizData = quizData;\r\n        let newQuestion = {\r\n            changeType: \"Created\",\r\n            quizdata_question: \"New Question?\",\r\n            quizdata_answers: [\r\n                \"Option 1\",\r\n                \"Option 2\",\r\n                \"Option 3\",\r\n                \"Option 4\",\r\n            ],\r\n            correct_option: 0,\r\n        }\r\n\r\n        newQuizData.push(newQuestion);\r\n        setQuizData(newQuizData);\r\n        setCurrentIndex(currentIndex);\r\n        setDummyState(!dummyState);\r\n\r\n    }\r\n\r\n\r\n\r\n    function renderBottomButtons() {\r\n        return (\r\n            <View>\r\n            <View style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-around\"\r\n            }}>\r\n                <Button\r\n                    title={\"Add\"}\r\n                    icon={{\r\n                        name: \"plus\",\r\n                        type: 'font-awesome',\r\n                        size: 15,\r\n                        color: 'white'\r\n                    }}\r\n                    buttonStyle={[styles.arrowButton, {\r\n                        backgroundColor: \"#1f9132\",\r\n                       \r\n                    }]}\r\n                    containerStyle={[styles.arrowButtonContainer, {\r\n                        width: 100,\r\n                        marginHorizontal: 10\r\n                    }]}\r\n                    onPress={onCreate}\r\n\r\n                >\r\n\r\n                </Button>\r\n\r\n\r\n                <Button\r\n                    title={\"Delete\"}\r\n\r\n                    icon={{\r\n                        name: \"trash\",\r\n                        type: 'font-awesome',\r\n                        size: 15,\r\n                        color: 'white'\r\n                    }}\r\n                    buttonStyle={[styles.arrowButton, {\r\n                        backgroundColor: \"\trgb(255, 0, 0)\"\r\n                    }]}\r\n                    containerStyle={[styles.arrowButtonContainer, {\r\n                        width: 100,\r\n                        marginHorizontal: 10\r\n                    }]}\r\n                    onPress={onDelete}\r\n\r\n                >\r\n\r\n                </Button>\r\n\r\n\r\n                <Button\r\n                    title={\"Save\"}\r\n\r\n                    icon={{\r\n                        name: \"save\",\r\n                        type: 'font-awesome',\r\n                        size: 15,\r\n                        color: 'white'\r\n                    }}\r\n                    buttonStyle={[styles.arrowButton, {\r\n                        backgroundColor: \"\trgb(0, 191, 255)\"\r\n                    }]}\r\n                    containerStyle={[styles.arrowButtonContainer, {\r\n                        width: 100,\r\n                        marginHorizontal: 10\r\n                    }]}\r\n                    onPress={onSave}\r\n\r\n                >\r\n\r\n                </Button>\r\n\r\n            </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View style={{\r\n            flexDirection:\"column\",\r\n            justifyContent:\"space-around\"\r\n            \r\n        }}>\r\n\r\n        <ScrollView style={{ flex: 1, backgroundColor: \"rgb(179, 236, 255)\" }}>\r\n            {dummyState}\r\n            <StatusBar barStyle=\"light-content\" backgroundColor={COLORS.primary} />\r\n\r\n\r\n            {renderTopQuizHeader()}\r\n\r\n            <TextInput\r\n                key={quizData[currentIndex].quizdata_question}\r\n                style={styles.questionInput}\r\n                defaultValue={quizData[currentIndex].quizdata_question}\r\n                onChangeText={(newQuestion) => updateQuizQuestionToParent(newQuestion)}\r\n            >\r\n            </TextInput>\r\n            {renderAnswersInput()}\r\n            {renderBottomButtons()}\r\n\r\n\r\n        </ScrollView>\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"#FFF\",\r\n        flex: 1,\r\n    },\r\n\r\n    userInfo: {\r\n        paddingHorizontal: 30,\r\n        marginBottom: 25,\r\n    },\r\n\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: \"bold\",\r\n    },\r\n\r\n    caption: {\r\n        fontSize: 14,\r\n        lineHeight: 14,\r\n        fontWeight: \"500\",\r\n    },\r\n\r\n    avatarShadow: {\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 5,\r\n        },\r\n        shadowOpacity: 0.36,\r\n        shadowRadius: 6.68,\r\n        elevation: 11\r\n    },\r\n\r\n\r\n    arrowButton: {\r\n        backgroundColor: 'rgba(90, 154, 230, 1)',\r\n        borderColor: 'transparent',\r\n        borderWidth: 0,\r\n        borderRadius: 30,\r\n    },\r\n    arrowButtonContainer: {\r\n        width: 100,\r\n        marginHorizontal: 50,\r\n        marginVertical: 10,\r\n    },\r\n\r\n\r\n\r\n    questionInput: {\r\n        height: 65,\r\n        marginHorizontal: 10,\r\n        marginVertical: 10,\r\n        marginBottom: 30,\r\n        borderWidth: 3,\r\n        borderRadius: 10,\r\n\r\n        borderColor: \"rgb(0, 153, 255)\",\r\n        backgroundColor: COLORS.white,\r\n    },\r\n\r\n    answerInput: {\r\n        flex: 1,\r\n        height: 50,\r\n        marginHorizontal: 5,\r\n        marginVertical: 5,\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        borderColor: \"rgb(0, 153, 255)\",\r\n        backgroundColor: COLORS.white,\r\n    },\r\n\r\n    bioBox: {\r\n        marginTop: 10,\r\n        padding: 10,\r\n        borderRadius: 10,\r\n        borderColor: '#000',\r\n        borderWidth: 0.2,\r\n    },\r\n\r\n    bioText: {\r\n        marginTop: 10,\r\n    },\r\n\r\n    list: {\r\n        textAlign: 'center',\r\n        marginTop: 10,\r\n        alignItems: 'center',\r\n        fontWeight: \"bold\",\r\n        borderColor: '#000',\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        padding: 15,\r\n    },\r\n\r\n    bottom: {\r\n        justifyContent: 'center',\r\n        alignContent: 'center',\r\n        flex: 1,\r\n        marginTop: 130\r\n    },\r\n\r\n    buttonContainer: {\r\n        position: 'absolute',\r\n        alignItems: \"center\",\r\n        justifyContent: 'flex-end',\r\n        right: 30,\r\n        bottom: 30,\r\n        flex: 1\r\n    }\r\n\r\n});\r\n","import React, { Children, useState, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View, Text, Alert, StyleSheet, Button, TextInput, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList, ScrollView } from \"react-native\";\r\nimport CourseGridCard from '../../../component/CourseGridCard';\r\nimport { AuthContext } from '../../../store/AuthContext';\r\nimport APIConnection from '../../../utility/APIConnection';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { useTransition, animated } from 'react-spring/native'\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport QuizEditComponent from '../../../component/QuizEditComponent';\r\n\r\n\r\nconst AnimatedView = animated(View);\r\n\r\n\r\n\r\nexport default function InstructorQuizEdit({ navigation, route, quizJSONData, setQuizJSONData }) {\r\n    const {unitID, unitName} = route.params;\r\n\r\nreturn(\r\n    <ScrollView >\r\n        <QuizEditComponent\r\n        unitID={unitID}\r\n        navigation={navigation}\r\n        >\r\n\r\n        </QuizEditComponent>\r\n\r\n    </ScrollView>\r\n)\r\n\r\n}","import React, { Children, useState, useContext, useEffect, useLayoutEffect } from 'react';\r\nimport { View, Text, Alert, StyleSheet, Button, TextInput, TouchableWithoutFeedback, Keyboard, Dimensions, KeyboardAvoidingView, Platform, TouchableOpacity, FlatList } from \"react-native\";\r\nimport CourseGridCard from '../../../component/CourseGridCard';\r\nimport { AuthContext } from '../../../store/AuthContext';\r\nimport APIConnection from '../../../utility/APIConnection';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { useTransition, animated } from 'react-spring/native'\r\nimport InstructorQuizEdit from './InstructorEditQuiz';\r\nimport CreateContent from './CreateContentScreen';\r\n\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\n\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\n\r\nexport default function TabInstructorCourseEdit({ navigation, route }) {\r\n\r\n\r\n    const {unitID} = route.params;\r\n    //const unitID = 21;\r\n    //const unitName = \"Unit name\";\r\n\r\n\r\n\r\n    return (\r\n        <Tab.Navigator>\r\n            <Tab.Screen name=\"Edit Content\"  component={CreateContent} initialParams={{ unitID }} />\r\n            <Tab.Screen name=\"Edit Quiz\" component={InstructorQuizEdit} initialParams={{ unitID }} />\r\n        </Tab.Navigator>\r\n    );\r\n\r\n}","import React from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport InstructorDashboard from './InstructorDashboard'\r\nimport EditCourseAndModuleTabScreen from './EditCourseAndModuleTabScreen'\r\nimport CreateCourseAndModuleTabScreen from './CreateCourseAndModuleTabScreen'\r\nimport CreateCourse from './CreateCourse'\r\nimport InstructorCourseView from './InstructorCourseScreen'\r\n\r\nimport CreateContent from './CreateContentScreen'\r\n\r\n\r\n\r\nimport LessonCreation from './LessonCreationScreen'\r\nimport TabInstructorCourseEdit from './TabsInstructorCourseEdit'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function DashBoardStackNavigatorInstructor(navigation) {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: true,\r\n    }}>\r\n\r\n       \r\n\r\n      <Stack.Screen name=\"Instructor Dashboard\" component={InstructorDashboard} options={{ headerShown: false }}/>\r\n      <Stack.Screen name=\"Instructor CourseView\" component={InstructorCourseView} options={{ headerShown: true, title:'Course Material'}}/>\r\n      <Stack.Screen name=\"Create Content\" component={CreateContent} options={{ headerShown: true, headerTitleAlign: 'center' }}/>\r\n      <Stack.Screen name=\"LessonCreation\" component={LessonCreation} options={{ headerShown: true,headerTitleAlign: 'center', title:'Lesson Creation'}} />\r\n      <Stack.Screen name=\"EditCourseAndModule\" component={EditCourseAndModuleTabScreen} options={{ headerShown: true,headerTitleAlign: 'center', title:'Course Edit' }}/>\r\n      <Stack.Screen name=\"Create Course\" component={CreateCourse} options={{ headerShown: true, title: 'Create Course',headerTitleAlign: 'center' }}/>\r\n      <Stack.Screen name=\"Content Edit\" component={TabInstructorCourseEdit} options={{ headerShown: true }}/>\r\n\r\n\r\n\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import { Pressable, StyleSheet } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nfunction IconButton({ icon, color, size, onPress }) {\r\n  return (\r\n    <Pressable\r\n      style={({ pressed }) => [styles.button, pressed && styles.pressed]}\r\n      onPress={onPress}\r\n    >\r\n      <Ionicons name={icon} color={color} size={size} />\r\n    </Pressable>\r\n  );\r\n}\r\n\r\nexport default IconButton;\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    margin: 8,\r\n    borderRadius: 20,\r\n  },\r\n  pressed: {\r\n    opacity: 0.7,\r\n  },\r\n});\r\n","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {TextInput, Avatar, Button, Dialog, Portal, Provider} from 'react-native-paper';\r\n\r\nimport APIConnection from \"../../utility/APIConnection\";\r\n\r\nexport default function EditProfile({navigation}) {\r\n    const isFocused = useIsFocused();\r\n    const [data, setData] = useState([]);\r\n    const apiConnection = new APIConnection();\r\n\r\n\r\n    const [visible, setVisible] = React.useState(false);\r\n    const showDialog = () => setVisible(true);\r\n    const hideDialog = () => setVisible(false);\r\n\r\n    useLayoutEffect(() => {\r\n        if (isFocused) {\r\n            apiConnection.getUserForProfilePage().then((json) => {\r\n                setData(json);\r\n            });\r\n        }\r\n    }, [isFocused]);\r\n    \r\n\r\n    const [newName, setNewName] = useState('');\r\n    const [newBio, setNewBio] = useState('');\r\n\r\n\r\n    //check to see if there are any changes and pass it on to edit the account \r\n    async function onSubmit(){\r\n        if(newName.length === 0 && newBio.length != 0){\r\n            await apiConnection.editUserProfile(data.user_name, data.user_type, newBio, data.user_pp).then(\r\n                navigation.goBack());\r\n            }\r\n        else if(newBio.length === 0 && newName.length != 0){\r\n            await apiConnection.editUserProfile(newName, data.user_type, data.user_bio, data.user_pp).then(\r\n                navigation.goBack());\r\n            }\r\n        else if(newBio.length != 0 && newName.length != 0){\r\n            await apiConnection.editUserProfile(newName, data.user_type, newBio, data.user_pp).then(\r\n                navigation.goBack());\r\n            }\r\n        else if(newBio.length === 0 && newName.length === 0){\r\n            alert(\"Nothing has changed...\");\r\n        }    \r\n    };\r\n\r\n    return (\r\n    \r\n            <View style={styles.container}>\r\n                {/*Avatar Icon change\r\n                <View style={{alignItems: 'center', marginTop: 15}}>\r\n                    <Avatar.Image \r\n                        size={80} \r\n                        source={data.user_pp || require('./icons/defaultAvatar.png')} \r\n                        style={{backgroundColor: '#fff'}}\r\n                    />\r\n                    \r\n\r\n                    \r\n                    <Button \r\n                        icon=\"account-circle-outline\" \r\n                        mode=\"contained\" \r\n                        style={styles.avatarButton}\r\n                        onPress={showDialog}\r\n                    >Change Avatar</Button>\r\n\r\n\r\n                    \r\n                </View>\r\n    */}\r\n                <View style={styles.edit}>\r\n                    <TextInput\r\n                        setData={data.user_name}\r\n                        style={styles.textInput}\r\n                        label={'Username'}\r\n                        mode={'outlined'}\r\n                        value={data.user_name}\r\n                        outlineColor={'#000'}\r\n                        activeOutlineColor={'#4970FA'}\r\n                        selectionColor={\"#000\"}\r\n                        left={<TextInput.Icon name='account'/>}\r\n                        onChangeText={newText => setNewName(newText)}\r\n                    />\r\n                </View>\r\n\r\n\r\n                <View style={styles.edit}>\r\n                    <TextInput\r\n                        autoCorrect={false}\r\n                        multiline={true}\r\n                        label={'About Me'}\r\n                        mode={'outlined'}\r\n                        value={data.user_bio || \"\"}\r\n                        outlineColor={'#000'}\r\n                        activeOutlineColor={'#4970FA'}\r\n                        onChangeText={newText => setNewBio(newText)}\r\n                        editable={true}\r\n                        style={[styles.textInput, {\r\n                            height: 150,\r\n                        }]}\r\n                    />\r\n                </View>\r\n                \r\n                <TouchableOpacity style={styles.submitButtom} onPress={() => onSubmit()}>\r\n                    <Text style={styles.submitText}>Save</Text>\r\n                </TouchableOpacity>\r\n\r\n                <Provider>            \r\n                    <Portal>\r\n                    <Dialog \r\n                        visible={visible} \r\n                        onDismiss={hideDialog}\r\n                        style={{\r\n                            borderRadius: 25,\r\n                            backgroundColor: '#fff',\r\n                            color:'#000'\r\n                        }}\r\n                    >\r\n                            <Dialog.Title style={{color:'#000'}}>Change Avatar</Dialog.Title>\r\n                            <Dialog.Content>\r\n                                <Button mode={\"contained\"} style={styles.dialogButton}>Choose from Library</Button>\r\n                                <Button mode={\"contained\"} style={styles.dialogButton}>Open Camera</Button>\r\n                            </Dialog.Content>\r\n                            <Dialog.Actions>\r\n                            <Button \r\n                                mode={\"contained\"} \r\n                                onPress={hideDialog}>\r\n                            Cancel</Button>\r\n                            </Dialog.Actions>\r\n                        </Dialog>\r\n                    </Portal>\r\n                </Provider>\r\n\r\n            </View>\r\n        \r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#E8EAED',\r\n        flex: 1\r\n    },\r\n\r\n    profileIcon: {\r\n        height: 100,\r\n        width: 100,\r\n        borderRadius: 15,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    edit: {\r\n        flexDirection: 'row',\r\n        marginTop: 80,\r\n        marginBottom: 10,\r\n        paddingBottom: 5,\r\n        paddingLeft: 10,\r\n        paddingRight:10,\r\n        padding: 20,\r\n        \r\n    },\r\n\r\n    textInput: {\r\n        flex: 1,\r\n        backgroundColor:'#fff',\r\n       \r\n        \r\n    },\r\n\r\n    submitButtom: {\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        backgroundColor: '#4970FA',\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n        margin: 20\r\n    },\r\n\r\n    submitText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        color: 'white'\r\n    },\r\n\r\n    avatarButton: {\r\n        marginTop: 15,\r\n        marginLeft: 45,\r\n        marginRight:45,\r\n        backgroundColor: \"#4970FA\",\r\n        color:'white'\r\n    },\r\n    dialogButton: {\r\n        marginTop: 10\r\n    }\r\n    \r\n});","import { useIsFocused,useFocusEffect,  } from \"@react-navigation/native\";\r\nimport { is } from \"@react-spring/shared\";\r\n\r\nimport React, { useState, useLayoutEffect,useEffect,useRef,useCallback } from \"react\";\r\nimport {\r\n  View,\r\n  SafeAreaView,\r\n  Text,\r\n  StyleSheet,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport { Avatar } from \"react-native-elements\";\r\nimport { FAB } from 'react-native-paper'; \r\nimport Icon from 'react-native-vector-icons/AntDesign';\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function InstructorProfile({navigation}) {\r\n\r\n  const isFocused = useIsFocused();\r\n  const [data, setData] = useState([]);\r\n  const [classData, setClassData] = useState([]);\r\n  const apiConnection = new APIConnection();\r\n\r\n\r\n  const mounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n      mounted.current = true;\r\n      \r\n\r\n\r\n      return () => {\r\n          mounted.current = false;\r\n          \r\n      };\r\n  }, []);\r\n\r\n  /*useLayoutEffect(() => {\r\n    //your code here\r\n    if (isFocused && mounted.current) {\r\n      apiConnection.getUserForProfilePage().then((json) => {\r\n        setData(json);\r\n      });\r\n      apiConnection.getClasses().then((json) => {\r\n        setClassData(json);\r\n      });\r\n    }\r\n\r\n  }, [isFocused]);*/\r\n\r\n//navigation.navigate('My Profile')\r\n  const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n\r\n   if (isFocused) {  \r\n        apiConnection.getUserForProfilePage().then((json) => {\r\n          setData(json);\r\n          \r\n        });\r\n        apiConnection.getClasses().then((json) => {\r\n          setClassData(json);\r\n        \r\n          \r\n        });\r\n      }\r\n\r\n      \r\n    }, [isFocused])\r\n\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.userInfo}>\r\n        <View style={{ flexDirection: \"row\", marginTop: 15 }}>\r\n          <Avatar\r\n            rounded\r\n            size={100}\r\n            source={ require('../../UserProfile/icons/defaultAvatar.png')}\r\n          />      \r\n          <View style={{ marginLeft: 20 }}>\r\n            <Text\r\n              style={[\r\n                styles.title,\r\n                {\r\n                  marginTop: 15,\r\n                  marginBottom: 5\r\n                },\r\n              ]}\r\n            >\r\n              {data.user_name || 'user_name'}\r\n            </Text>\r\n            <View style={{flexDirection:\"row\"}}>\r\n              <Icon name=\"mail\" size={20} style={{paddingRight:5}}/>\r\n              <Text style={styles.caption}>{data.user_email || 'user_email'}</Text>\r\n            </View>\r\n              <View style={{flexDirection:\"row\"}}>\r\n                <Icon name=\"user\" size={20} style={{paddingRight:5}}/>\r\n              <Text\r\n                style={[styles.caption,{\r\n                    marginTop: 5,\r\n                  },\r\n                ]}\r\n              >\r\n              {'Instructor'}\r\n              </Text>\r\n              </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.userAbout}>\r\n          <Text style={styles.title}>About</Text>\r\n            <Text style={[styles.bioBox]}>\r\n              <Text style={styles.bioText}>\r\n                {data.user_bio || 'No information at this time.'}\r\n              </Text>\r\n            </Text>\r\n        </View>\r\n        \r\n        <Text style={[styles.title, {textAlign:'center'}]}>Classes</Text>\r\n      </View>\r\n\r\n        <FlatList\r\n              keyExtractor={(item) => item.class_name}\r\n\r\n                data={classData} \r\n                renderItem={({item}) => (\r\n                  <Text style={[styles.list]}>{item.class_name}</Text>\r\n                )}\r\n                numColumns={2}\r\n        />\r\n\r\n      \r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"file-document-edit-outline\"\r\n        onPress={() => navigation.navigate('Edit Profile', {screen: 'InstructorEditProfile'})}\r\n      />\r\n                \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#E8EAED',\r\n    flex: 1,\r\n  },\r\n\r\n  userInfo: {\r\n    paddingHorizontal: 30,\r\n    marginBottom: 25,\r\n    marginTop: 50\r\n  },\r\n\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  caption: {\r\n    fontSize: 14,\r\n    lineHeight: 14,\r\n    fontWeight: \"500\",\r\n  },\r\n\r\n  avatarShadow: {\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 5,\r\n    },\r\n    shadowOpacity: 0.36,\r\n    shadowRadius: 6.68,\r\n    elevation: 11\r\n  },\r\n\r\n\r\n  userAbout: {\r\n    marginTop: 15,\r\n  },\r\n\r\n  userClass: {\r\n    marginTop: 15,\r\n    alignSelf:'center',\r\n\r\n  },\r\n\r\n  bioBox: {\r\n    marginTop: 10,\r\n    padding:10,\r\n    borderRadius: 2,\r\n    borderColor: '#000',\r\n    borderWidth: 1,\r\n    backgroundColor:'#fff'\r\n  },\r\n\r\n  bioText: {\r\n    marginTop: 10,\r\n  },\r\n\r\n  list: { \r\n    textAlign:'center',\r\n    marginTop: 10,\r\n    alignItems: 'center',\r\n    fontWeight:\"bold\",\r\n    borderRadius:5,\r\n    padding:15,\r\n    borderWidth:.5,\r\n    backgroundColor: \"white\",\r\n    width:200,\r\n    marginRight:10,\r\n\r\n\r\n  },\r\n\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0, \r\n    bottom: 0,\r\n    backgroundColor:'#4970FA'\r\n  }\r\n\r\n});\r\n","import React, { useContext } from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport { AuthContext } from '../../../store/AuthContext'\r\nimport IconButton from '../../../component/ui/IconButton'\r\nimport EditProfile from '../../UserProfile/EditProfile'\r\nconst Stack = createNativeStackNavigator()\r\nimport InstructorProfile from '../../InstructorScreens/ProfileStackNavigator/InstructorProfile.js'\r\n\r\n\r\nexport default function ProfileStackNavigatorInstructor()  {\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n     <Stack.Screen name=\"My Profile\" component={InstructorProfile} options={{\r\n        headerShown: false,\r\n          headerRight: ({ tintColor }) => (\r\n            <IconButton\r\n              icon=\"exit\"\r\n              color={tintColor}\r\n              size={24}\r\n              onPress={authCtx.logout}\r\n            />\r\n          ),\r\n      }}/>\r\n\r\n        <Stack.Screen name=\"Edit Profile\" component={EditProfile} options={{headerShown:true}}/>\r\n\r\n\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import React, {useContext } from 'react';\r\nimport {SafeAreaView, View, Text, StyleSheet} from \"react-native\";\r\nimport {Button, Divider} from \"react-native-paper\";\r\nimport { AuthContext } from '../../../store/AuthContext'\r\n\r\nexport default function InstructorSetting({navigation}) {\r\n\r\n    const authCtx = useContext(AuthContext);\r\n\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <Text style={styles.title}>Settings</Text>\r\n            <View style={styles.actions}>\r\n\r\n                <Button icon=\"email\" \r\n                mode=\"contained\" \r\n                style={styles.buttons}\r\n                onPress={() => navigation.navigate('Change Email', {screen: 'ChangeEmail'})}\r\n                >Change Email</Button>\r\n\r\n                <Button \r\n                icon=\"lock\" \r\n                mode=\"contained\" \r\n                style={styles.buttons}\r\n                onPress={() => navigation.navigate('Change Password', {screen: 'ChangePassword'})}\r\n                >Change Password</Button>\r\n\r\n                <Divider style={{\r\n                    marginTop: 50,\r\n                    marginLeft: 35,\r\n                    marginRight: 35\r\n                }}/>\r\n\r\n                <Button \r\n                icon=\"door\" \r\n                mode=\"contained\" \r\n                style={[styles.buttons,{\r\n                    backgroundColor: '#cf3a29',\r\n                    marginTop: 60\r\n                }]}\r\n                onPress={authCtx.logout}\r\n                >Log Out</Button>\r\n                \r\n            </View>\r\n        </SafeAreaView>\r\n        \r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n    container: {\r\n        backgroundColor: '#E8EAED',\r\n        flex: 1\r\n     \r\n    },\r\n\r\n    title: { \r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        color: \"#4970FA\",\r\n        marginTop: 15,\r\n        alignSelf:'center'\r\n\r\n    },\r\n\r\n    actions: {\r\n        marginTop: 15\r\n    },\r\n\r\n    buttons: {\r\n        marginTop: 15,\r\n        marginLeft: 35,\r\n        marginRight:35,\r\n        backgroundColor: \"#4970FA\"\r\n    }\r\n\r\n\r\n\r\n    \r\n})","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { TextInput, Button, HelperText } from \"react-native-paper\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport APIConnection from \"../../utility/APIConnection\";\r\nimport Authentication from \"../../utility/Authentication\"\r\n\r\nexport default function ChangePassword({navigation}) {\r\n    const isFocused = useIsFocused();\r\n    const [data, setData] = useState([]);\r\n\r\n    const [currentPW, getCurrentPW] = useState('');\r\n    const [newPW, getNewPW] = useState('');\r\n    const [confirmPW, getConfirmPW] = useState(''); \r\n\r\n    const [isSecureEntry, setSecureEntry] = useState(true);\r\n    const [isSecureEntry2, setSecureEntry2] = useState(true);\r\n    const [isSecureEntry3, setSecureEntry3] = useState(true);\r\n\r\n    const apiConnection = new APIConnection();\r\n    const auth = new Authentication();\r\n\r\n    useLayoutEffect(() => {\r\n        if (isFocused) {\r\n        apiConnection.getUserForProfilePage().then((json) => {\r\n            setData(json);\r\n        });\r\n        }\r\n    }, [isFocused]);\r\n\r\n    const passwordHelper = () => {\r\n        return (newPW.length < 8); \r\n      }\r\n\r\n    function confirmPasswords(){\r\n        if(confirmPW.match(newPW)){\r\n            return true;\r\n        } else{\r\n            return false; \r\n        }\r\n        \r\n    }\r\n\r\n    async function onSubmit() { \r\n        if(currentPW === ''){\r\n            alert('Need current password to verify.');\r\n            return; \r\n        }\r\n        else if(newPW === ''){\r\n            alert('Need new, unique password to make changes.');\r\n            return; \r\n        }\r\n        \r\n\r\n        if(!confirmPasswords()){\r\n            alert('Passwords do not match. Try again.')\r\n            return; \r\n        }\r\n\r\n        const currentEmail = data.user_email; \r\n        //check to see if type password matches with current\r\n        auth.signIn(currentEmail , currentPW).then(() => {\r\n            //if matches, authorize and allow the user to change the email\r\n            AsyncStorage.getItem('@user_info').then((data) => {\r\n                const user = JSON.parse(data);\r\n                if (user && user.token) {\r\n                  apiConnection.changePassword(currentEmail , newPW).then(navigation.goBack());\r\n                }\r\n                else {\r\n                  alert(\"Incorrect Password. Try again.\");\r\n                  AsyncStorage.clear();\r\n                }\r\n              }).catch((reason) => {\r\n                console.log(reason);\r\n              })\r\n        });\r\n\r\n\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n\r\n            <Text style={styles.title}>Change Password</Text>\r\n            <View style={styles.form}>\r\n                <TextInput \r\n                        style={styles.inputField}\r\n                        secureTextEntry={isSecureEntry3}\r\n                        mode={'outlined'}     \r\n                        label={'Current Password'}\r\n                        left={<TextInput.Icon name='lock'/>}\r\n                        right={  \r\n                            <TextInput.Icon name=\"eye\"\r\n                            onPress={() => setSecureEntry3(prev => !prev)}\r\n                            />\r\n                        }\r\n                        onChangeText={newText =>getCurrentPW(newText)}\r\n                    />\r\n\r\n                <TextInput            \r\n                    style={styles.inputField}\r\n                    mode={'outlined'}   \r\n                    secureTextEntry={isSecureEntry}\r\n                    label={'New Password'}\r\n                    left={<TextInput.Icon name='lock'/>}\r\n                    right={  \r\n                        <TextInput.Icon name=\"eye\"\r\n                          onPress={() => setSecureEntry(prev => !prev)}\r\n                        />\r\n                    }\r\n                    onChangeText={newText =>getNewPW(newText)}\r\n                    />\r\n                <HelperText type='info' visible={passwordHelper()} style={{color:'#000', marginLeft:20}}>\r\n                    Password needs to be at least 8 characters long.\r\n                </HelperText>\r\n\r\n\r\n                <TextInput            \r\n                    style={styles.inputField}\r\n                    mode={'outlined'}   \r\n                    secureTextEntry={isSecureEntry2}\r\n                    label={'Confirm New Password'}\r\n                    left={<TextInput.Icon name='lock'/>}\r\n                    right={ <TextInput.Icon \r\n                        name=\"eye\"\r\n                        onPress={() => setSecureEntry2(prev => !prev)}\r\n                      />}\r\n                    onChangeText={newText =>getConfirmPW(newText)}\r\n                    />\r\n            </View>\r\n\r\n            <View style={{marginTop:65}}>\r\n                <Button\r\n                    mode=\"contained\"\r\n                    style={styles.button}\r\n                    onPress={() => onSubmit()}\r\n                >Submit</Button>\r\n\r\n                <Button\r\n                    mode=\"contained\"\r\n                    style={[styles.button, {\r\n                        backgroundColor: '#e03a3a'\r\n                    }]}\r\n                    onPress={() => navigation.goBack()}\r\n                >Cancel</Button>\r\n            </View>\r\n\r\n\r\n        </View>\r\n\r\n    \r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n     \r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#E8EAED\",\r\n    },\r\n\r\n    form: { \r\n        marginTop: 20,\r\n    },\r\n\r\n    title: { \r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        color: \"#4970FA\",\r\n        marginTop: 15,\r\n        marginLeft: 15\r\n    },\r\n    inputField: {\r\n        marginLeft:30,\r\n        marginRight:30,\r\n        backgroundColor:'#fff'\r\n    },\r\n\r\n    button: {\r\n        backgroundColor: '#4970FA',\r\n        marginTop: 15,\r\n        marginLeft: 35,\r\n        marginRight:35,\r\n    },\r\n\r\n    submitText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        color: 'white'\r\n    }\r\n\r\n\r\n});","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { TextInput, Button} from \"react-native-paper\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport APIConnection from \"../../utility/APIConnection\";\r\nimport Authentication from \"../../utility/Authentication\"\r\n\r\nexport default function ChangeEmail({navigation}) {\r\n    const mailFormat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    \r\n    const isFocused = useIsFocused();\r\n    const [data, setData] = useState([]);\r\n    const [currPW, getCurrPW] = useState('');\r\n    const [newEmail, getNewEmail] = useState('');\r\n    const [isSecureEntry, setSecureEntry] = useState(true);    \r\n\r\n    const apiConnection = new APIConnection();\r\n    const auth = new Authentication();\r\n\r\n    useLayoutEffect(() => {\r\n        if (isFocused) {\r\n        apiConnection.getUserForProfilePage().then((json) => {\r\n            setData(json);\r\n        });\r\n        }\r\n    }, [isFocused]);\r\n\r\n\r\n    const checkEmail = (newEmail) => {\r\n        if(newEmail.match(mailFormat)){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function onSubmit(){\r\n\r\n        if(currPW === ''){\r\n            alert('need password to verify');\r\n            return; \r\n        }\r\n\r\n        var emailCheck = checkEmail(newEmail);\r\n        \r\n        if(emailCheck != true){\r\n            alert('Email is not valid. Try again.');\r\n            return; \r\n        }\r\n        \r\n\r\n        //check to see if type password matches with current\r\n        auth.signIn(data.user_email, currPW).then(() => {\r\n            //if matches, authorize and allow the user to change the email\r\n            AsyncStorage.getItem('@user_info').then((data) => {\r\n                const user = JSON.parse(data);\r\n                if (user && user.token) {\r\n                  apiConnection.changeEmail(newEmail, currPW).then(navigation.goBack());\r\n                }\r\n                else {\r\n                  alert(\"Incorrect Password\");\r\n                  AsyncStorage.clear();\r\n                }\r\n              }).catch((reason) => {\r\n                console.log(reason);\r\n              })\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n             <Text style={styles.title}>Change Email</Text>\r\n            <View style={styles.form}>\r\n                <TextInput \r\n                        style={styles.inputField}\r\n                        value={data.user_email} \r\n                        mode={'outlined'}     \r\n                        label={'Email'}\r\n                        left={<TextInput.Icon name='email'/>}\r\n                        onChangeText={newText => getNewEmail(newText)}\r\n                    />\r\n                <TextInput            \r\n                        style={styles.inputField}\r\n                        mode={'outlined'}   \r\n                        secureTextEntry={isSecureEntry}\r\n                        label={'Password'}\r\n                        left={<TextInput.Icon name='lock'/>}\r\n                        right={  \r\n                            <TextInput.Icon name=\"eye\"\r\n                                onPress={() => setSecureEntry(prev => !prev)}\r\n                            />}\r\n                        onChangeText={newText => getCurrPW(newText)}\r\n                    />\r\n            </View>\r\n\r\n            <View style={{marginTop: 45}}>\r\n                <Button\r\n                    mode=\"contained\"\r\n                    style={styles.button}\r\n                    onPress={() => onSubmit()}\r\n                >Submit</Button>\r\n\r\n                <Button\r\n                    mode=\"contained\"\r\n                    style={[styles.button, {\r\n                        backgroundColor: '#e03a3a'\r\n                    }]}\r\n                    onPress={() => navigation.goBack()}\r\n                >Cancel</Button>\r\n           \r\n            </View>\r\n            \r\n        </View>\r\n    \r\n        \r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n    \r\n    \r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#E8EAED\"\r\n    },\r\n\r\n    title: { \r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        color: \"#4970FA\",\r\n        marginTop: 15,\r\n        marginLeft: 15\r\n    },\r\n\r\n    form: { \r\n        marginTop: 20,\r\n    },\r\n\r\n    inputField: {\r\n        marginTop: 20,\r\n        marginLeft:35,\r\n        marginRight:35,\r\n        backgroundColor:\"#fff\"\r\n    },\r\n    button: {\r\n        backgroundColor: '#4970FA',\r\n        marginTop: 35,\r\n        marginLeft: 35,\r\n        marginRight:35,\r\n    },\r\n\r\n  \r\n});","import React from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport InstructorSetting from './InstructorSetting'\r\nimport ChangePassword from '../../changeAuth/ChangePassword'\r\nimport ChangeEmail from '../../changeAuth/ChangeEmail'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function SettingStackNavigatorInstructor()  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"Setting\" component={InstructorSetting} />\r\n      <Stack.Screen name=\"Change Password\" component={ChangePassword} />\r\n      <Stack.Screen name=\"Change Email\" component={ChangeEmail} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View, TouchableWithoutFeedback } from \"react-native\";\r\nimport { colors } from \"react-native-elements\";\r\nimport { useSpring, animated, useChain, useSpringRef } from \"react-spring\";\r\n\r\nconst AnimatedText = animated(Text);\r\nconst AnimatedView = animated(View);\r\n\r\nexport default function Welcome() {\r\n  const textAnim = useSpring({\r\n    from: {\r\n      fontSize: 10,\r\n    },\r\n    to: {\r\n      fontSize: 50,\r\n    },\r\n    animationDuration: 2000,\r\n  });\r\n\r\n  const viewAnim = useSpring({\r\n    to: {\r\n      backgroundColor: \"#ccf7ff\",\r\n      borderRadius: 4,\r\n      borderWidth: 0,\r\n    },\r\n\r\n    from: {\r\n      backgroundColor: colors.white,\r\n      borderWidth: 1000,\r\n      borderColor: colors.white,\r\n    },\r\n    animationDuration: 2000,\r\n  });\r\n\r\n  const teachAnim = useSpring({\r\n    from: {\r\n      fontSize: 1,\r\n    },\r\n    to: {\r\n      fontSize: 50,\r\n    },\r\n    animationDuration: 2000,\r\n    delay: 1000,\r\n  });\r\n\r\n  const learnAnim = useSpring({\r\n    from: {\r\n      fontSize: 1,\r\n    },\r\n    to: {\r\n      fontSize: 50,\r\n    },\r\n    animationDuration: 2000,\r\n    delay: 2000,\r\n  });\r\n\r\n  const studyAnim = useSpring({\r\n    from: {\r\n      fontSize: 1,\r\n    },\r\n    to: {\r\n      fontSize: 50,\r\n    },\r\n    animationDuration: 2000,\r\n    delay: 3000,\r\n  });\r\n\r\n  return (\r\n    <AnimatedView\r\n      style={{\r\n        flex: 1,\r\n        ...viewAnim,\r\n      }}\r\n    >\r\n      <View\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            backgroundColor: \"#002cad\",\r\n            borderRadius: 30,\r\n            marginTop: 100,\r\n          }}>\r\n          <AnimatedText style={{\r\n            fontWeight: \"bold\",\r\n            padding: 20,\r\n            color: \"#ffad9e\",\r\n\r\n\r\n            ...textAnim\r\n          }}>Welcome!</AnimatedText>\r\n        </View>\r\n\r\n\r\n\r\n\r\n        <View style={{\r\n          backgroundColor: \"#7dffe7\",\r\n          borderRadius: 30,\r\n          marginRight: \"50%\",\r\n          marginTop: \"5%\",\r\n        }} >\r\n\r\n          <AnimatedText style={{\r\n           color: \"#d63e22\",\r\n           padding: 20,\r\n\r\n            ...teachAnim\r\n          }}>Teach</AnimatedText>\r\n        </View>\r\n\r\n        <View style={{\r\n          backgroundColor: \"#94ffb6\",\r\n          borderRadius: 30,\r\n          marginTop: \"5%\",\r\n\r\n        }}>\r\n\r\n          <AnimatedText style={{\r\n                        padding: 20,\r\n                        color: \"#437309\",\r\n\r\n            ...learnAnim\r\n          }}>Learn</AnimatedText>\r\n        </View>\r\n\r\n\r\n\r\n\r\n\r\n        <View style={{\r\n          backgroundColor: \"#fdff82\",\r\n          borderRadius: 30,\r\n          marginRight: \"-50%\",\r\n          marginTop: \"5%\",\r\n        }}>\r\n\r\n          <AnimatedText style={{\r\n                       padding: 20,\r\n\r\n                       color: \"#6b0461\",\r\n\r\n            ...studyAnim\r\n          }}>Study</AnimatedText>\r\n        </View>\r\n\r\n      </View>\r\n    </AnimatedView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  baseText: {\r\n  },\r\n  titleText: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"Cochin\"\r\n\r\n  }\r\n});","import React from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport Welcome from '../../../component/Welcome'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function WelcomeStackNavigatorInstructor()  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"WelcomeInstructor\" component={Welcome} />\r\n          </Stack.Navigator>\r\n  )\r\n}","import React, { useState, useContext } from \"react\";\r\nimport { useIsFocused,useFocusEffect,  } from \"@react-navigation/native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Dimensions,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport Authentication from \"../../utility/Authentication\";\r\nimport { AuthContext } from \"../../store/AuthContext\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport CourseEditScreen from \"./DashBoardStackNavigator/CourseEditScreen\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport HomeStackNavigatorInstructor from \"./HomeStackNavigator/HomeStackNavigatorInstructor\";\r\nimport DashBoardStackNavigatorInstructor from \"./DashBoardStackNavigator/DashBoardStackNavigatorInstructor\";\r\nimport ProfileStackNavigatorInstructor from \"./ProfileStackNavigator/ProfileStackNavigatorInstructor\";\r\nimport SettingStackNavigatorInstructor from \"./SettingsStackNavigator/SettingStackNavigatorInstructor\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport WelcomeStackNavigatorInstructor from \"./WelcomeStackNavigation.js/WelcomeStackNavigationInstructor\";\r\n\r\nconst API_URL =\r\n  Platform.OS === \"ios\" ? \"http://localhost:5000\" : \"http://10.0.2.2:5000\";\r\n//const API_URL =  'http://localhost:3001/api/user';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function InstructorMainScreenTabs({ navigation }) {\r\n  const isFocused = useIsFocused();\r\n \r\n  return (\r\n    <Tab.Navigator\r\n\r\n\r\n\r\n    initialRouteName=\"Welcome\"\r\n    \r\n    \r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarActiveTintColor: \"#4970FA\",\r\n\r\n   \r\n        \r\n        \r\n      }}\r\n\r\n    \r\n      \r\n    >\r\n      <Tab.Screen \r\n            name=\"Welcome\" \r\n            component={WelcomeStackNavigatorInstructor} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='asterisk' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n          />\r\n\r\n   \r\n      <Tab.Screen\r\n        name=\"Dashboard\"\r\n        component={DashBoardStackNavigatorInstructor}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <MaterialCommunityIcons name=\"home\" color={\"#4970FA\"} size={20} />\r\n          ),\r\n        }}\r\n      />\r\n\r\n\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={ProfileStackNavigatorInstructor}\r\n       \r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            \r\n          \r\n            <MaterialCommunityIcons\r\n              name=\"account-circle-outline\"\r\n              color={\"#4970FA\"}\r\n              size={20}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Settings\"\r\n        component={SettingStackNavigatorInstructor}\r\n        options={{\r\n          tabBarIcon: ({ focused }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"cog-outline\"\r\n              color={\"#4970FA\"}\r\n              size={20}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  Pressable, View, Text,\r\n  StyleSheet, Platform,\r\n  TouchableOpacity, Alert\r\n} from 'react-native';\r\nimport APIConnection from '../utility/APIConnection';\r\nimport { Badge, Card} from 'react-native-paper';\r\n\r\n\r\n\r\n\r\nfunction StudentCourseGridCard({ classID, title,  onPress, refresh}) {\r\n\r\n  const [state, setState] = useState(0);\r\n\r\n  const apiConnection = new APIConnection();\r\n\r\n\r\n  useEffect(() => {\r\n    //your code here\r\n\r\n\r\n    apiConnection.getClassProgress(classID)\r\n      .then(json => {\r\n        console.log(json);\r\n\r\n        var arr = json.AllUnits\r\n\r\n        if (arr) {\r\n          var len = arr.length\r\n          var c = 0\r\n          var classProg = 0\r\n          arr.map((item, key) => {\r\n            if (item.completed) c = c + 1\r\n\r\n          }, json)\r\n\r\n          if (c) classProg = c / len\r\n\r\n          else classProg = 0;\r\n          setState((classProg * 100).toFixed(2))\r\n        }\r\n      })\r\n\r\n\r\n  }, []);\r\n\r\n\r\n  function dropClass() {\r\n    apiConnection.dropClass(classID);\r\n    alert('dropped class');\r\n    refresh();\r\n\r\n  }\r\n\r\n\r\n  function alertDrop() {\r\n    Alert.alert(\r\n      \"Warning\",\r\n      \"Do you want to drop this course?\",\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"Drop\",\r\n          onPress: () => { dropClass() }\r\n\r\n        }\r\n      ],\r\n      {\r\n        cancelable: true,\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <Card style={styles.gridItem}>\r\n\r\n\r\n      <Pressable\r\n        android_ripple={{ color: '#ccc' }}\r\n        style={({ pressed }) => [\r\n          styles.button,\r\n          pressed ? styles.buttonPressed : null,\r\n\r\n        ]}\r\n        onPress={onPress}\r\n      >\r\n\r\n        <Card.Cover style={{ height: 80, width: '100%', resizeMode: \"stretch\" }} source={{ uri: 'https://picsum.photos/700' }} />\r\n        <Card.Content adjustsFontSizeToFit>\r\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\r\n            <Badge style={{ fontSize: 9, fontWeight: 'bold', backgroundColor: 'blue' }}>{state}%</Badge>\r\n            <TouchableOpacity onPress={() => {\r\n              if (Platform.OS == 'web') {\r\n                dropClass();\r\n\r\n              }\r\n              else if (Platform.OS == 'android' || Platform.OS == 'ios') {\r\n                alertDrop();\r\n\r\n              }\r\n            }}>\r\n\r\n\r\n              <Text adjustsFontSizeToFit style={{ color: 'red', fontWeight: 'bold', fontSize: 13 }}> DROP</Text>\r\n\r\n\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n\r\n          <Text adjustsFontSizeToFit numberOfLines={2} style={{ textAlign: 'center', fontWeight: '500' }}>{title}</Text>\r\n\r\n        </Card.Content>\r\n\r\n\r\n      </Pressable>\r\n\r\n    </Card>\r\n\r\n  );\r\n}\r\n\r\nexport default StudentCourseGridCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  gridItem: {\r\n    flex: 1,\r\n    margin: 16,\r\n    height: 150,\r\n    borderRadius: 8,\r\n    elevation: 4,\r\n    backgroundColor: 'white',\r\n    color: 'white',\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.25,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 8,\r\n    overflow: Platform.OS === 'android' ? 'hidden' : 'visible',\r\n  },\r\n  button: {\r\n    flex: 1,\r\n\r\n  },\r\n  buttonPressed: {\r\n    opacity: 0.5,\r\n\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n\r\n\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    textAlign: 'center'\r\n\r\n  },\r\n  progress: {\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    height: 20\r\n\r\n  }\r\n\r\n});","import React, { useState,  useLayoutEffect } from 'react';\r\nimport { View, Text, StyleSheet,  FlatList } from \"react-native\";\r\nimport StudentCourseGridCard from '../../../component/StudentCourseGridCard';\r\nimport APIConnection from '../../../utility/APIConnection';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\n\r\n\r\n\r\nexport default function StudentDashboard({navigation}) {\r\n\r\n\r\n//--------------Copy This Piece Of Code Here------------\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const apiConnection = new APIConnection();\r\n          useLayoutEffect(() => {\r\n            //your code here\r\n            if(isFocused) {\r\n            \r\n              refresh();\r\n            \r\n            }\r\n         },[isFocused]);\r\n\r\n\r\n function refresh(){\r\n  apiConnection.getClasses().then(json => {\r\n    setData(json)})\r\n   \r\n }\r\n\r\n //------------------------------------------\r\n    function classCardComponent(itemData) {\r\n        function pressHandler() {\r\n            console.log(\"item data debug:\", itemData)\r\n    \r\n          navigation.navigate('Student Course View', {\r\n            classId: itemData.item.class_id,\r\n            className: itemData.item.class_name\r\n          });\r\n        }\r\n    console.log(\"ITEMDATA: \" + itemData.item.class_id)\r\n        return (\r\n          <StudentCourseGridCard\r\n            classID ={itemData.item.class_id}\r\n            title={itemData.item.class_name}\r\n            // color={\"#534789\"}\r\n            onPress={pressHandler}\r\n            refresh ={refresh}\r\n          />\r\n        );\r\n      }\r\n     \r\n      return (\r\n        \r\n  \r\n        <View style={styles.container}>\r\n        <Text style={styles.title}>Courses</Text>\r\n\r\n\r\n        <FlatList\r\n          data={data}\r\n          keyExtractor={(item) => item.class_id}\r\n          renderItem={classCardComponent}\r\n          numColumns={2}\r\n        />\r\n\r\n    </View>\r\n\r\n\r\n\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#E8EAED',\r\n\r\n  },\r\n\r\n  content: {\r\n    alignItems: \"center\",\r\n\r\n  },\r\n\r\n  bottomContainer: {\r\n      flex: 1,\r\n      justifyContent: 'flex-end',\r\n\r\n  },\r\n\r\n  \r\n\r\n\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: 'black',\r\n    marginTop:50,\r\n    marginBottom: 50\r\n\r\n  },\r\n\r\n  boxes: {\r\n      marginTop:10,\r\n      backgroundColor: 'white',\r\n      borderColor: '#C0C0C0',\r\n      borderWidth: 1,\r\n      borderRadius: 10,\r\n      width:300,\r\n      height: 200,\r\n      textAlign: \"center\",\r\n      alignItems: \"center\"\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n});\r\n\r\nconst addClass = StyleSheet.create({\r\n\r\n  addBttn: {\r\n  alignSelf: 'flex-end',\r\n\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width:80,\r\n  height:80,\r\n  paddingBottom:5,\r\n  position: \"absolute\",\r\n    //height: 60,\r\n\r\n  borderRadius: 50,\r\n  backgroundColor: '#4970FA',\r\n  color: 'white',\r\n  right: 20,\r\n  bottom:40\r\n\r\n  },\r\n\r\n  addText: {\r\n\r\n    color: 'white',\r\n    fontSize: 50,\r\n    fontWeight: \"bold\",\r\n\r\n  }\r\n}\r\n        \r\n      );\r\n\r\n      \r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  StatusBar,\r\n  Image,\r\n  TouchableOpacity,\r\n  Modal,\r\n  Animated,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { COLORS, SIZES } from \"../constants/themes\";\r\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\r\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\r\nimport APIConnection from \"../utility/APIConnection\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\n\r\nexport default function QuizComponent({ unitID, navigation }) {\r\n  const data = [\r\n    {\r\n      quizdata_id: 1,\r\n      quizdata_question: \"No quiz available yet\",\r\n      quizdata_answers: [\"\", \"\", \"\", \"\"],\r\n      correct_option: 0,\r\n    },\r\n    {\r\n      quizdata_id: 2,\r\n      quizdata_question: \"No quiz available yet\",\r\n      quizdata_answers: [\"\", \"\", \"\", \"\"],\r\n      correct_option: 1,\r\n    },\r\n    {\r\n      quizdata_id: 3,\r\n      quizdata_question: \"No quiz available yet\",\r\n      quizdata_answers: [\"\", \"\", \"\", \"\"],\r\n      correct_option: 2,\r\n    },\r\n    {\r\n      quizdata_id: 4,\r\n      quizdata_question: \"No quiz available yet\",\r\n      quizdata_answers: [\"\", \"\", \"\", \"\"],\r\n      correct_option: 3,\r\n    },\r\n  ];\r\n\r\n  const [allQuestions, setAllQuestions] = useState(data);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [currentOptionSelected, setCurrentOptionSelected] = useState(null);\r\n  const [correctOption, setCorrectOption] = useState(null);\r\n  const [isOptionsDisabled, setIsOptionsDisabled] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [showNextButton, setShowNextButton] = useState(false);\r\n  const [showScoreModal, setShowScoreModal] = useState(false);\r\n\r\n  //not needed, just being used for printing\r\n  const [iQuizData, setIQuizData] = useState();\r\n  // also not needed as well\r\n  const [quizID, setQuizID] = useState();\r\n  const isFocused = useIsFocused();\r\n\r\n  const apiConnection = new APIConnection();\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      let response = await apiConnection.getUnitQuizContent(unitID);\r\n      if (response.status == 400) {\r\n        //do nothing, for now\r\n      }\r\n      response = await response.json();\r\n\r\n      setQuizID(response[0].quiz_id);\r\n\r\n      let quizDataResponse = await apiConnection.getQuizData(\r\n        response[0].quiz_id\r\n      );\r\n\r\n      if (quizDataResponse.status == 400) {\r\n        // do nothing\r\n      } else {\r\n        quizDataResponse = await quizDataResponse.json();\r\n\r\n        setIQuizData(quizDataResponse);\r\n        processJSON(quizDataResponse);\r\n        console.log(\"Quiz data fetched is: \" + iQuizData);\r\n      }\r\n    }\r\n\r\n    if (isFocused) {\r\n      fetchMyAPI();\r\n    }\r\n  }, [isFocused]);\r\n\r\n  function processJSON(quizDataResponse) {\r\n    let json = quizDataResponse;\r\n    for (let i = 0; i < quizDataResponse.length; i++) {\r\n      let answers = quizDataResponse[i].quizdata_answers;\r\n      answers = answers.replace(/[']+/g, '\"');\r\n      let answersJson = JSON.parse(answers);\r\n      json[i].quizdata_answers = answersJson.choices;\r\n      json[i].correct_option = answersJson.answer;\r\n\r\n      console.log(\"Quiz data answers\" + answersJson.type + answersJson[0]);\r\n      console.log(\"Quiz data answers array\" + [\"hi\", \"There\", \"Cutie\"]);\r\n    }\r\n\r\n    setAllQuestions(json);\r\n  }\r\n\r\n  const validateAnswer = (selectedOption) => {\r\n    let correct_option = allQuestions[currentQuestionIndex][\"correct_option\"];\r\n    setCurrentOptionSelected(selectedOption);\r\n    setCorrectOption(correct_option);\r\n    setIsOptionsDisabled(true);\r\n    if (selectedOption == correct_option) {\r\n      // Set Score\r\n      setScore(score + 1);\r\n    }\r\n    // Show Next Button\r\n    setShowNextButton(true);\r\n  };\r\n  const handleNext = () => {\r\n    if (currentQuestionIndex == allQuestions.length - 1) {\r\n      // Last Question\r\n      // Show Score Modal\r\n      setShowScoreModal(true);\r\n    } else {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setCurrentOptionSelected(null);\r\n      setCorrectOption(null);\r\n      setIsOptionsDisabled(false);\r\n      setShowNextButton(false);\r\n    }\r\n    Animated.timing(progress, {\r\n      toValue: currentQuestionIndex + 1,\r\n      duration: 1000,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  };\r\n  const restartQuiz = () => {\r\n    setShowScoreModal(false);\r\n\r\n    setCurrentQuestionIndex(0);\r\n    setScore(0);\r\n\r\n    setCurrentOptionSelected(null);\r\n    setCorrectOption(null);\r\n    setIsOptionsDisabled(false);\r\n    setShowNextButton(false);\r\n    Animated.timing(progress, {\r\n      toValue: 0,\r\n      duration: 1000,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  };\r\n\r\n  async function saveProgressAndNext() {\r\n    await apiConnection.postProgress(unitID);\r\n    setShowScoreModal(false);\r\n  }\r\n\r\n  const renderQuestion = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          marginVertical: 40,\r\n          flex: 1,\r\n        }}\r\n      >\r\n        {/* Question Counter */}\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            alignItems: \"flex-end\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              color: COLORS.white,\r\n              fontSize: 20,\r\n              opacity: 0.6,\r\n              marginRight: 2,\r\n            }}\r\n          >\r\n            {currentQuestionIndex + 1}\r\n          </Text>\r\n          <Text style={{ color: COLORS.white, fontSize: 18, opacity: 0.6 }}>\r\n            / {allQuestions.length}\r\n          </Text>\r\n        </View>\r\n\r\n        {/* Question */}\r\n        <Text\r\n          style={{\r\n            color: COLORS.white,\r\n            fontSize: 30,\r\n          }}\r\n        >\r\n          {allQuestions[currentQuestionIndex]?.quizdata_question}\r\n        </Text>\r\n      </View>\r\n    );\r\n  };\r\n  const renderOptions = () => {\r\n    return (\r\n      <View>\r\n        {allQuestions[currentQuestionIndex]?.quizdata_answers.map(\r\n          (option, index) => (\r\n            <TouchableOpacity\r\n              onPress={() => validateAnswer(index)}\r\n              disabled={isOptionsDisabled}\r\n              key={index}\r\n              style={{\r\n                borderWidth: 3,\r\n                borderColor:\r\n                  index == correctOption\r\n                    ? COLORS.success\r\n                    : index == currentOptionSelected\r\n                    ? COLORS.error\r\n                    : COLORS.secondary + \"40\",\r\n                backgroundColor:\r\n                  index == correctOption\r\n                    ? COLORS.success + \"20\"\r\n                    : index == currentOptionSelected\r\n                    ? COLORS.error + \"20\"\r\n                    : COLORS.secondary + \"20\",\r\n                height: 60,\r\n                borderRadius: 20,\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                paddingHorizontal: 20,\r\n                marginVertical: 10,\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 20, color: COLORS.white }}>\r\n                {option}\r\n              </Text>\r\n\r\n              {/* Show Check Or Cross Icon based on correct answer*/}\r\n              {index == correctOption ? (\r\n                <View\r\n                  style={{\r\n                    width: 30,\r\n                    height: 30,\r\n                    borderRadius: 30 / 2,\r\n                    backgroundColor: COLORS.success,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    name=\"check\"\r\n                    iconStyle={{\r\n                      color: COLORS.white,\r\n                      fontSize: 20,\r\n                    }}\r\n                  />\r\n                </View>\r\n              ) : index == currentOptionSelected ? (\r\n                <View\r\n                  style={{\r\n                    width: 30,\r\n                    height: 30,\r\n                    borderRadius: 30 / 2,\r\n                    backgroundColor: COLORS.error,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    name=\"close\"\r\n                    iconStyle={{\r\n                      color: COLORS.white,\r\n                      fontSize: 20,\r\n                    }}\r\n                  />\r\n                </View>\r\n              ) : null}\r\n            </TouchableOpacity>\r\n          )\r\n        )}\r\n      </View>\r\n    );\r\n  };\r\n  const renderNextButton = () => {\r\n    if (showNextButton) {\r\n      return (\r\n        <TouchableOpacity\r\n          onPress={handleNext}\r\n          style={{\r\n            marginTop: 20,\r\n            width: \"100%\",\r\n            backgroundColor: COLORS.accent,\r\n            padding: 20,\r\n            borderRadius: 5,\r\n          }}\r\n        >\r\n          <Text\r\n            style={{ fontSize: 20, color: COLORS.white, textAlign: \"center\" }}\r\n          >\r\n            Next\r\n          </Text>\r\n        </TouchableOpacity>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  //--------------------Progress Bar-----------------\r\n  const [progress, setProgress] = useState(new Animated.Value(0));\r\n  const progressAnim = progress.interpolate({\r\n    inputRange: [0, allQuestions.length],\r\n    outputRange: [\"0%\", \"100%\"],\r\n  });\r\n  const renderProgressBar = () => {\r\n    return (\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          height: 20,\r\n          borderRadius: 20,\r\n          backgroundColor: \"#00000020\",\r\n        }}\r\n      >\r\n        <Animated.View\r\n          style={[\r\n            {\r\n              height: 20,\r\n              borderRadius: 20,\r\n              backgroundColor: COLORS.accent,\r\n            },\r\n            {\r\n              width: progressAnim,\r\n            },\r\n          ]}\r\n        ></Animated.View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView\r\n      style={{\r\n        flex: 1,\r\n      }}\r\n    >\r\n      <StatusBar barStyle=\"light-content\" backgroundColor={COLORS.primary} />\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          paddingVertical: 40,\r\n          paddingHorizontal: 16,\r\n          backgroundColor: COLORS.background,\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {/* ProgressBar */}\r\n        {renderProgressBar()}\r\n\r\n        {/* Question */}\r\n        {renderQuestion()}\r\n\r\n        {/* Options */}\r\n        {renderOptions()}\r\n\r\n        {/* Next Button */}\r\n        {renderNextButton()}\r\n\r\n        {/* Score Modal */}\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={showScoreModal}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              backgroundColor: COLORS.primary,\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                backgroundColor: COLORS.white,\r\n                width: \"90%\",\r\n                borderRadius: 20,\r\n                padding: 20,\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Text style={{ fontSize: 30, fontWeight: \"bold\" }}>\r\n                {score > allQuestions.length / 2 ? \"Congratulations!\" : \"Oops!\"}\r\n              </Text>\r\n\r\n              <View\r\n                style={{\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"flex-start\",\r\n                  alignItems: \"center\",\r\n                  marginVertical: 20,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontSize: 30,\r\n                    color:\r\n                      score > allQuestions.length / 2\r\n                        ? COLORS.success\r\n                        : COLORS.error,\r\n                  }}\r\n                >\r\n                  {score}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontSize: 20,\r\n                    color: COLORS.black,\r\n                  }}\r\n                >\r\n                  / {allQuestions.length}\r\n                </Text>\r\n              </View>\r\n              {/* Retry Quiz button */}\r\n              <TouchableOpacity\r\n                onPress={restartQuiz}\r\n                style={{\r\n                  backgroundColor: COLORS.accent,\r\n                  padding: 20,\r\n                  width: \"100%\",\r\n                  borderRadius: 20,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    color: COLORS.white,\r\n                    fontSize: 20,\r\n                  }}\r\n                >\r\n                  Retry Quiz\r\n                </Text>\r\n              </TouchableOpacity>\r\n\r\n\r\n              {/* Save Progress button */}\r\n              {score > allQuestions.length / 2 ? (\r\n                <TouchableOpacity\r\n                  onPress={() => saveProgressAndNext()}\r\n                  style={{\r\n                    paddingTop: 20,\r\n                    marginTop: 20,\r\n\r\n                    backgroundColor: COLORS.accent,\r\n                    padding: 20,\r\n                    width: \"100%\",\r\n                    borderRadius: 20,\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      color: COLORS.white,\r\n                      fontSize: 20,\r\n                    }}\r\n                  >\r\n                    Save Progress\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              ) : null}\r\n\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n\r\n        {/* Background Image */}\r\n        {/* <Image\r\n                source={require('../assets/images/DottedBG.png')}\r\n                style={{\r\n                    width: SIZES.width,\r\n                    height: 130,\r\n                    zIndex: -1,\r\n                    position: 'absolute',\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    opacity: 0.5\r\n                }}\r\n                resizeMode={'contain'}\r\n                /> */}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    SafeAreaView,\r\n    StatusBar,\r\n    StyleSheet,\r\n    Image,\r\n    TouchableOpacity,\r\n    Modal,\r\n    Animated,\r\n    TextInput,\r\n    ScrollView,\r\n} from \"react-native\";\r\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\r\nimport { Button } from \"react-native-elements\";\r\nimport FontAwesome5Icon from \"react-native-vector-icons/FontAwesome5\";\r\nimport { color } from \"react-native-elements/dist/helpers\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { RadioButton } from 'react-native-paper';\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\nimport QuizComponent from \"../../../component/QuizComponent\";\r\n\r\n\r\n\r\n\r\nexport default function StudentQuizView({ navigation, route }) {\r\n    const {unitID, unitName} = route.params;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <ScrollView>\r\n            <QuizComponent\r\n            unitID={unitID}\r\n            ></QuizComponent>\r\n        </ScrollView>\r\n    )\r\n\r\n\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Image,\r\n  TouchableOpacity,\r\n  Modal,\r\n  Animated,\r\n  TextInput,\r\n  Platform,\r\n  Dimensions,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport { RadioButton } from \"react-native-paper\";\r\nimport { Avatar, Button, Card, Title, Paragraph } from \"react-native-paper\";\r\n\r\nimport ReactPlayer from \"react-player\";\r\nimport YoutubePlayer from \"react-native-youtube-iframe\";\r\nimport Content from \"../../../component/CreateComponent\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function StudentUnitContentView({ navigation, route }) {\r\n  const { unitID, unitName } = route.params;\r\n\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const [videoContent, setVideoContent] = useState(\"\");\r\n  const [unitText, setUnitText] = useState(\"\");\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const apiConnection = new APIConnection();\r\n  const isFocused = useIsFocused();\r\n\r\n  useEffect(() => {\r\n    //your code here\r\n    if (isFocused) {\r\n      apiConnection.getUnitContent(unitID).then((json) => {\r\n        setData(json);\r\n        let newVideoData = json.unit_content;\r\n        setVideoContent(newVideoData);\r\n        setUnitText(json.unit_content_type);\r\n      });\r\n    }\r\n  }, [isFocused]);\r\n\r\n  function YouTubeGetID(url) {\r\n    url = url.split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\r\n    return url[2] !== undefined ? url[2].split(/[^0-9a-z_\\-]/i)[0] : url[0];\r\n  }\r\n\r\n  function isValidUrl(_string) {\r\n    const matchpattern =\r\n      /^https?:\\/\\/(?:www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$/gm;\r\n    return matchpattern.test(_string);\r\n  }\r\n\r\n  //turns valid link into component\r\n  function textInput(contentString) {\r\n    //if this is just a text\r\n    if (!isValidUrl(contentString)) {\r\n      return (\r\n        <View>\r\n          <Text>{\"There is no video for this unit\"}</Text>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    var linkInput = JSON.stringify(contentString);\r\n\r\n    if (Platform.OS === \"web\") {\r\n      return (\r\n        <div style={{ marginTop: 10 }}>\r\n          <ReactPlayer\r\n            url={linkInput}\r\n            height={200}\r\n            width={400}\r\n            controls={true}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (Platform.OS == \"ios\" || Platform.OS === \"android\") {\r\n      return (\r\n        <YoutubePlayer\r\n          height={270}\r\n          width={400}\r\n          play={playing}\r\n          videoId={YouTubeGetID(linkInput)}\r\n          webViewStyle={{ bottom: -40 }}\r\n        //videoId={\"iee2TATGMyI\"}\r\n        //https://youtu.be/cBxyB788_5w\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.container}>\r\n        {textInput(videoContent)}\r\n        {\r\n          unitText == null ? null : <Card>\r\n            <Card.Content>\r\n              <Paragraph>{unitText}</Paragraph>\r\n            </Card.Content>\r\n          </Card>\r\n        }\r\n\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //  flex:1,\r\n\r\n    //margin:5,\r\n    //borderWidth:1,\r\n    paddingTop: \"30%\",\r\n    borderColor: \"#C0C0C0\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: 'center'\r\n  },\r\n  textStyle: {\r\n    //  flex:1,\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginHorizontal: 5,\r\n    marginBottom: 10,\r\n  },\r\n  textHolder: {\r\n    flex: 1,\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    minWidth: Dimensions.get(\"window\").width - 20,\r\n    //paddingBottom:100,\r\n    //maxHeight: 800,\r\n\r\n    //minWidth:Dimensions.get('window').width-15,\r\n  },\r\n});\r\n","import StudentQuizView from \"./StudentQuizView\";\r\nimport StudentUnitContentView from \"./StudentUnitContentView\";\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\n\r\nexport default function TabsStudentUnitView({ route, navigation }) {\r\n\r\n    const {unitID, unitName} = route.params;\r\n\r\n\r\n\r\n    return (\r\n        <Tab.Navigator>\r\n            <Tab.Screen name=\"Content\" component={StudentUnitContentView} initialParams={{unitID, unitName}} />\r\n            <Tab.Screen name=\"Quiz\" component={StudentQuizView}  initialParams={{unitID, unitName}} />\r\n        </Tab.Navigator>\r\n    );\r\n};","import { useEffect, useState } from 'react';\r\nimport * as React from 'react-native'\r\nimport { Text, View, Button, TouchableOpacity, FlatList, StyleSheet, SafeAreaView } from 'react-native'\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\nimport { Icon } from 'react-native-elements';\r\nimport { ActivityIndicator } from 'react-native-paper';\r\n\r\n\r\nexport default function StudentLessonView({ navigation, route }) {\r\n\r\n    const { lessonID, instID, lesson_name } = route.params;\r\n    const isFocused = useIsFocused();\r\n    const [LessonData, setLessonData] = useState([]);\r\n    const [dummy, setDummy] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n\r\n    const apiConnection = new APIConnection();\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (isFocused) {\r\n            setIsLoading(true);\r\n\r\n            fetchData();\r\n        }\r\n\r\n        async function fetchData() {\r\n            let json = await apiConnection.getSectionsPerLesson(lessonID);\r\n            for (let i = 0; i < json.length; i++) {\r\n\r\n                let item = json[i];\r\n                let result = await apiConnection.getUnitProgress(item.unit_id);\r\n                if (result.result.length > 0) {\r\n                    json[i]['completed'] = 1;\r\n\r\n                }\r\n                else {\r\n                    json[i]['completed'] = 0;\r\n\r\n                }\r\n\r\n            }\r\n            setLessonData(json);\r\n            setIsLoading(false);\r\n\r\n\r\n        }\r\n\r\n\r\n    }, [isFocused]);\r\n\r\n\r\n    function debugDummy() {\r\n        setDummy(!dummy);\r\n    }\r\n\r\n\r\n\r\n    function onUnitPress(unitID) {\r\n        navigation.navigate('Student Content View Tab', {\r\n            unitID: unitID\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    console.log(\"LESSON DATA INDEX ONE:\" + JSON.stringify(LessonData[0]))\r\n\r\n    return (\r\n\r\n        <View style={styles.entireView}>\r\n\r\n                    <View style={styles.lessonNameContainer}>\r\n                        <Text style={styles.lessonName}>{lesson_name}</Text>\r\n\r\n                    </View>\r\n\r\n                    <View style={{ flex: 1, width: '100%', alignItems: 'center' }}>\r\n\r\n                        <FlatList\r\n                            numColumns={3}\r\n                            data={LessonData}\r\n                            keyExtractor={(it) => it.unit_id}\r\n                            contentContainerStyle={{ alignItems: 'center' }}\r\n                            style={{ width: '100%' }}\r\n                            renderItem={({ item }) => {\r\n\r\n                                return (\r\n                                    <View >\r\n\r\n                                        <TouchableOpacity style={styles.unitTouch} onPress={() => onUnitPress(item.unit_id)}>\r\n\r\n                                            <Text adjustsFontSizeToFit numberOfLines={2} style={styles.unitText}>\r\n                                                <Text >\r\n                                                    {item.completed === 1 ? <Icon style={{ borderRadius: 15, padding: 2, backgroundColor: 'green' }} color={'white'} name={\"check\"} size={12} /> :\r\n                                                        null}\r\n                                                </Text>\r\n\r\n\r\n\r\n                                                {item.unit_name}\r\n\r\n                                            </Text>\r\n\r\n\r\n\r\n                                        </TouchableOpacity>\r\n                                    </View>\r\n\r\n                                )\r\n\r\n                            }\r\n\r\n                            }\r\n\r\n                        />\r\n                    </View>\r\n\r\n\r\n\r\n                </View>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    unit: {\r\n\r\n        flex: 1,\r\n        backgroundColor: 'green',\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    lessonName: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        color: 'white',\r\n        paddingRight: 30,\r\n        paddingLeft: 30,\r\n    },\r\n    lessonNameContainer: {\r\n        justifyContent: 'center',\r\n        backgroundColor: '#00bfff',\r\n        height: 60\r\n    },\r\n\r\n    unitTouch: {\r\n\r\n        width: 100,\r\n        height: 60,\r\n        backgroundColor: '#f0f8ff',\r\n        borderRadius: 5,\r\n        borderColor: 'black',\r\n        borderWidth: 2,\r\n        margin: 10,\r\n        textAlign: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n        shadowOpacity: 2,\r\n        shadowOffset: { width: 1, height: 2 }\r\n    },\r\n    unitText: {\r\n\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: 'black',\r\n\r\n        textAlign: 'center'\r\n    },\r\n    entireView: {\r\n        flex: 1,\r\n        backgroundColor: '#3385ff'\r\n    }\r\n})","import React, { useEffect, useState } from 'react';\r\n// Import required components\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\r\nimport APIConnection from \"../utility/APIConnection\";\r\nimport { Badge } from \"react-native-paper\"\r\n\r\n\r\nexport default function StudentModuleView({ item, onClickFunction, instructorID, navigation }) {\r\n  //Custom Component for the Expandable List\r\n  const apiConnection = new APIConnection();\r\n  const [layoutHeight, setLayoutHeight] = useState(0);\r\n  const [progress, setProgress] = useState(true);\r\n  const [modProg, setModProg] = useState(0);\r\n\r\n  //same as component did mount, this method is called when the component is first mounted\r\n  useEffect(() => {\r\n    var mProg = \"0.0\"\r\n    apiConnection.getModuleProgress(item.Module_ID)\r\n      .then((result) => {\r\n        console.log('JSON for Module :' + JSON.stringify(result));\r\n        var arr = result.AllUnits\r\n        if (arr) {\r\n          var len = arr.length\r\n          var c = 0\r\n          var moduleProg = 0\r\n          arr.map((item, key) => {\r\n            if (item.completed) c = c + 1\r\n\r\n          }, result)\r\n\r\n          if (c) moduleProg = c / len\r\n\r\n          else moduleProg = 0\r\n          mProg = (moduleProg * 100).toFixed(2)\r\n          setModProg(mProg)\r\n\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n\r\n    if (item.isExpanded) {\r\n      setLayoutHeight(null);\r\n      console.log(\"here: \", item)\r\n\r\n      item.Lessons.map((lesson, key) => {\r\n        lesson.lProg = \"0.0\"\r\n        apiConnection.getLessonProgress(lesson.lesson_id)\r\n          .then((json) => {\r\n            var arr = json.AllUnits\r\n\r\n            if (arr) {\r\n              var len = arr.length\r\n              var c = 0\r\n              var lessonProg = 0\r\n              arr.map((item, key) => {\r\n                if (item.completed) c = c + 1\r\n\r\n              }, json)\r\n\r\n              if (c) lessonProg = c / len\r\n\r\n              else lessonProg = 0\r\n              lesson.lProg = (lessonProg * 100).toFixed(2)\r\n              setProgress(!progress)\r\n            }\r\n\r\n          })\r\n      })\r\n\r\n\r\n\r\n    } else {\r\n\r\n      setLayoutHeight(0);\r\n\r\n    }\r\n  }, [item.isExpanded]);\r\n\r\n\r\n\r\n  console.log('progress ' + progress)\r\n\r\n\r\n  return (\r\n    <View>\r\n      {/*Header of the Expandable List Item*/}\r\n\r\n      <View style={styles.classes}>\r\n        <TouchableOpacity\r\n          activeOpacity={0.8}\r\n          onPress={onClickFunction}\r\n          style={styles.header}>\r\n\r\n\r\n          <Badge size={24} style={{fontWeight:\"bold\"}}> {modProg}%</Badge>\r\n          <View style={{width: '75%'}}>\r\n            <Text style={styles.headerText} >{item.Module_Title} </Text>\r\n\r\n          </View>\r\n\r\n\r\n          <FontAwesome5 style={{ transform: [{ rotate: layoutHeight != 0 ? '180deg' : '0deg' }] }} name={'angle-down'} size={15} color={'white'} />\r\n\r\n\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View\r\n        style={{\r\n          height: layoutHeight,\r\n          overflow: 'hidden',\r\n\r\n\r\n        }}>\r\n        {/*Content under the header of the Expandable List Item*/}\r\n        {item.Lessons.map((item, key) => (\r\n          <TouchableOpacity\r\n            key={key}\r\n            style={styles.content}\r\n            onPress={() => navigation\r\n              .navigate('Lesson View', {\r\n                lessonID: item.lesson_id,\r\n                instID: instructorID,\r\n                lesson_name: item.lesson_name,\r\n\r\n              })\r\n            }\r\n\r\n          >\r\n\r\n            <View style={{ justifyContent: 'center', flexDirection: 'row' }}>\r\n\r\n            <Text style={styles.text}>\r\n              {item.lesson_name} \r\n            </Text>\r\n\r\n\r\n            \r\n              <Badge style={{ marginBottom: 8, backgroundColor: '#3385ff', borderRadius: 10, fontSize: 15 }}>\r\n                {item.lProg}%\r\n              </Badge>\r\n            </View>\r\n\r\n\r\n\r\n\r\n\r\n          </TouchableOpacity>\r\n\r\n        ))}\r\n\r\n      </View>\r\n\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  classes: {\r\n\r\n    alignItems: 'center',\r\n    padding: 5,\r\n    borderRadius: 10\r\n  },\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  titleText: {\r\n    flex: 1,\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n  },\r\n  header: {\r\n    width: 345,\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n    borderWidth: 2,\r\n    borderColor: 'black',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#3385ff',\r\n    padding: 20,\r\n\r\n  },\r\n  headerText: {\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n\r\n  },\r\n  separator: {\r\n    height: 1,\r\n    backgroundColor: 'black',\r\n    width: '95%',\r\n    marginLeft: 16,\r\n    marginRight: 16,\r\n  },\r\n  text: {\r\n    width:'80%',\r\n    fontSize: 16,\r\n    color: 'black',\r\n    padding: 10,\r\n    textAlign: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  content: {\r\n    borderRadius: 10,\r\n    borderColor: 'black',\r\n    borderWidth: 2,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    margin: 2\r\n  },\r\n});","import { useEffect, useState } from \"react\";\r\nimport * as React from \"react-native\";\r\n\r\n//import { render } from 'react-dom';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  LayoutAnimation,\r\n  UIManager,\r\n  Platform,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport StudentModuleView from \"../../../component/StudentModuleView\";\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\n\r\nexport default function StudentCourseView({ navigation, route }) {\r\n//retrieving course name and courseID from route.params\r\n    const {classId, className} = route.params;\r\n\r\n\r\n  //-----------API Connection Code----------\r\n  const isFocused = useIsFocused();\r\n\r\n  const [finalData, setFinalData] = useState([]);\r\n  const [lessonID, setLessonID] = useState(0);\r\n\r\n  const apiConnection = new APIConnection();\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      apiConnection.getAllModulesForClass(classId)\r\n      .then((json)=>{\r\n \r\n        let data = processAPIModuleData(json);\r\n        data.forEach(element=>{\r\n\r\n        \r\n          apiConnection.getLessonsInModule(element.Module_ID)\r\n          .then((json)=>{\r\n             processAPILesson(element.Lessons,json);\r\n          \r\n          });\r\n          \r\n        })\r\n       \r\n        setFinalData(data);\r\n\r\n      })\r\n\r\n    }\r\n\r\n  }, [isFocused]);\r\n\r\n  \r\n  function processAPILesson(lessonArr, lessonData){\r\n\r\n    for(let i =0; i < lessonData.length; i++){\r\n      let newLesson={};\r\n      newLesson['lesson_id'] = lessonData[i].lesson_id;\r\n      newLesson['lesson_name'] = lessonData[i].lesson_name;\r\n      newLesson['lesson_descrip'] = lessonData[i].lesson_descrip;\r\n      newLesson['lesson_index'] = lessonData[i].lesson_index;\r\n\r\n      lessonArr[i] = newLesson;\r\n      \r\n    }\r\n    return lessonArr;\r\n  }\r\n\r\n\r\n    //Morph json from API into an array that we can use\r\n    function processAPIModuleData(json){\r\n      let returnData=[]\r\n     for(let i = 0; i <json.length; i++){\r\n       let newModule = {};\r\n       newModule['isExpanded'] = false;\r\n       newModule['Module_Title'] = json[i].module_name;\r\n       newModule['Module_ID'] = json[i].module_id;\r\n       newModule['instructorID'] = json[i].instructor_id;\r\n      newModule['Lessons'] = [];\r\n  \r\n      returnData[i] = newModule;\r\n  \r\n      \r\n     }\r\n   \r\n     return returnData;\r\n  }\r\n  \r\n \r\n\r\n  //---------------------------------------\r\n\r\n  //Morph json from API into an array that we can use\r\n\r\n\r\n  if (Platform.OS == \"android\") {\r\n    UIManager.setLayoutAnimationEnabledExperimental(true);\r\n  }\r\n  //this is used to signified the component is abou tto be animated (like setState())\r\n  //could be used to define animation property\r\n  const updateLayout = (index) => {\r\n    LayoutAnimation.configureNext(LayoutAnimation.Presets.spring);\r\n    const array = [...finalData];\r\n\r\n    array[index][\"isExpanded\"] = !array[index][\"isExpanded\"];\r\n\r\n    setFinalData(array);\r\n  };\r\n\r\n  \r\n  return (\r\n    <View \r\n      style={{ flex: 2, alignItems: \"stretch\" }}\r\n    >\r\n      <SafeAreaView style={{ flex: 1 }}>\r\n        \r\n\r\n        <View style={styles.courseTitleBackground}>\r\n          <Text\r\n            style={{\r\n              fontSize: 25,\r\n              color: \"white\",\r\n              textAlign: \"center\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            {className}\r\n          </Text>\r\n        </View>\r\n\r\n \r\n        <ScrollView>\r\n          <View style={styles.lessContainer}>\r\n\r\n            <View style={styles.container}>\r\n              <View style={{ flexDirection: \"row\", padding: 10 }}>\r\n                <TouchableOpacity\r\n                  onPress={() => setMultiSelect(!multiSelect)}\r\n                ></TouchableOpacity>\r\n              </View>\r\n              <ScrollView>\r\n                {finalData.map((item, key) => (\r\n                  <StudentModuleView\r\n                    key={key}\r\n                    onClickFunction={() => {\r\n                      updateLayout(key);\r\n                    }}\r\n                    route = {route}\r\n                    navigation ={navigation}\r\n                    instructorID = {finalData[0].instructorID}\r\n                    item={item}\r\n                  />\r\n                  \r\n                ))}\r\n              </ScrollView>\r\n            </View>\r\n\r\n          </View>\r\n        </ScrollView>\r\n\r\n       \r\n      </SafeAreaView>\r\n      \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  courseTitleBackground: {\r\n    backgroundColor: \"#00bfff\",\r\n    padding: 20,\r\n  },\r\n  \r\n  editButton: {\r\n    alignSelf: 'flex-end',\r\n\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  width:80,\r\n  height:80,\r\n  paddingBottom:5,\r\n  position: \"absolute\",\r\n\r\n  borderRadius: 50,\r\n  backgroundColor: '#4970FA',\r\n  color: 'white',\r\n  right: 20,\r\n  bottom:40\r\n  },\r\n  titleStyle: {\r\n    color: \"white\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    width: 350,\r\n  },\r\n  titleText: {\r\n    flex: 1,\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n  },\r\n  menu: {\r\n    alignSelf: \"flex-start\",\r\n    justifyContent: \"center\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"#3385ff\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  lesson: {\r\n    backgroundColor: \"#3385ff\",\r\n    width: 75,\r\n    height: 75,\r\n    borderRadius: 75 / 2,\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  lessonCompletion: {\r\n    backgroundColor: \"#3385ff\",\r\n    width: 75,\r\n    height: 75,\r\n    borderRadius: 75 / 2,\r\n    alignSelf: \"center\",\r\n  },\r\n  lessContainer: {\r\n    flex: 20,\r\n    marginTop: 10,\r\n    width: 350,\r\n    alignSelf: \"center\",\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n    alignContent: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  lessonNum: {\r\n    backgroundColor: `#0000ff`,\r\n    marginTop: 50,\r\n    width: 80,\r\n    height: 25,\r\n    borderRadius: 78,\r\n  },\r\n  searchIcon: {\r\n    justifyContent: \"center\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  homeIcon: {\r\n    alignSelf: \"flex-start\",\r\n    marginLeft: 5,\r\n  },\r\n  settingIcon: {\r\n    alignSelf: \"center\",\r\n  },\r\n  profileIcon: {\r\n    alignSelf: \"flex-end\",\r\n    marginRight: 5,\r\n  },\r\n});","import * as React from 'react-native';\r\nimport {  useIsFocused } from \"@react-navigation/native\";\r\nimport { useState, useEffect } from 'react';\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\nimport { Avatar } from \"react-native-paper\";\r\nimport {Text, View,TouchableOpacity, StyleSheet, SafeAreaView,ScrollView} from 'react-native';\r\nimport {Divider} from 'react-native-paper';\r\n\r\nexport default function CourseDescriptionScreen({ navigation,route}){\r\n    \r\n    const {class_id,class_name, class_descrip, instructor_name} = route.params;\r\n\r\n    const [usersClasses,setUserClasses] = useState([]);\r\n    const isFocused = useIsFocused();\r\n    const apiConnection = new APIConnection();\r\n\r\n\r\n    useEffect(() => {\r\n      \r\n        if (isFocused) {\r\n            getClasses();\r\n            \r\n         \r\n        }\r\n\r\n    }, [isFocused]);\r\n    \r\n    \r\n    function signUp(){\r\n        apiConnection.signUpForClass(class_id);\r\n       \r\n        }\r\n\r\n\r\n    function getClasses(){\r\n        apiConnection.getClasses()\r\n        .then((json)=>{\r\n\r\n             setUserClasses(json);\r\n\r\n        }) ;       \r\n    }\r\n    \r\n   \r\n    \r\n   \r\n    function enrolled(){\r\n        let i= 0;\r\n\r\n        let bool = false;\r\n\r\n        while(i< usersClasses.length){\r\n        \r\n                if(usersClasses[i].class_id == class_id)\r\n                {       \r\n                   bool= true;\r\n                   alert('already enrolled');\r\n                    i = usersClasses.length;\r\n\r\n                }\r\n\r\n                else if(usersClasses[i].class_name == class_name){\r\n                   alert('Cannot add class with exact same name');\r\n                   i = usersClasses.length;\r\n                   bool = true;\r\n                }\r\n      \r\n                    else {\r\n                 \r\n                        bool = false;\r\n                       \r\n                    }\r\n                   \r\n                    \r\n                \r\n                i++;\r\n                \r\n           }\r\n            return bool;\r\n   \r\n        \r\n    }\r\n\r\n\r\n    return(\r\n        \r\n       \r\n        <View style={{flex:1,backgroundColor:'#3385ff', \r\n        justifyContent:'center',  alignItems:'center'}}>\r\n        \r\n            <SafeAreaView>\r\n\r\n                {/* White card container View */}\r\n            <View style={styles.card }>\r\n                        {/* View container for avatar and instructor name  */}\r\n                <View style={{flexDirection:'column', marginLeft: 20, marginTop: 40, maxWidth:90, height: 120}}>\r\n\r\n                <Avatar.Image\r\n                size={90}\r\n                style={styles.shadowOverlay}\r\n                source={ require('./icons/appProfile.png')}\r\n                /> \r\n                    <Text> Instructor Name :{instructor_name} </Text>\r\n                </View>\r\n                \r\n\r\n                   \r\n                <View style={{flex:1,flexGrow: 1,flexDirection:'column', height:240}}>\r\n\r\n                    <View style={{height: 180,marginTop:40, \r\n                    marginBottom:10, marginLeft: 30}}>\r\n\r\n                    <Text  style={styles.courseDescript}>Course Description</Text>\r\n                    <Divider/>\r\n\r\n                <ScrollView>\r\n                           \r\n                    <View >\r\n\r\n                        <Text style={{fontSize:14, fontWeight:'normal'}}> \r\n                         {class_descrip}\r\n                          </Text>\r\n                    </View>\r\n                            </ScrollView>\r\n                       \r\n                </View>\r\n                     \r\n                   \r\n                    {/* *button so student can enroll in a specific course */}\r\n                    <View style ={{marginLeft: 40,\r\n                            marginTop:5, flexDirection:'column'}}>\r\n                                \r\n                    <TouchableOpacity  style ={styles.enroll} onPress={()=>\r\n                    { \r\n                        let a =  enrolled();\r\n                        if(a== true ) {\r\n                   \r\n                }\r\n                else {\r\n                    signUp();\r\n                    alert('Enrollment Accepted')\r\n                    console.log(class_id);\r\n                    navigation.navigate('Student Course View',{\r\n                        classDesc: class_descrip,\r\n                        classId:class_id,\r\n                         className: class_name\r\n                });\r\n                   }}}>\r\n                            <Text style={styles.text}>\r\n                                Enroll\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                        </View>\r\n                </View>\r\n            </View>\r\n                 \r\n        \r\n        </SafeAreaView>\r\n        </View>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    card:{\r\n        alignSelf:'center',\r\n         width: 350, \r\n        height: 300, \r\n        borderRadius: 40,\r\n        marginLeft:50, \r\n        marginRight:50,\r\n        marginTop:50, \r\n        backgroundColor:'white',\r\n        flexDirection:'row',\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 5,\r\n        },\r\n        shadowOpacity: 0.36,\r\n        shadowRadius: 6.68,\r\n        elevation: 11  \r\n    },\r\n    shadowOverlay:{\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 5,\r\n        },\r\n        shadowOpacity: 0.36,\r\n        shadowRadius: 6.68,\r\n        elevation: 11  \r\n    },\r\n    courseDescript:{\r\n        fontWeight:\"500\",\r\n        fontSize:20,\r\n       \r\n    },\r\n    text:{\r\n        fontSize:30,\r\n        color:'white',\r\n\r\n\r\n    },\r\n    enroll:{\r\n        alignItems:'center',\r\n        backgroundColor:'blue',\r\n        borderRadius:25,\r\n        width: 100,\r\n        height: 50,\r\n    }\r\n})","import React from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\n\r\nimport StudentDashboard from './StudentDashboard'\r\nimport TabsStudentUnitView from './TabsStudentUnitView'\r\nimport StudentLessonView from './StudentLessonView'\r\nimport StudentCourseView from './StudentCourseView'\r\nimport CourseDescriptionScreen from './StudentCourseDescription'\r\n\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function DashBoardStackNavigatorStudent(navigation) {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: true,\r\n    }}>\r\n\r\n<Stack.Screen name=\"Student Dashboard\" component={StudentDashboard} options={{ headerShown: false }}/>\r\n \r\n      <Stack.Screen name=\"Student Content View Tab\" component={TabsStudentUnitView} options={{ headerShown: true }}/>\r\n      <Stack.Screen name=\"Course Description\" component={CourseDescriptionScreen}/>\r\n     <Stack.Screen name=\"Student Course View\" component={StudentCourseView} />\r\n     <Stack.Screen name=\"Lesson View\" component={StudentLessonView}/>\r\n      \r\n\r\n      \r\n\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { Children, useEffect, useLayoutEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Alert,\r\n  StyleSheet,\r\n  Button,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport { Card } from \"react-native-paper\";\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\n\r\nexport default function StudentClassSearchScreenTest({ navigation }) {\r\n  //-------------------API Fetch code-------------------------\r\n\r\n  const isFocused = useIsFocused();\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const apiConnection = new APIConnection();\r\n\r\n\r\n  //--------------------------------------------\r\n\r\n\r\n\r\n\r\n  function processSearchResult(json)\r\n  {\r\n\r\n    let resultID = [];\r\n    let result = [];\r\n    for(let i = 0; i< json.length; i++)\r\n    {\r\n      if(!resultID.includes(json[i].class_id))\r\n      {\r\n          resultID.push(json[i].class_id);\r\n          result.push(json[i])\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n\r\n\r\n  function searchAPI(keyword) {\r\n    if (keyword == \"\") {\r\n      alert('Enter class name');\r\n    }\r\n    else {\r\n      apiConnection.getSearchClassResultSearchScreen(keyword).then((json) => {\r\n        console.log(\"Class search debug \" + json);\r\n        let processed = processSearchResult(json);\r\n\r\n        setData(processed);\r\n      });\r\n    }\r\n  }\r\n  function onCoursePress(course_id, course_name, course_descrip, instructor_name) {\r\n    navigation.navigate(\"Dashboard\",\r\n      {\r\n        screen: 'Course Description',\r\n        params: {\r\n          class_id: course_id,\r\n          class_name: course_name,\r\n          class_descrip: course_descrip,\r\n          instructor_name: instructor_name\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.content}>\r\n      <Text style={styles.title}> Discover Classes </Text>\r\n\r\n        <TextInput\r\n          style={search.searchHolder}\r\n          placeholder={\"Enter Class\"}\r\n          onChangeText={(newText) => setSearchTerm(newText)}\r\n          defaultValue={searchTerm}\r\n        />\r\n\r\n        <View >\r\n          <TouchableOpacity style={search.searchBttn}onPress={() => searchAPI(searchTerm)}>\r\n            <Text style={search.searchText}>Search</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n      </View>\r\n\r\n      <ScrollView style={{ backgroundColor: '#4970FA' }} contentContainerStyle={styles.content}>\r\n        {/* { {Data.filter((val)=>{\r\n            if (searchTerm == \"\") {\r\n              return val\r\n            } else if (val.CourseTitle.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n              return val\r\n            } \r\n            \r\n          }).map((item,key) => {\r\n            return (\r\n            <TouchableOpacity key={key}> \r\n              <Text style = {styles.boxes}>\r\n                {item.CourseTitle}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            )})} }  */}\r\n\r\n        {data.length > 0 && data.map((item, key) => {\r\n          return (\r\n            // <TouchableOpacity key={key}\r\n            // onPress={() => onCoursePress(item.class_id, item.class_name, item.class_descrip, item.instructor_name)}\r\n            // >\r\n\r\n            //   <Text style={styles.boxes}>\r\n            //     {'Class Name: '+item.class_name +'\\n' +\r\n            //     '--------------------'+'\\n'+\r\n            //     'Class description: '+ item.class_descrip +'\\n'+ \r\n            //     '--------------------'+'\\n'+\r\n            //     'instructor: '+ item.instructor_name + '\\n' + \"the end of this \"}\r\n            //   </Text>\r\n\r\n            // </TouchableOpacity>\r\n            <Card key={item.class_id} style={styles.gridItem} >\r\n              <TouchableOpacity onPress={() => onCoursePress(item.class_id, item.class_name, item.class_descrip, item.instructor_name)}>\r\n\r\n              <Card.Cover style={{height:'50%'}} source={{uri: 'https://picsum.photos/700' }}/>\r\n                <Card.Content  adjustsFontSizeToFit>\r\n\r\n                  <Text  style={{textAlign:'center',fontSize:16}}adjustsFontSizeToFit>\r\n                    { item.class_name +'\\n' +\r\n                      'instructor: ' + item.instructor_name}\r\n                  </Text>\r\n\r\n                </Card.Content>\r\n              </TouchableOpacity>\r\n            </Card>\r\n          );\r\n        })}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  gridItem: {\r\n    flex: 1,\r\n    margin: 16,\r\n    width: '65%',\r\n    height: 150,\r\n    borderRadius: 8,\r\n    elevation: 4,\r\n    backgroundColor: 'white',\r\n    color: 'white',\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.25,\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 8,\r\n    overflow: Platform.OS === 'android' ? 'hidden' : 'visible',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#E8EAED\",\r\n  },\r\n\r\n  content: {\r\n     alignItems: \"center\",\r\n     marginBottom:20\r\n\r\n  },\r\n\r\n  title: {\r\n\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    color: \"black\",\r\n    marginTop: 50,\r\n    // marginBottom: 50,\r\n\r\n  },\r\n\r\n  boxes: {\r\n    //padding: 30,\r\n    marginTop: 10,\r\n    fontWeight: 'bold',\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    width: 300,\r\n    height: 200,\r\n    textAlign: \"center\",\r\n\r\n    alignItems: \"center\",\r\n\r\n    //top: 10,\r\n  },\r\n});\r\n\r\nconst search = StyleSheet.create({\r\n  searchHolder: {\r\n    position: \"relative\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: \"white\",\r\n    borderColor: \"#C0C0C0\",\r\n    bottom: 0,\r\n    borderWidth: 1,\r\n    borderRadius: 60,\r\n    width: 250,\r\n    marginTop: 10,\r\n    right: 50,\r\n  },\r\n\r\n  searchBttn: {\r\n    width: 100,\r\n    position: \"absolute\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 60,\r\n    backgroundColor: \"#4970FA\",\r\n    color: \"white\",\r\n    alignItems: \"center\",\r\n    left: 80,\r\n    bottom: 0,\r\n  },\r\n\r\n  searchText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});","import React from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport InstructorHome from './StudentHome'\r\nimport StudentHome from './StudentHome'\r\nimport StudentClassSearchScreenTest from './StudentHome'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function HomeStackNavigatorStudent({navigation})  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"Student Home\" component={StudentClassSearchScreenTest} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import { useIsFocused } from \"@react-navigation/native\";\r\nimport React, { useState, useLayoutEffect, useEffect, useRef } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Text,\r\n  StyleSheet,\r\n  FlatList,\r\n} from \"react-native\";\r\nimport { Avatar } from \"react-native-elements\";\r\nimport { FAB} from 'react-native-paper'; \r\nimport Icon from 'react-native-vector-icons/AntDesign';\r\nimport APIConnection from \"../../../utility/APIConnection\";\r\n\r\nexport default function StudentProfile({navigation}) {\r\n\r\n  const isFocused = useIsFocused();\r\n  const [data, setData] = useState([]);\r\n  const [classData, setClassData] = useState([]);\r\n  const apiConnection = new APIConnection();\r\n\r\n\r\n  const mounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n      mounted.current = true;\r\n      \r\n\r\n\r\n      return () => {\r\n          mounted.current = false;\r\n          \r\n      };\r\n  }, []);\r\n\r\n  /*useLayoutEffect(() => {\r\n    if (isFocused) {\r\n      apiConnection.getUserForProfilePage().then((json) => {\r\n        setData(json);\r\n      });\r\n      apiConnection.getClasses().then((json) => {\r\n        setClassData(json);\r\n      });\r\n    }\r\n  }, [isFocused]);*/\r\n\r\n  const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n\r\n   if (isFocused) {  \r\n        apiConnection.getUserForProfilePage().then((json) => {\r\n          setData(json);\r\n          \r\n        });\r\n        apiConnection.getClasses().then((json) => {\r\n          setClassData(json);\r\n        \r\n          \r\n        });\r\n      }\r\n\r\n      \r\n    }, [isFocused])\r\n\r\n\r\n  const shadowOverlay = {\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.userInfo}>\r\n        <View style={{ flexDirection: \"row\", marginTop: 15 }}>\r\n          <Avatar\r\n            rounded\r\n            size={100}\r\n            containerStyle={shadowOverlay}\r\n            source={data.user_pp || require('../../UserProfile/icons/defaultAvatar.png')}\r\n          />      \r\n          <View style={{ marginLeft: 20 }}>\r\n            <Text\r\n              style={[\r\n                styles.title,\r\n                {\r\n                  marginTop: 15,\r\n                  marginBottom: 5\r\n                },\r\n              ]}\r\n            >\r\n              {data.user_name || 'user_name'}\r\n            </Text>\r\n            <View style={{flexDirection:\"row\"}}>\r\n              <Icon name=\"mail\" size={20} style={{paddingRight:5}}/>\r\n              <Text style={styles.caption}>{data.user_email || 'user_email'}</Text>\r\n            </View>\r\n              <View style={{flexDirection:\"row\"}}>\r\n                <Icon name=\"user\" size={20} style={{paddingRight:5}}/>\r\n              <Text\r\n                style={[styles.caption,{\r\n                    marginTop: 5,\r\n                  },\r\n                ]}\r\n              >\r\n              {'Student'}\r\n              </Text>\r\n              </View>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.userAbout}>\r\n          <Text style={styles.title}>About</Text>\r\n            <Text style={[styles.bioBox]}>\r\n              <Text style={styles.bioText}>\r\n                {data.user_bio || 'No information at this time.'}\r\n              </Text>\r\n            </Text>\r\n        </View>\r\n        <Text style={[styles.title, {textAlign:'center'}]}>Classes</Text>\r\n      </View>\r\n\r\n      <FlatList\r\n            keyExtractor={(item) => item.class_name}\r\n\r\n              data={classData}\r\n              numColumns={1}\r\n              renderItem={({item}) => (\r\n                <Text style={[styles.list]}>{item.class_name}</Text>\r\n              )}\r\n            />\r\n\r\n\r\n      <FAB\r\n        style={styles.fab}\r\n        icon=\"file-document-edit-outline\"\r\n        onPress={() => navigation.navigate('Edit Profile', {screen: 'InstructorEditProfile'})}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#E8EAED\",\r\n    flex: 1,\r\n  },\r\n\r\n  userInfo: {\r\n    paddingHorizontal: 30,\r\n    marginBottom: 25,\r\n    marginTop: 50\r\n  },\r\n\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  caption: {\r\n    fontSize: 14,\r\n    lineHeight: 14,\r\n    fontWeight: \"500\",\r\n  },\r\n\r\n  avatarShadow: {\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 5,\r\n    },\r\n    shadowOpacity: 0.36,\r\n    shadowRadius: 6.68,\r\n    elevation: 11\r\n  },\r\n\r\n\r\n  userAbout: {\r\n    marginTop: 15,\r\n  },\r\n\r\n  userClass: {\r\n    marginTop: 15,\r\n    alignSelf:'center'\r\n  },\r\n\r\n  bioBox: {\r\n    marginTop: 10,\r\n    padding:10,\r\n    borderRadius: 5,\r\n    borderColor: '#000',\r\n    borderWidth: 1,\r\n    backgroundColor:'#fff'\r\n  },\r\n\r\n  bioText: {\r\n    marginTop: 10,\r\n  },\r\n\r\n  list: { \r\n    textAlign:'center',\r\n    marginTop: 10,\r\n    alignItems: 'center',\r\n    fontWeight:\"bold\",\r\n    borderRadius:5,\r\n    padding:15,\r\n    borderWidth:.5,\r\n    backgroundColor: \"white\",\r\n    width:200,\r\n    marginRight:10,\r\n  },\r\n\r\n  fab: {\r\n    position: 'absolute',\r\n    margin: 16,\r\n    right: 0, \r\n    bottom: 0,\r\n    backgroundColor:'#4970FA'\r\n  }\r\n\r\n\r\n});\r\n","import React, { useContext } from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport { AuthContext } from '../../../store/AuthContext'\r\nimport IconButton from '../../../component/ui/IconButton'\r\nimport StudentProfile from './StudentProfile'\r\nimport StudentEditProfile from '../../UserProfile/EditProfile';\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function ProfileStackNavigatorStudent()  {\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"My Profile\" component={StudentProfile}  options={{\r\n        headerShown: false,\r\n          headerRight: ({ tintColor }) => (\r\n            <IconButton\r\n              icon=\"exit\"\r\n              color={tintColor}\r\n              size={24}\r\n              onPress={authCtx.logout}\r\n            />\r\n          ),\r\n        }} />\r\n        \r\n        <Stack.Screen name=\"Edit Profile\" component={StudentEditProfile} options={{headerShown:true}}/>\r\n\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { ScrollView, View, Text, StyleSheet} from \"react-native\";\r\nimport {Button, Divider} from \"react-native-paper\";\r\nimport { AuthContext } from '../../../store/AuthContext'\r\n\r\nexport default function StudentSetting({navigation}) {\r\n  \r\n    const authCtx = useContext(AuthContext);\r\n\r\n\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            <Text style={styles.title}>Settings</Text>\r\n            <View style={styles.actions}>\r\n\r\n                <Button icon=\"email\" \r\n                mode=\"contained\" \r\n                style={styles.buttons}\r\n                onPress={() => navigation.navigate('Change Email', {screen: 'ChangeEmail'})}\r\n                >Change Email</Button>\r\n\r\n                <Button \r\n                icon=\"lock\" \r\n                mode=\"contained\" \r\n                style={styles.buttons}\r\n                onPress={() => navigation.navigate('Change Password', {screen: 'ChangePassword'})}\r\n                >Change Password</Button>\r\n\r\n                <Divider style={{\r\n                    marginTop: 50,\r\n                    marginLeft: 35,\r\n                    marginRight: 35\r\n                }}/>\r\n\r\n                <Button \r\n                icon=\"door\" \r\n                mode=\"contained\" \r\n                style={[styles.buttons,{\r\n                    backgroundColor: '#cf3a29',\r\n                    marginTop: 60\r\n                }]}\r\n                onPress={authCtx.logout}\r\n                >Log Out</Button>\r\n                \r\n            </View>\r\n        </ScrollView>\r\n        \r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create ({\r\n    container: {\r\n        backgroundColor: '#E8EAED',\r\n        flex: 1\r\n     \r\n    },\r\n\r\n    title: { \r\n        fontSize: 30,\r\n        fontWeight: 'bold',\r\n        color: \"#4970FA\",\r\n        marginTop: 15,\r\n        marginLeft: 15\r\n    },\r\n\r\n    actions: {\r\n        marginTop: 15\r\n    },\r\n\r\n    buttons: {\r\n        marginTop: 15,\r\n        marginLeft: 35,\r\n        marginRight:35,\r\n        backgroundColor: \"#4970FA\"\r\n    }\r\n\r\n\r\n\r\n    \r\n})\r\n","import React from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport StudentSetting from './StudentSetting';\r\nimport ChangePassword from '../../changeAuth/ChangePassword';\r\nimport ChangeEmail from '../../changeAuth/ChangeEmail';\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function SettingStackNavigatorStudent()  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"Setting\" component={StudentSetting} />\r\n      <Stack.Screen name=\"Change Password\" component={ChangePassword} />\r\n      <Stack.Screen name=\"Change Email\" component={ChangeEmail} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport Welcome from '../../../component/Welcome'\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\n\r\nexport default function WelcomeStackNavigatorStudent()  {\r\n  return (\r\n    <Stack.Navigator screenOptions={{\r\n      headerShown: false,\r\n    }}>\r\n      <Stack.Screen name=\"WelcomeStudent\" component={Welcome} />\r\n          </Stack.Navigator>\r\n  )\r\n}","import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport DashBoardStackNavigatorStudent from \"./DashBoardStackNavigator/DashBoardStackNavigatorStudent\";\r\nimport HomeStackNavigatorStudent from \"./HomeStackNavigator/HomeStackNavigatorStudent\";\r\nimport ProfileStackNavigatorStudent from \"./ProfileStackNavigator/ProfileStackNavigatorStudent\";\r\nimport SettingStackNavigatorStudent from \"./SettingsStackNavigator/SettingStackNavigatorStudent\";\r\nimport React, { useState, useContext } from 'react';\r\n\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport WelcomeStackNavigatorStudent from \"./WelcomeStudentStack.js/WelcomeStackNavigationInstructor\";\r\n\r\nconst Tab = createBottomTabNavigator()\r\n\r\n\r\nexport default function StudentMainScreenTabs({ navigation }) {\r\n    return (\r\n      (\r\n        <Tab.Navigator screenOptions={{\r\n          headerShown: false,\r\n        }}>\r\n           <Tab.Screen \r\n            name=\"welcome\" \r\n            component={WelcomeStackNavigatorStudent} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='asterisk' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n\r\n          />\r\n\r\n          <Tab.Screen \r\n            name=\"Dashboard\" \r\n            component={DashBoardStackNavigatorStudent} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='view-dashboard' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n\r\n          />\r\n\r\n          <Tab.Screen \r\n            name=\"Search\" \r\n            component={HomeStackNavigatorStudent} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='magnify' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n          />\r\n        \r\n          <Tab.Screen \r\n            name=\"Profile\" \r\n            component={ProfileStackNavigatorStudent} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='account-circle-outline' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n          />\r\n          <Tab.Screen \r\n            name=\"Settings\" \r\n            component={SettingStackNavigatorStudent} \r\n            options={{\r\n              tabBarIcon: ({focused}) => (\r\n                <MaterialCommunityIcons name='cog-outline' color={'#4970FA'} size={20}/>\r\n              ),\r\n            }}\r\n          />\r\n\r\n        </Tab.Navigator>\r\n      )\r\n      );\r\n    \r\n}","import * as React from \"react\";\r\nimport {StatusBar} from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport LogInScreen from \"./src/screens/LogInScreen\";\r\nimport SignUpScreen from \"./src/screens/SignUpScreen\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport AuthContextProvider, { AuthContext } from \"./src/store/AuthContext\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport InstructorMainScreenTabs from \"./src/screens/InstructorScreens/InstructorMainScreenTabs\";\r\n\r\n//import CreateContent from \"./src/screens/InstructorScreens/DashBoardStackNavigator/CreateContentScreen\";\r\n\r\nimport StudentMainScreenTabs from \"./src/screens/StudentScreens/StudentMainScreenTabs\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction AuthStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerStyle: { backgroundColor: '#4970FA'},\r\n        headerTintColor: \"white\",\r\n        contentStyle: { backgroundColor: \"white\" },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"LogIn\"\r\n        component={LogInScreen}\r\n        options={{ headerShown: false  }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"SignUp\"\r\n        component={SignUpScreen}\r\n        options={{ title: \"Sign Up\",color: '#4970FA', headerTitleAlign: 'center' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction AuthenticatedStack() {\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  if(authCtx.user_type == 'student')\r\n  {\r\n    return (\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"StudentMainScreen\"\r\n          component={StudentMainScreenTabs}\r\n          options={{ headerShown: false }}\r\n        />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n  else if (authCtx.user_type == 'instructor')\r\n  {\r\n    return (\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"InstructorMainScreen\"\r\n          component={InstructorMainScreenTabs}\r\n          options={{ headerShown: false }}\r\n        />\r\n      </Stack.Navigator>\r\n    );\r\n  }\r\n\r\n  else {return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"InstructorMainScreen\"\r\n        component={InstructorMainScreenTabs}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </Stack.Navigator>\r\n  );}\r\n\r\n\r\n}\r\n\r\nfunction Navigation() {\r\n  const authCtx = useContext(AuthContext);\r\n  //check isAuthenticated using authcontext\r\n  //if is authenticated, allow access to authenticated stack, otherwise, authstack\r\n  return (\r\n    <NavigationContainer>\r\n      {!authCtx.isAuthenticated && <AuthStack />}\r\n      {authCtx.isAuthenticated && <AuthenticatedStack />}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction Root() {\r\n  const [isTryingLogin, setIsTryingLogin] = useState(true);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  //the first thing to do inroot is to check for token from async\r\n  //if there is a token, then set authcontext to appropriate values\r\n\r\n  useEffect(() => {\r\n    async function fetchToken() {\r\n      const storedToken = await AsyncStorage.getItem(\"token\");\r\n      const storedUserID = await AsyncStorage.getItem(\"user_id\");\r\n\r\n      const storedUserType = await AsyncStorage.getItem(\"user_type\");\r\n\r\n      // console.log(\"Hi\");\r\n      if (storedToken && storedUserID && storedUserType) {\r\n        authCtx.authenticate(storedToken, storedUserID, storedUserType );\r\n      }\r\n\r\n      setIsTryingLogin(false);\r\n      //  await AsyncStorage.setItem('token', \"bstoken\");\r\n\r\n    }\r\n\r\n    fetchToken();\r\n     // authCtx.logout();\r\n\r\n\r\n  }, []);\r\n\r\n  //the loading icon \r\n  if (isTryingLogin) {\r\n    return <AppLoading />;\r\n  }\r\n  return <Navigation />;\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <StatusBar style=\"light\" />\r\n      <AuthContextProvider>\r\n        <Root />\r\n      </AuthContextProvider>\r\n    </>\r\n  );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/appProfile.ee747da8.png\";"],"sourceRoot":""}